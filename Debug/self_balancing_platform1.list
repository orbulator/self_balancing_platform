
self_balancing_platform1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004594  080001f8  080001f8  000011f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000037c  08004790  08004790  00005790  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b0c  08004b0c  000061c8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004b0c  08004b0c  00005b0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b14  08004b14  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b14  08004b14  00005b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004b18  08004b18  00005b18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  08004b1c  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000019c  200001c8  08004ce4  000061c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000364  08004ce4  00006364  2**0
                  ALLOC
 11 .ARM.attributes 00000036  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000028ea  00000000  00000000  000061fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000788  00000000  00000000  00008ae8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000210  00000000  00000000  00009270  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000017a  00000000  00000000  00009480  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001f4e4  00000000  00000000  000095fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002eb3  00000000  00000000  00028ade  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000fd959  00000000  00000000  0002b991  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001292ea  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000018fc  00000000  00000000  00129330  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000076  00000000  00000000  0012ac2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	@ (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	@ (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	@ (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	200001c8 	.word	0x200001c8
 8000214:	00000000 	.word	0x00000000
 8000218:	08004774 	.word	0x08004774

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	@ (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	@ (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	@ (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	200001cc 	.word	0x200001cc
 8000234:	08004774 	.word	0x08004774

08000238 <strlen>:
 8000238:	4603      	mov	r3, r0
 800023a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800023e:	2a00      	cmp	r2, #0
 8000240:	d1fb      	bne.n	800023a <strlen+0x2>
 8000242:	1a18      	subs	r0, r3, r0
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr

08000248 <__aeabi_drsub>:
 8000248:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 800024c:	e002      	b.n	8000254 <__adddf3>
 800024e:	bf00      	nop

08000250 <__aeabi_dsub>:
 8000250:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000254 <__adddf3>:
 8000254:	b530      	push	{r4, r5, lr}
 8000256:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800025a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800025e:	ea94 0f05 	teq	r4, r5
 8000262:	bf08      	it	eq
 8000264:	ea90 0f02 	teqeq	r0, r2
 8000268:	bf1f      	itttt	ne
 800026a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800026e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000272:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000276:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800027a:	f000 80e2 	beq.w	8000442 <__adddf3+0x1ee>
 800027e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000282:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000286:	bfb8      	it	lt
 8000288:	426d      	neglt	r5, r5
 800028a:	dd0c      	ble.n	80002a6 <__adddf3+0x52>
 800028c:	442c      	add	r4, r5
 800028e:	ea80 0202 	eor.w	r2, r0, r2
 8000292:	ea81 0303 	eor.w	r3, r1, r3
 8000296:	ea82 0000 	eor.w	r0, r2, r0
 800029a:	ea83 0101 	eor.w	r1, r3, r1
 800029e:	ea80 0202 	eor.w	r2, r0, r2
 80002a2:	ea81 0303 	eor.w	r3, r1, r3
 80002a6:	2d36      	cmp	r5, #54	@ 0x36
 80002a8:	bf88      	it	hi
 80002aa:	bd30      	pophi	{r4, r5, pc}
 80002ac:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002b0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002b4:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002b8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002bc:	d002      	beq.n	80002c4 <__adddf3+0x70>
 80002be:	4240      	negs	r0, r0
 80002c0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002c4:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80002c8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002cc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002d0:	d002      	beq.n	80002d8 <__adddf3+0x84>
 80002d2:	4252      	negs	r2, r2
 80002d4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002d8:	ea94 0f05 	teq	r4, r5
 80002dc:	f000 80a7 	beq.w	800042e <__adddf3+0x1da>
 80002e0:	f1a4 0401 	sub.w	r4, r4, #1
 80002e4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002e8:	db0d      	blt.n	8000306 <__adddf3+0xb2>
 80002ea:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ee:	fa22 f205 	lsr.w	r2, r2, r5
 80002f2:	1880      	adds	r0, r0, r2
 80002f4:	f141 0100 	adc.w	r1, r1, #0
 80002f8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002fc:	1880      	adds	r0, r0, r2
 80002fe:	fa43 f305 	asr.w	r3, r3, r5
 8000302:	4159      	adcs	r1, r3
 8000304:	e00e      	b.n	8000324 <__adddf3+0xd0>
 8000306:	f1a5 0520 	sub.w	r5, r5, #32
 800030a:	f10e 0e20 	add.w	lr, lr, #32
 800030e:	2a01      	cmp	r2, #1
 8000310:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000314:	bf28      	it	cs
 8000316:	f04c 0c02 	orrcs.w	ip, ip, #2
 800031a:	fa43 f305 	asr.w	r3, r3, r5
 800031e:	18c0      	adds	r0, r0, r3
 8000320:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000324:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000328:	d507      	bpl.n	800033a <__adddf3+0xe6>
 800032a:	f04f 0e00 	mov.w	lr, #0
 800032e:	f1dc 0c00 	rsbs	ip, ip, #0
 8000332:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000336:	eb6e 0101 	sbc.w	r1, lr, r1
 800033a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 800033e:	d31b      	bcc.n	8000378 <__adddf3+0x124>
 8000340:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000344:	d30c      	bcc.n	8000360 <__adddf3+0x10c>
 8000346:	0849      	lsrs	r1, r1, #1
 8000348:	ea5f 0030 	movs.w	r0, r0, rrx
 800034c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000350:	f104 0401 	add.w	r4, r4, #1
 8000354:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000358:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800035c:	f080 809a 	bcs.w	8000494 <__adddf3+0x240>
 8000360:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000364:	bf08      	it	eq
 8000366:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800036a:	f150 0000 	adcs.w	r0, r0, #0
 800036e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000372:	ea41 0105 	orr.w	r1, r1, r5
 8000376:	bd30      	pop	{r4, r5, pc}
 8000378:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800037c:	4140      	adcs	r0, r0
 800037e:	eb41 0101 	adc.w	r1, r1, r1
 8000382:	3c01      	subs	r4, #1
 8000384:	bf28      	it	cs
 8000386:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800038a:	d2e9      	bcs.n	8000360 <__adddf3+0x10c>
 800038c:	f091 0f00 	teq	r1, #0
 8000390:	bf04      	itt	eq
 8000392:	4601      	moveq	r1, r0
 8000394:	2000      	moveq	r0, #0
 8000396:	fab1 f381 	clz	r3, r1
 800039a:	bf08      	it	eq
 800039c:	3320      	addeq	r3, #32
 800039e:	f1a3 030b 	sub.w	r3, r3, #11
 80003a2:	f1b3 0220 	subs.w	r2, r3, #32
 80003a6:	da0c      	bge.n	80003c2 <__adddf3+0x16e>
 80003a8:	320c      	adds	r2, #12
 80003aa:	dd08      	ble.n	80003be <__adddf3+0x16a>
 80003ac:	f102 0c14 	add.w	ip, r2, #20
 80003b0:	f1c2 020c 	rsb	r2, r2, #12
 80003b4:	fa01 f00c 	lsl.w	r0, r1, ip
 80003b8:	fa21 f102 	lsr.w	r1, r1, r2
 80003bc:	e00c      	b.n	80003d8 <__adddf3+0x184>
 80003be:	f102 0214 	add.w	r2, r2, #20
 80003c2:	bfd8      	it	le
 80003c4:	f1c2 0c20 	rsble	ip, r2, #32
 80003c8:	fa01 f102 	lsl.w	r1, r1, r2
 80003cc:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003d0:	bfdc      	itt	le
 80003d2:	ea41 010c 	orrle.w	r1, r1, ip
 80003d6:	4090      	lslle	r0, r2
 80003d8:	1ae4      	subs	r4, r4, r3
 80003da:	bfa2      	ittt	ge
 80003dc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003e0:	4329      	orrge	r1, r5
 80003e2:	bd30      	popge	{r4, r5, pc}
 80003e4:	ea6f 0404 	mvn.w	r4, r4
 80003e8:	3c1f      	subs	r4, #31
 80003ea:	da1c      	bge.n	8000426 <__adddf3+0x1d2>
 80003ec:	340c      	adds	r4, #12
 80003ee:	dc0e      	bgt.n	800040e <__adddf3+0x1ba>
 80003f0:	f104 0414 	add.w	r4, r4, #20
 80003f4:	f1c4 0220 	rsb	r2, r4, #32
 80003f8:	fa20 f004 	lsr.w	r0, r0, r4
 80003fc:	fa01 f302 	lsl.w	r3, r1, r2
 8000400:	ea40 0003 	orr.w	r0, r0, r3
 8000404:	fa21 f304 	lsr.w	r3, r1, r4
 8000408:	ea45 0103 	orr.w	r1, r5, r3
 800040c:	bd30      	pop	{r4, r5, pc}
 800040e:	f1c4 040c 	rsb	r4, r4, #12
 8000412:	f1c4 0220 	rsb	r2, r4, #32
 8000416:	fa20 f002 	lsr.w	r0, r0, r2
 800041a:	fa01 f304 	lsl.w	r3, r1, r4
 800041e:	ea40 0003 	orr.w	r0, r0, r3
 8000422:	4629      	mov	r1, r5
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	fa21 f004 	lsr.w	r0, r1, r4
 800042a:	4629      	mov	r1, r5
 800042c:	bd30      	pop	{r4, r5, pc}
 800042e:	f094 0f00 	teq	r4, #0
 8000432:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 8000436:	bf06      	itte	eq
 8000438:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 800043c:	3401      	addeq	r4, #1
 800043e:	3d01      	subne	r5, #1
 8000440:	e74e      	b.n	80002e0 <__adddf3+0x8c>
 8000442:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000446:	bf18      	it	ne
 8000448:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800044c:	d029      	beq.n	80004a2 <__adddf3+0x24e>
 800044e:	ea94 0f05 	teq	r4, r5
 8000452:	bf08      	it	eq
 8000454:	ea90 0f02 	teqeq	r0, r2
 8000458:	d005      	beq.n	8000466 <__adddf3+0x212>
 800045a:	ea54 0c00 	orrs.w	ip, r4, r0
 800045e:	bf04      	itt	eq
 8000460:	4619      	moveq	r1, r3
 8000462:	4610      	moveq	r0, r2
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	ea91 0f03 	teq	r1, r3
 800046a:	bf1e      	ittt	ne
 800046c:	2100      	movne	r1, #0
 800046e:	2000      	movne	r0, #0
 8000470:	bd30      	popne	{r4, r5, pc}
 8000472:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000476:	d105      	bne.n	8000484 <__adddf3+0x230>
 8000478:	0040      	lsls	r0, r0, #1
 800047a:	4149      	adcs	r1, r1
 800047c:	bf28      	it	cs
 800047e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000482:	bd30      	pop	{r4, r5, pc}
 8000484:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000488:	bf3c      	itt	cc
 800048a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800048e:	bd30      	popcc	{r4, r5, pc}
 8000490:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000494:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000498:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800049c:	f04f 0000 	mov.w	r0, #0
 80004a0:	bd30      	pop	{r4, r5, pc}
 80004a2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004a6:	bf1a      	itte	ne
 80004a8:	4619      	movne	r1, r3
 80004aa:	4610      	movne	r0, r2
 80004ac:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004b0:	bf1c      	itt	ne
 80004b2:	460b      	movne	r3, r1
 80004b4:	4602      	movne	r2, r0
 80004b6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004ba:	bf06      	itte	eq
 80004bc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004c0:	ea91 0f03 	teqeq	r1, r3
 80004c4:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80004c8:	bd30      	pop	{r4, r5, pc}
 80004ca:	bf00      	nop

080004cc <__aeabi_ui2d>:
 80004cc:	f090 0f00 	teq	r0, #0
 80004d0:	bf04      	itt	eq
 80004d2:	2100      	moveq	r1, #0
 80004d4:	4770      	bxeq	lr
 80004d6:	b530      	push	{r4, r5, lr}
 80004d8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004dc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004e0:	f04f 0500 	mov.w	r5, #0
 80004e4:	f04f 0100 	mov.w	r1, #0
 80004e8:	e750      	b.n	800038c <__adddf3+0x138>
 80004ea:	bf00      	nop

080004ec <__aeabi_i2d>:
 80004ec:	f090 0f00 	teq	r0, #0
 80004f0:	bf04      	itt	eq
 80004f2:	2100      	moveq	r1, #0
 80004f4:	4770      	bxeq	lr
 80004f6:	b530      	push	{r4, r5, lr}
 80004f8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004fc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000500:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000504:	bf48      	it	mi
 8000506:	4240      	negmi	r0, r0
 8000508:	f04f 0100 	mov.w	r1, #0
 800050c:	e73e      	b.n	800038c <__adddf3+0x138>
 800050e:	bf00      	nop

08000510 <__aeabi_f2d>:
 8000510:	0042      	lsls	r2, r0, #1
 8000512:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000516:	ea4f 0131 	mov.w	r1, r1, rrx
 800051a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800051e:	bf1f      	itttt	ne
 8000520:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 8000524:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000528:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 800052c:	4770      	bxne	lr
 800052e:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 8000532:	bf08      	it	eq
 8000534:	4770      	bxeq	lr
 8000536:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 800053a:	bf04      	itt	eq
 800053c:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000540:	4770      	bxeq	lr
 8000542:	b530      	push	{r4, r5, lr}
 8000544:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000548:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800054c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000550:	e71c      	b.n	800038c <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_ul2d>:
 8000554:	ea50 0201 	orrs.w	r2, r0, r1
 8000558:	bf08      	it	eq
 800055a:	4770      	bxeq	lr
 800055c:	b530      	push	{r4, r5, lr}
 800055e:	f04f 0500 	mov.w	r5, #0
 8000562:	e00a      	b.n	800057a <__aeabi_l2d+0x16>

08000564 <__aeabi_l2d>:
 8000564:	ea50 0201 	orrs.w	r2, r0, r1
 8000568:	bf08      	it	eq
 800056a:	4770      	bxeq	lr
 800056c:	b530      	push	{r4, r5, lr}
 800056e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000572:	d502      	bpl.n	800057a <__aeabi_l2d+0x16>
 8000574:	4240      	negs	r0, r0
 8000576:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800057a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800057e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000582:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000586:	f43f aed8 	beq.w	800033a <__adddf3+0xe6>
 800058a:	f04f 0203 	mov.w	r2, #3
 800058e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000592:	bf18      	it	ne
 8000594:	3203      	addne	r2, #3
 8000596:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800059a:	bf18      	it	ne
 800059c:	3203      	addne	r2, #3
 800059e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005a2:	f1c2 0320 	rsb	r3, r2, #32
 80005a6:	fa00 fc03 	lsl.w	ip, r0, r3
 80005aa:	fa20 f002 	lsr.w	r0, r0, r2
 80005ae:	fa01 fe03 	lsl.w	lr, r1, r3
 80005b2:	ea40 000e 	orr.w	r0, r0, lr
 80005b6:	fa21 f102 	lsr.w	r1, r1, r2
 80005ba:	4414      	add	r4, r2
 80005bc:	e6bd      	b.n	800033a <__adddf3+0xe6>
 80005be:	bf00      	nop

080005c0 <__aeabi_dmul>:
 80005c0:	b570      	push	{r4, r5, r6, lr}
 80005c2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005c6:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80005ca:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005ce:	bf1d      	ittte	ne
 80005d0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005d4:	ea94 0f0c 	teqne	r4, ip
 80005d8:	ea95 0f0c 	teqne	r5, ip
 80005dc:	f000 f8de 	bleq	800079c <__aeabi_dmul+0x1dc>
 80005e0:	442c      	add	r4, r5
 80005e2:	ea81 0603 	eor.w	r6, r1, r3
 80005e6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005ea:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ee:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005f2:	bf18      	it	ne
 80005f4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005f8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005fc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000600:	d038      	beq.n	8000674 <__aeabi_dmul+0xb4>
 8000602:	fba0 ce02 	umull	ip, lr, r0, r2
 8000606:	f04f 0500 	mov.w	r5, #0
 800060a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800060e:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 8000612:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000616:	f04f 0600 	mov.w	r6, #0
 800061a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800061e:	f09c 0f00 	teq	ip, #0
 8000622:	bf18      	it	ne
 8000624:	f04e 0e01 	orrne.w	lr, lr, #1
 8000628:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 800062c:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000630:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 8000634:	d204      	bcs.n	8000640 <__aeabi_dmul+0x80>
 8000636:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800063a:	416d      	adcs	r5, r5
 800063c:	eb46 0606 	adc.w	r6, r6, r6
 8000640:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000644:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000648:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800064c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000650:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000654:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000658:	bf88      	it	hi
 800065a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800065e:	d81e      	bhi.n	800069e <__aeabi_dmul+0xde>
 8000660:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000664:	bf08      	it	eq
 8000666:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800066a:	f150 0000 	adcs.w	r0, r0, #0
 800066e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000678:	ea46 0101 	orr.w	r1, r6, r1
 800067c:	ea40 0002 	orr.w	r0, r0, r2
 8000680:	ea81 0103 	eor.w	r1, r1, r3
 8000684:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000688:	bfc2      	ittt	gt
 800068a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800068e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000692:	bd70      	popgt	{r4, r5, r6, pc}
 8000694:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000698:	f04f 0e00 	mov.w	lr, #0
 800069c:	3c01      	subs	r4, #1
 800069e:	f300 80ab 	bgt.w	80007f8 <__aeabi_dmul+0x238>
 80006a2:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006a6:	bfde      	ittt	le
 80006a8:	2000      	movle	r0, #0
 80006aa:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006ae:	bd70      	pople	{r4, r5, r6, pc}
 80006b0:	f1c4 0400 	rsb	r4, r4, #0
 80006b4:	3c20      	subs	r4, #32
 80006b6:	da35      	bge.n	8000724 <__aeabi_dmul+0x164>
 80006b8:	340c      	adds	r4, #12
 80006ba:	dc1b      	bgt.n	80006f4 <__aeabi_dmul+0x134>
 80006bc:	f104 0414 	add.w	r4, r4, #20
 80006c0:	f1c4 0520 	rsb	r5, r4, #32
 80006c4:	fa00 f305 	lsl.w	r3, r0, r5
 80006c8:	fa20 f004 	lsr.w	r0, r0, r4
 80006cc:	fa01 f205 	lsl.w	r2, r1, r5
 80006d0:	ea40 0002 	orr.w	r0, r0, r2
 80006d4:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80006d8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006dc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006e0:	fa21 f604 	lsr.w	r6, r1, r4
 80006e4:	eb42 0106 	adc.w	r1, r2, r6
 80006e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ec:	bf08      	it	eq
 80006ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006f2:	bd70      	pop	{r4, r5, r6, pc}
 80006f4:	f1c4 040c 	rsb	r4, r4, #12
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f304 	lsl.w	r3, r0, r4
 8000700:	fa20 f005 	lsr.w	r0, r0, r5
 8000704:	fa01 f204 	lsl.w	r2, r1, r4
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000710:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000714:	f141 0100 	adc.w	r1, r1, #0
 8000718:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800071c:	bf08      	it	eq
 800071e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000722:	bd70      	pop	{r4, r5, r6, pc}
 8000724:	f1c4 0520 	rsb	r5, r4, #32
 8000728:	fa00 f205 	lsl.w	r2, r0, r5
 800072c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000730:	fa20 f304 	lsr.w	r3, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea43 0302 	orr.w	r3, r3, r2
 800073c:	fa21 f004 	lsr.w	r0, r1, r4
 8000740:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	fa21 f204 	lsr.w	r2, r1, r4
 8000748:	ea20 0002 	bic.w	r0, r0, r2
 800074c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f094 0f00 	teq	r4, #0
 8000760:	d10f      	bne.n	8000782 <__aeabi_dmul+0x1c2>
 8000762:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000766:	0040      	lsls	r0, r0, #1
 8000768:	eb41 0101 	adc.w	r1, r1, r1
 800076c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000770:	bf08      	it	eq
 8000772:	3c01      	subeq	r4, #1
 8000774:	d0f7      	beq.n	8000766 <__aeabi_dmul+0x1a6>
 8000776:	ea41 0106 	orr.w	r1, r1, r6
 800077a:	f095 0f00 	teq	r5, #0
 800077e:	bf18      	it	ne
 8000780:	4770      	bxne	lr
 8000782:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000786:	0052      	lsls	r2, r2, #1
 8000788:	eb43 0303 	adc.w	r3, r3, r3
 800078c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000790:	bf08      	it	eq
 8000792:	3d01      	subeq	r5, #1
 8000794:	d0f7      	beq.n	8000786 <__aeabi_dmul+0x1c6>
 8000796:	ea43 0306 	orr.w	r3, r3, r6
 800079a:	4770      	bx	lr
 800079c:	ea94 0f0c 	teq	r4, ip
 80007a0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007a4:	bf18      	it	ne
 80007a6:	ea95 0f0c 	teqne	r5, ip
 80007aa:	d00c      	beq.n	80007c6 <__aeabi_dmul+0x206>
 80007ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b0:	bf18      	it	ne
 80007b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007b6:	d1d1      	bne.n	800075c <__aeabi_dmul+0x19c>
 80007b8:	ea81 0103 	eor.w	r1, r1, r3
 80007bc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007c0:	f04f 0000 	mov.w	r0, #0
 80007c4:	bd70      	pop	{r4, r5, r6, pc}
 80007c6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007ca:	bf06      	itte	eq
 80007cc:	4610      	moveq	r0, r2
 80007ce:	4619      	moveq	r1, r3
 80007d0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007d4:	d019      	beq.n	800080a <__aeabi_dmul+0x24a>
 80007d6:	ea94 0f0c 	teq	r4, ip
 80007da:	d102      	bne.n	80007e2 <__aeabi_dmul+0x222>
 80007dc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007e0:	d113      	bne.n	800080a <__aeabi_dmul+0x24a>
 80007e2:	ea95 0f0c 	teq	r5, ip
 80007e6:	d105      	bne.n	80007f4 <__aeabi_dmul+0x234>
 80007e8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007ec:	bf1c      	itt	ne
 80007ee:	4610      	movne	r0, r2
 80007f0:	4619      	movne	r1, r3
 80007f2:	d10a      	bne.n	800080a <__aeabi_dmul+0x24a>
 80007f4:	ea81 0103 	eor.w	r1, r1, r3
 80007f8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007fc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000800:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000804:	f04f 0000 	mov.w	r0, #0
 8000808:	bd70      	pop	{r4, r5, r6, pc}
 800080a:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800080e:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 8000812:	bd70      	pop	{r4, r5, r6, pc}

08000814 <__aeabi_ddiv>:
 8000814:	b570      	push	{r4, r5, r6, lr}
 8000816:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800081a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800081e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000822:	bf1d      	ittte	ne
 8000824:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000828:	ea94 0f0c 	teqne	r4, ip
 800082c:	ea95 0f0c 	teqne	r5, ip
 8000830:	f000 f8a7 	bleq	8000982 <__aeabi_ddiv+0x16e>
 8000834:	eba4 0405 	sub.w	r4, r4, r5
 8000838:	ea81 0e03 	eor.w	lr, r1, r3
 800083c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000840:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000844:	f000 8088 	beq.w	8000958 <__aeabi_ddiv+0x144>
 8000848:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800084c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000850:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000854:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000858:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800085c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000860:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000864:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000868:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800086c:	429d      	cmp	r5, r3
 800086e:	bf08      	it	eq
 8000870:	4296      	cmpeq	r6, r2
 8000872:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000876:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800087a:	d202      	bcs.n	8000882 <__aeabi_ddiv+0x6e>
 800087c:	085b      	lsrs	r3, r3, #1
 800087e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000882:	1ab6      	subs	r6, r6, r2
 8000884:	eb65 0503 	sbc.w	r5, r5, r3
 8000888:	085b      	lsrs	r3, r3, #1
 800088a:	ea4f 0232 	mov.w	r2, r2, rrx
 800088e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000892:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000896:	ebb6 0e02 	subs.w	lr, r6, r2
 800089a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800089e:	bf22      	ittt	cs
 80008a0:	1ab6      	subcs	r6, r6, r2
 80008a2:	4675      	movcs	r5, lr
 80008a4:	ea40 000c 	orrcs.w	r0, r0, ip
 80008a8:	085b      	lsrs	r3, r3, #1
 80008aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008d8:	085b      	lsrs	r3, r3, #1
 80008da:	ea4f 0232 	mov.w	r2, r2, rrx
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008f0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008f4:	d018      	beq.n	8000928 <__aeabi_ddiv+0x114>
 80008f6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008fa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008fe:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000902:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000906:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800090a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800090e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000912:	d1c0      	bne.n	8000896 <__aeabi_ddiv+0x82>
 8000914:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000918:	d10b      	bne.n	8000932 <__aeabi_ddiv+0x11e>
 800091a:	ea41 0100 	orr.w	r1, r1, r0
 800091e:	f04f 0000 	mov.w	r0, #0
 8000922:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8000926:	e7b6      	b.n	8000896 <__aeabi_ddiv+0x82>
 8000928:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 800092c:	bf04      	itt	eq
 800092e:	4301      	orreq	r1, r0
 8000930:	2000      	moveq	r0, #0
 8000932:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000936:	bf88      	it	hi
 8000938:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800093c:	f63f aeaf 	bhi.w	800069e <__aeabi_dmul+0xde>
 8000940:	ebb5 0c03 	subs.w	ip, r5, r3
 8000944:	bf04      	itt	eq
 8000946:	ebb6 0c02 	subseq.w	ip, r6, r2
 800094a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800094e:	f150 0000 	adcs.w	r0, r0, #0
 8000952:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000956:	bd70      	pop	{r4, r5, r6, pc}
 8000958:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 800095c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000960:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000964:	bfc2      	ittt	gt
 8000966:	ebd4 050c 	rsbsgt	r5, r4, ip
 800096a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800096e:	bd70      	popgt	{r4, r5, r6, pc}
 8000970:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000974:	f04f 0e00 	mov.w	lr, #0
 8000978:	3c01      	subs	r4, #1
 800097a:	e690      	b.n	800069e <__aeabi_dmul+0xde>
 800097c:	ea45 0e06 	orr.w	lr, r5, r6
 8000980:	e68d      	b.n	800069e <__aeabi_dmul+0xde>
 8000982:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000986:	ea94 0f0c 	teq	r4, ip
 800098a:	bf08      	it	eq
 800098c:	ea95 0f0c 	teqeq	r5, ip
 8000990:	f43f af3b 	beq.w	800080a <__aeabi_dmul+0x24a>
 8000994:	ea94 0f0c 	teq	r4, ip
 8000998:	d10a      	bne.n	80009b0 <__aeabi_ddiv+0x19c>
 800099a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800099e:	f47f af34 	bne.w	800080a <__aeabi_dmul+0x24a>
 80009a2:	ea95 0f0c 	teq	r5, ip
 80009a6:	f47f af25 	bne.w	80007f4 <__aeabi_dmul+0x234>
 80009aa:	4610      	mov	r0, r2
 80009ac:	4619      	mov	r1, r3
 80009ae:	e72c      	b.n	800080a <__aeabi_dmul+0x24a>
 80009b0:	ea95 0f0c 	teq	r5, ip
 80009b4:	d106      	bne.n	80009c4 <__aeabi_ddiv+0x1b0>
 80009b6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009ba:	f43f aefd 	beq.w	80007b8 <__aeabi_dmul+0x1f8>
 80009be:	4610      	mov	r0, r2
 80009c0:	4619      	mov	r1, r3
 80009c2:	e722      	b.n	800080a <__aeabi_dmul+0x24a>
 80009c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009c8:	bf18      	it	ne
 80009ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009ce:	f47f aec5 	bne.w	800075c <__aeabi_dmul+0x19c>
 80009d2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009d6:	f47f af0d 	bne.w	80007f4 <__aeabi_dmul+0x234>
 80009da:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009de:	f47f aeeb 	bne.w	80007b8 <__aeabi_dmul+0x1f8>
 80009e2:	e712      	b.n	800080a <__aeabi_dmul+0x24a>

080009e4 <__gedf2>:
 80009e4:	f04f 3cff 	mov.w	ip, #4294967295
 80009e8:	e006      	b.n	80009f8 <__cmpdf2+0x4>
 80009ea:	bf00      	nop

080009ec <__ledf2>:
 80009ec:	f04f 0c01 	mov.w	ip, #1
 80009f0:	e002      	b.n	80009f8 <__cmpdf2+0x4>
 80009f2:	bf00      	nop

080009f4 <__cmpdf2>:
 80009f4:	f04f 0c01 	mov.w	ip, #1
 80009f8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009fc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a04:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a08:	bf18      	it	ne
 8000a0a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a0e:	d01b      	beq.n	8000a48 <__cmpdf2+0x54>
 8000a10:	b001      	add	sp, #4
 8000a12:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a16:	bf0c      	ite	eq
 8000a18:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a1c:	ea91 0f03 	teqne	r1, r3
 8000a20:	bf02      	ittt	eq
 8000a22:	ea90 0f02 	teqeq	r0, r2
 8000a26:	2000      	moveq	r0, #0
 8000a28:	4770      	bxeq	lr
 8000a2a:	f110 0f00 	cmn.w	r0, #0
 8000a2e:	ea91 0f03 	teq	r1, r3
 8000a32:	bf58      	it	pl
 8000a34:	4299      	cmppl	r1, r3
 8000a36:	bf08      	it	eq
 8000a38:	4290      	cmpeq	r0, r2
 8000a3a:	bf2c      	ite	cs
 8000a3c:	17d8      	asrcs	r0, r3, #31
 8000a3e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a42:	f040 0001 	orr.w	r0, r0, #1
 8000a46:	4770      	bx	lr
 8000a48:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a50:	d102      	bne.n	8000a58 <__cmpdf2+0x64>
 8000a52:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a56:	d107      	bne.n	8000a68 <__cmpdf2+0x74>
 8000a58:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a5c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a60:	d1d6      	bne.n	8000a10 <__cmpdf2+0x1c>
 8000a62:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a66:	d0d3      	beq.n	8000a10 <__cmpdf2+0x1c>
 8000a68:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a6c:	4770      	bx	lr
 8000a6e:	bf00      	nop

08000a70 <__aeabi_cdrcmple>:
 8000a70:	4684      	mov	ip, r0
 8000a72:	4610      	mov	r0, r2
 8000a74:	4662      	mov	r2, ip
 8000a76:	468c      	mov	ip, r1
 8000a78:	4619      	mov	r1, r3
 8000a7a:	4663      	mov	r3, ip
 8000a7c:	e000      	b.n	8000a80 <__aeabi_cdcmpeq>
 8000a7e:	bf00      	nop

08000a80 <__aeabi_cdcmpeq>:
 8000a80:	b501      	push	{r0, lr}
 8000a82:	f7ff ffb7 	bl	80009f4 <__cmpdf2>
 8000a86:	2800      	cmp	r0, #0
 8000a88:	bf48      	it	mi
 8000a8a:	f110 0f00 	cmnmi.w	r0, #0
 8000a8e:	bd01      	pop	{r0, pc}

08000a90 <__aeabi_dcmpeq>:
 8000a90:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a94:	f7ff fff4 	bl	8000a80 <__aeabi_cdcmpeq>
 8000a98:	bf0c      	ite	eq
 8000a9a:	2001      	moveq	r0, #1
 8000a9c:	2000      	movne	r0, #0
 8000a9e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa2:	bf00      	nop

08000aa4 <__aeabi_dcmplt>:
 8000aa4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa8:	f7ff ffea 	bl	8000a80 <__aeabi_cdcmpeq>
 8000aac:	bf34      	ite	cc
 8000aae:	2001      	movcc	r0, #1
 8000ab0:	2000      	movcs	r0, #0
 8000ab2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_dcmple>:
 8000ab8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000abc:	f7ff ffe0 	bl	8000a80 <__aeabi_cdcmpeq>
 8000ac0:	bf94      	ite	ls
 8000ac2:	2001      	movls	r0, #1
 8000ac4:	2000      	movhi	r0, #0
 8000ac6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aca:	bf00      	nop

08000acc <__aeabi_dcmpge>:
 8000acc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad0:	f7ff ffce 	bl	8000a70 <__aeabi_cdrcmple>
 8000ad4:	bf94      	ite	ls
 8000ad6:	2001      	movls	r0, #1
 8000ad8:	2000      	movhi	r0, #0
 8000ada:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ade:	bf00      	nop

08000ae0 <__aeabi_dcmpgt>:
 8000ae0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae4:	f7ff ffc4 	bl	8000a70 <__aeabi_cdrcmple>
 8000ae8:	bf34      	ite	cc
 8000aea:	2001      	movcc	r0, #1
 8000aec:	2000      	movcs	r0, #0
 8000aee:	f85d fb08 	ldr.w	pc, [sp], #8
 8000af2:	bf00      	nop

08000af4 <__aeabi_dcmpun>:
 8000af4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000af8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000afc:	d102      	bne.n	8000b04 <__aeabi_dcmpun+0x10>
 8000afe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b02:	d10a      	bne.n	8000b1a <__aeabi_dcmpun+0x26>
 8000b04:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b08:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b0c:	d102      	bne.n	8000b14 <__aeabi_dcmpun+0x20>
 8000b0e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b12:	d102      	bne.n	8000b1a <__aeabi_dcmpun+0x26>
 8000b14:	f04f 0000 	mov.w	r0, #0
 8000b18:	4770      	bx	lr
 8000b1a:	f04f 0001 	mov.w	r0, #1
 8000b1e:	4770      	bx	lr

08000b20 <__aeabi_d2iz>:
 8000b20:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b24:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b28:	d215      	bcs.n	8000b56 <__aeabi_d2iz+0x36>
 8000b2a:	d511      	bpl.n	8000b50 <__aeabi_d2iz+0x30>
 8000b2c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b30:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b34:	d912      	bls.n	8000b5c <__aeabi_d2iz+0x3c>
 8000b36:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b3a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b3e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b42:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b46:	fa23 f002 	lsr.w	r0, r3, r2
 8000b4a:	bf18      	it	ne
 8000b4c:	4240      	negne	r0, r0
 8000b4e:	4770      	bx	lr
 8000b50:	f04f 0000 	mov.w	r0, #0
 8000b54:	4770      	bx	lr
 8000b56:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b5a:	d105      	bne.n	8000b68 <__aeabi_d2iz+0x48>
 8000b5c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b60:	bf08      	it	eq
 8000b62:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b66:	4770      	bx	lr
 8000b68:	f04f 0000 	mov.w	r0, #0
 8000b6c:	4770      	bx	lr
 8000b6e:	bf00      	nop

08000b70 <__aeabi_d2uiz>:
 8000b70:	004a      	lsls	r2, r1, #1
 8000b72:	d211      	bcs.n	8000b98 <__aeabi_d2uiz+0x28>
 8000b74:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b78:	d211      	bcs.n	8000b9e <__aeabi_d2uiz+0x2e>
 8000b7a:	d50d      	bpl.n	8000b98 <__aeabi_d2uiz+0x28>
 8000b7c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b80:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b84:	d40e      	bmi.n	8000ba4 <__aeabi_d2uiz+0x34>
 8000b86:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b8a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b8e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b92:	fa23 f002 	lsr.w	r0, r3, r2
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d102      	bne.n	8000baa <__aeabi_d2uiz+0x3a>
 8000ba4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ba8:	4770      	bx	lr
 8000baa:	f04f 0000 	mov.w	r0, #0
 8000bae:	4770      	bx	lr

08000bb0 <__aeabi_d2f>:
 8000bb0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bb4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bb8:	bf24      	itt	cs
 8000bba:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bbe:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bc2:	d90d      	bls.n	8000be0 <__aeabi_d2f+0x30>
 8000bc4:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bc8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bcc:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bd0:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bd4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bd8:	bf08      	it	eq
 8000bda:	f020 0001 	biceq.w	r0, r0, #1
 8000bde:	4770      	bx	lr
 8000be0:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000be4:	d121      	bne.n	8000c2a <__aeabi_d2f+0x7a>
 8000be6:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bea:	bfbc      	itt	lt
 8000bec:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bf0:	4770      	bxlt	lr
 8000bf2:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bf6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bfa:	f1c2 0218 	rsb	r2, r2, #24
 8000bfe:	f1c2 0c20 	rsb	ip, r2, #32
 8000c02:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c06:	fa20 f002 	lsr.w	r0, r0, r2
 8000c0a:	bf18      	it	ne
 8000c0c:	f040 0001 	orrne.w	r0, r0, #1
 8000c10:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c14:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c18:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c1c:	ea40 000c 	orr.w	r0, r0, ip
 8000c20:	fa23 f302 	lsr.w	r3, r3, r2
 8000c24:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c28:	e7cc      	b.n	8000bc4 <__aeabi_d2f+0x14>
 8000c2a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c2e:	d107      	bne.n	8000c40 <__aeabi_d2f+0x90>
 8000c30:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c34:	bf1e      	ittt	ne
 8000c36:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c3a:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c3e:	4770      	bxne	lr
 8000c40:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c44:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c48:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c4c:	4770      	bx	lr
 8000c4e:	bf00      	nop

08000c50 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000c50:	b480      	push	{r7}
 8000c52:	b083      	sub	sp, #12
 8000c54:	af00      	add	r7, sp, #0
 8000c56:	4603      	mov	r3, r0
 8000c58:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000c5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c5e:	2b00      	cmp	r3, #0
 8000c60:	db0b      	blt.n	8000c7a <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c62:	79fb      	ldrb	r3, [r7, #7]
 8000c64:	f003 021f 	and.w	r2, r3, #31
 8000c68:	4907      	ldr	r1, [pc, #28]	@ (8000c88 <__NVIC_EnableIRQ+0x38>)
 8000c6a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c6e:	095b      	lsrs	r3, r3, #5
 8000c70:	2001      	movs	r0, #1
 8000c72:	fa00 f202 	lsl.w	r2, r0, r2
 8000c76:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000c7a:	bf00      	nop
 8000c7c:	370c      	adds	r7, #12
 8000c7e:	46bd      	mov	sp, r7
 8000c80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop
 8000c88:	e000e100 	.word	0xe000e100

08000c8c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000c8c:	b480      	push	{r7}
 8000c8e:	b083      	sub	sp, #12
 8000c90:	af00      	add	r7, sp, #0
 8000c92:	4603      	mov	r3, r0
 8000c94:	6039      	str	r1, [r7, #0]
 8000c96:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000c98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c9c:	2b00      	cmp	r3, #0
 8000c9e:	db0a      	blt.n	8000cb6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000ca0:	683b      	ldr	r3, [r7, #0]
 8000ca2:	b2da      	uxtb	r2, r3
 8000ca4:	490c      	ldr	r1, [pc, #48]	@ (8000cd8 <__NVIC_SetPriority+0x4c>)
 8000ca6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000caa:	0152      	lsls	r2, r2, #5
 8000cac:	b2d2      	uxtb	r2, r2
 8000cae:	440b      	add	r3, r1
 8000cb0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000cb4:	e00a      	b.n	8000ccc <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000cb6:	683b      	ldr	r3, [r7, #0]
 8000cb8:	b2da      	uxtb	r2, r3
 8000cba:	4908      	ldr	r1, [pc, #32]	@ (8000cdc <__NVIC_SetPriority+0x50>)
 8000cbc:	79fb      	ldrb	r3, [r7, #7]
 8000cbe:	f003 030f 	and.w	r3, r3, #15
 8000cc2:	3b04      	subs	r3, #4
 8000cc4:	0152      	lsls	r2, r2, #5
 8000cc6:	b2d2      	uxtb	r2, r2
 8000cc8:	440b      	add	r3, r1
 8000cca:	761a      	strb	r2, [r3, #24]
}
 8000ccc:	bf00      	nop
 8000cce:	370c      	adds	r7, #12
 8000cd0:	46bd      	mov	sp, r7
 8000cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cd6:	4770      	bx	lr
 8000cd8:	e000e100 	.word	0xe000e100
 8000cdc:	e000ed00 	.word	0xe000ed00

08000ce0 <main>:
bool    newData;

typedef struct { float a, out; } IFX_EMA;
IFX_EMA ema_x, ema_y;

int main() {
 8000ce0:	b580      	push	{r7, lr}
 8000ce2:	b0a4      	sub	sp, #144	@ 0x90
 8000ce4:	af00      	add	r7, sp, #0
	init_clks();
 8000ce6:	f000 fcb3 	bl	8001650 <init_clks>
	init_LPUART1();
 8000cea:	f000 fcf1 	bl	80016d0 <init_LPUART1>
	init_adc1();
 8000cee:	f000 fd39 	bl	8001764 <init_adc1>
	balance_timer();
 8000cf2:	f000 f9ab 	bl	800104c <balance_timer>

	uint16_t x = 0;
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
	uint16_t y =0;
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	f8a7 308c 	strh.w	r3, [r7, #140]	@ 0x8c

	float posX = 0;
 8000d02:	f04f 0300 	mov.w	r3, #0
 8000d06:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
	float posY = 0;
 8000d0a:	f04f 0300 	mov.w	r3, #0
 8000d0e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84

	ema_x.a   = 0.5f;
 8000d12:	4b3f      	ldr	r3, [pc, #252]	@ (8000e10 <main+0x130>)
 8000d14:	f04f 527c 	mov.w	r2, #1056964608	@ 0x3f000000
 8000d18:	601a      	str	r2, [r3, #0]
	ema_x.out = ADC_MID;
 8000d1a:	4b3d      	ldr	r3, [pc, #244]	@ (8000e10 <main+0x130>)
 8000d1c:	4a3d      	ldr	r2, [pc, #244]	@ (8000e14 <main+0x134>)
 8000d1e:	605a      	str	r2, [r3, #4]
	ema_y.a   = 0.5f;
 8000d20:	4b3d      	ldr	r3, [pc, #244]	@ (8000e18 <main+0x138>)
 8000d22:	f04f 527c 	mov.w	r2, #1056964608	@ 0x3f000000
 8000d26:	601a      	str	r2, [r3, #0]
	ema_y.out = ADC_MID;
 8000d28:	4b3b      	ldr	r3, [pc, #236]	@ (8000e18 <main+0x138>)
 8000d2a:	4a3a      	ldr	r2, [pc, #232]	@ (8000e14 <main+0x134>)
 8000d2c:	605a      	str	r2, [r3, #4]
	balance_timer();
 8000d2e:	f000 f98d 	bl	800104c <balance_timer>
		//		float y_set = 50 * sinf(w * t);

		//
		/* Print to LPUART 1 921600 baud rate */

				if (newData) {
 8000d32:	4b3a      	ldr	r3, [pc, #232]	@ (8000e1c <main+0x13c>)
 8000d34:	781b      	ldrb	r3, [r3, #0]
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d0fb      	beq.n	8000d32 <main+0x52>

					float printUX = u_x*100 + ADC_MID;
 8000d3a:	4b39      	ldr	r3, [pc, #228]	@ (8000e20 <main+0x140>)
 8000d3c:	edd3 7a00 	vldr	s15, [r3]
 8000d40:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8000e24 <main+0x144>
 8000d44:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000d48:	ee17 0a90 	vmov	r0, s15
 8000d4c:	f7ff fbe0 	bl	8000510 <__aeabi_f2d>
 8000d50:	a32d      	add	r3, pc, #180	@ (adr r3, 8000e08 <main+0x128>)
 8000d52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d56:	f7ff fa7d 	bl	8000254 <__adddf3>
 8000d5a:	4602      	mov	r2, r0
 8000d5c:	460b      	mov	r3, r1
 8000d5e:	4610      	mov	r0, r2
 8000d60:	4619      	mov	r1, r3
 8000d62:	f7ff ff25 	bl	8000bb0 <__aeabi_d2f>
 8000d66:	4603      	mov	r3, r0
 8000d68:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
					float printUY = u_y*100 + ADC_MID;
 8000d6c:	4b2e      	ldr	r3, [pc, #184]	@ (8000e28 <main+0x148>)
 8000d6e:	edd3 7a00 	vldr	s15, [r3]
 8000d72:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8000e24 <main+0x144>
 8000d76:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000d7a:	ee17 0a90 	vmov	r0, s15
 8000d7e:	f7ff fbc7 	bl	8000510 <__aeabi_f2d>
 8000d82:	a321      	add	r3, pc, #132	@ (adr r3, 8000e08 <main+0x128>)
 8000d84:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d88:	f7ff fa64 	bl	8000254 <__adddf3>
 8000d8c:	4602      	mov	r2, r0
 8000d8e:	460b      	mov	r3, r1
 8000d90:	4610      	mov	r0, r2
 8000d92:	4619      	mov	r1, r3
 8000d94:	f7ff ff0c 	bl	8000bb0 <__aeabi_d2f>
 8000d98:	4603      	mov	r3, r0
 8000d9a:	67fb      	str	r3, [r7, #124]	@ 0x7c
					newData = false;
 8000d9c:	4b1f      	ldr	r3, [pc, #124]	@ (8000e1c <main+0x13c>)
 8000d9e:	2200      	movs	r2, #0
 8000da0:	701a      	strb	r2, [r3, #0]
					char str[80] = "$";
 8000da2:	2324      	movs	r3, #36	@ 0x24
 8000da4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000da6:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000daa:	224c      	movs	r2, #76	@ 0x4c
 8000dac:	2100      	movs	r1, #0
 8000dae:	4618      	mov	r0, r3
 8000db0:	f001 fbe7 	bl	8002582 <memset>
					char src[40];
					sprintf(src, "%d " , rawY);
 8000db4:	4b1d      	ldr	r3, [pc, #116]	@ (8000e2c <main+0x14c>)
 8000db6:	881b      	ldrh	r3, [r3, #0]
 8000db8:	461a      	mov	r2, r3
 8000dba:	1d3b      	adds	r3, r7, #4
 8000dbc:	491c      	ldr	r1, [pc, #112]	@ (8000e30 <main+0x150>)
 8000dbe:	4618      	mov	r0, r3
 8000dc0:	f001 fb7a 	bl	80024b8 <siprintf>
					strcat(str, src);
 8000dc4:	1d3a      	adds	r2, r7, #4
 8000dc6:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000dca:	4611      	mov	r1, r2
 8000dcc:	4618      	mov	r0, r3
 8000dce:	f001 fbe0 	bl	8002592 <strcat>
					strcat(str, ";");
 8000dd2:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000dd6:	4618      	mov	r0, r3
 8000dd8:	f7ff fa2e 	bl	8000238 <strlen>
 8000ddc:	4603      	mov	r3, r0
 8000dde:	461a      	mov	r2, r3
 8000de0:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000de4:	4413      	add	r3, r2
 8000de6:	4913      	ldr	r1, [pc, #76]	@ (8000e34 <main+0x154>)
 8000de8:	461a      	mov	r2, r3
 8000dea:	460b      	mov	r3, r1
 8000dec:	881b      	ldrh	r3, [r3, #0]
 8000dee:	8013      	strh	r3, [r2, #0]
					txLPUART1(str);
 8000df0:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000df4:	4618      	mov	r0, r3
 8000df6:	f000 fc01 	bl	80015fc <txLPUART1>
					txLPUART1(src);             // one atomic write
 8000dfa:	1d3b      	adds	r3, r7, #4
 8000dfc:	4618      	mov	r0, r3
 8000dfe:	f000 fbfd 	bl	80015fc <txLPUART1>
				if (newData) {
 8000e02:	e796      	b.n	8000d32 <main+0x52>
 8000e04:	f3af 8000 	nop.w
 8000e08:	9999999a 	.word	0x9999999a
 8000e0c:	40a00999 	.word	0x40a00999
 8000e10:	200001f4 	.word	0x200001f4
 8000e14:	45004ccd 	.word	0x45004ccd
 8000e18:	200001fc 	.word	0x200001fc
 8000e1c:	200001f0 	.word	0x200001f0
 8000e20:	200001e8 	.word	0x200001e8
 8000e24:	42c80000 	.word	0x42c80000
 8000e28:	200001ec 	.word	0x200001ec
 8000e2c:	200001e6 	.word	0x200001e6
 8000e30:	08004790 	.word	0x08004790
 8000e34:	08004794 	.word	0x08004794

08000e38 <pwm_blue_x>:

	}
	return 1;
}

void pwm_blue_x(uint32_t degrees){
 8000e38:	b480      	push	{r7}
 8000e3a:	b083      	sub	sp, #12
 8000e3c:	af00      	add	r7, sp, #0
 8000e3e:	6078      	str	r0, [r7, #4]
	// Configure PB7 to be driven by the clock
	bitset(RCC->AHB2ENR, 1); 		// enable clock GPIOB
 8000e40:	4b32      	ldr	r3, [pc, #200]	@ (8000f0c <pwm_blue_x+0xd4>)
 8000e42:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000e44:	4a31      	ldr	r2, [pc, #196]	@ (8000f0c <pwm_blue_x+0xd4>)
 8000e46:	f043 0302 	orr.w	r3, r3, #2
 8000e4a:	64d3      	str	r3, [r2, #76]	@ 0x4c
	bitclear(GPIOB->MODER, 14); 	// set PB7 to Alternate Function mode
 8000e4c:	4b30      	ldr	r3, [pc, #192]	@ (8000f10 <pwm_blue_x+0xd8>)
 8000e4e:	681b      	ldr	r3, [r3, #0]
 8000e50:	4a2f      	ldr	r2, [pc, #188]	@ (8000f10 <pwm_blue_x+0xd8>)
 8000e52:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8000e56:	6013      	str	r3, [r2, #0]
	bitset(GPIOB->MODER, 15);
 8000e58:	4b2d      	ldr	r3, [pc, #180]	@ (8000f10 <pwm_blue_x+0xd8>)
 8000e5a:	681b      	ldr	r3, [r3, #0]
 8000e5c:	4a2c      	ldr	r2, [pc, #176]	@ (8000f10 <pwm_blue_x+0xd8>)
 8000e5e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000e62:	6013      	str	r3, [r2, #0]
	GPIOB->AFR[0] &= ~(0xf << 28); 	// clear AFR
 8000e64:	4b2a      	ldr	r3, [pc, #168]	@ (8000f10 <pwm_blue_x+0xd8>)
 8000e66:	6a1b      	ldr	r3, [r3, #32]
 8000e68:	4a29      	ldr	r2, [pc, #164]	@ (8000f10 <pwm_blue_x+0xd8>)
 8000e6a:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8000e6e:	6213      	str	r3, [r2, #32]
	bitset(GPIOB->AFR[0], 29); 		// set PB7 to Alternate Function 2 to connect to TIM4_CH2
 8000e70:	4b27      	ldr	r3, [pc, #156]	@ (8000f10 <pwm_blue_x+0xd8>)
 8000e72:	6a1b      	ldr	r3, [r3, #32]
 8000e74:	4a26      	ldr	r2, [pc, #152]	@ (8000f10 <pwm_blue_x+0xd8>)
 8000e76:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000e7a:	6213      	str	r3, [r2, #32]

	// Configure TIM4
	bitset(RCC->APB1ENR1, 2); 		// enable the clock for timer 4
 8000e7c:	4b23      	ldr	r3, [pc, #140]	@ (8000f0c <pwm_blue_x+0xd4>)
 8000e7e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000e80:	4a22      	ldr	r2, [pc, #136]	@ (8000f0c <pwm_blue_x+0xd4>)
 8000e82:	f043 0304 	orr.w	r3, r3, #4
 8000e86:	6593      	str	r3, [r2, #88]	@ 0x58
	TIM4->PSC |= 160 - 1; 			// divide clock speed by 160
 8000e88:	4b22      	ldr	r3, [pc, #136]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000e8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000e8c:	4a21      	ldr	r2, [pc, #132]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000e8e:	f043 039f 	orr.w	r3, r3, #159	@ 0x9f
 8000e92:	6293      	str	r3, [r2, #40]	@ 0x28
	TIM4->ARR = 2000 - 1; 			// set the auto load register
 8000e94:	4b1f      	ldr	r3, [pc, #124]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000e96:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8000e9a:	62da      	str	r2, [r3, #44]	@ 0x2c
	bitclear(TIM4->CCMR1, 12); 		// set channel 2 to PWM mode 1, CCMR is set to output by default
 8000e9c:	4b1d      	ldr	r3, [pc, #116]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000e9e:	699b      	ldr	r3, [r3, #24]
 8000ea0:	4a1c      	ldr	r2, [pc, #112]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ea2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000ea6:	6193      	str	r3, [r2, #24]
	bitset(TIM4->CCMR1, 13);
 8000ea8:	4b1a      	ldr	r3, [pc, #104]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000eaa:	699b      	ldr	r3, [r3, #24]
 8000eac:	4a19      	ldr	r2, [pc, #100]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000eae:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000eb2:	6193      	str	r3, [r2, #24]
	bitset(TIM4->CCMR1, 14);
 8000eb4:	4b17      	ldr	r3, [pc, #92]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000eb6:	699b      	ldr	r3, [r3, #24]
 8000eb8:	4a16      	ldr	r2, [pc, #88]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000eba:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000ebe:	6193      	str	r3, [r2, #24]
	bitclear(TIM4->CCMR1, 24);
 8000ec0:	4b14      	ldr	r3, [pc, #80]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ec2:	699b      	ldr	r3, [r3, #24]
 8000ec4:	4a13      	ldr	r2, [pc, #76]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ec6:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000eca:	6193      	str	r3, [r2, #24]
	TIM4->CCR2 = (degrees * 1) + 40;// set duty cycle (16 bit #, max val is 65535)
 8000ecc:	4a11      	ldr	r2, [pc, #68]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ece:	687b      	ldr	r3, [r7, #4]
 8000ed0:	3328      	adds	r3, #40	@ 0x28
 8000ed2:	6393      	str	r3, [r2, #56]	@ 0x38
	bitset(TIM4->CCMR1, 11); 		// output compare 2 preload enable
 8000ed4:	4b0f      	ldr	r3, [pc, #60]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ed6:	699b      	ldr	r3, [r3, #24]
 8000ed8:	4a0e      	ldr	r2, [pc, #56]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000eda:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8000ede:	6193      	str	r3, [r2, #24]
	bitset(TIM4->CCER, 4); 			// enable capture/compare 2 output
 8000ee0:	4b0c      	ldr	r3, [pc, #48]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ee2:	6a1b      	ldr	r3, [r3, #32]
 8000ee4:	4a0b      	ldr	r2, [pc, #44]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ee6:	f043 0310 	orr.w	r3, r3, #16
 8000eea:	6213      	str	r3, [r2, #32]
	TIM4->CNT = 0; 					// reset counter current value
 8000eec:	4b09      	ldr	r3, [pc, #36]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000eee:	2200      	movs	r2, #0
 8000ef0:	625a      	str	r2, [r3, #36]	@ 0x24
	TIM4->CR1|= 1; 					// enable the timer
 8000ef2:	4b08      	ldr	r3, [pc, #32]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ef4:	681b      	ldr	r3, [r3, #0]
 8000ef6:	4a07      	ldr	r2, [pc, #28]	@ (8000f14 <pwm_blue_x+0xdc>)
 8000ef8:	f043 0301 	orr.w	r3, r3, #1
 8000efc:	6013      	str	r3, [r2, #0]

}
 8000efe:	bf00      	nop
 8000f00:	370c      	adds	r7, #12
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	40021000 	.word	0x40021000
 8000f10:	42020400 	.word	0x42020400
 8000f14:	40000800 	.word	0x40000800

08000f18 <pwm_green_y>:

void pwm_green_y(uint32_t degrees){
 8000f18:	b480      	push	{r7}
 8000f1a:	b083      	sub	sp, #12
 8000f1c:	af00      	add	r7, sp, #0
 8000f1e:	6078      	str	r0, [r7, #4]
	// Configure PC7 to be driven by the clock
	bitset(RCC->AHB2ENR, 2); 		// enable clock GPIOC
 8000f20:	4b32      	ldr	r3, [pc, #200]	@ (8000fec <pwm_green_y+0xd4>)
 8000f22:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000f24:	4a31      	ldr	r2, [pc, #196]	@ (8000fec <pwm_green_y+0xd4>)
 8000f26:	f043 0304 	orr.w	r3, r3, #4
 8000f2a:	64d3      	str	r3, [r2, #76]	@ 0x4c
	bitclear(GPIOC->MODER, 14); 	// set PC7 to Alternate Function mode
 8000f2c:	4b30      	ldr	r3, [pc, #192]	@ (8000ff0 <pwm_green_y+0xd8>)
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	4a2f      	ldr	r2, [pc, #188]	@ (8000ff0 <pwm_green_y+0xd8>)
 8000f32:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8000f36:	6013      	str	r3, [r2, #0]
	bitset(GPIOC->MODER, 15);
 8000f38:	4b2d      	ldr	r3, [pc, #180]	@ (8000ff0 <pwm_green_y+0xd8>)
 8000f3a:	681b      	ldr	r3, [r3, #0]
 8000f3c:	4a2c      	ldr	r2, [pc, #176]	@ (8000ff0 <pwm_green_y+0xd8>)
 8000f3e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000f42:	6013      	str	r3, [r2, #0]
	GPIOC->AFR[0] &= ~(0xf << 28); 	// clear AFR
 8000f44:	4b2a      	ldr	r3, [pc, #168]	@ (8000ff0 <pwm_green_y+0xd8>)
 8000f46:	6a1b      	ldr	r3, [r3, #32]
 8000f48:	4a29      	ldr	r2, [pc, #164]	@ (8000ff0 <pwm_green_y+0xd8>)
 8000f4a:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8000f4e:	6213      	str	r3, [r2, #32]
	bitset(GPIOC->AFR[0], 29); 		// set PC7 to Alternate Function 2 to connect to TIM3_CH2
 8000f50:	4b27      	ldr	r3, [pc, #156]	@ (8000ff0 <pwm_green_y+0xd8>)
 8000f52:	6a1b      	ldr	r3, [r3, #32]
 8000f54:	4a26      	ldr	r2, [pc, #152]	@ (8000ff0 <pwm_green_y+0xd8>)
 8000f56:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000f5a:	6213      	str	r3, [r2, #32]

	// Configure TIM3
	bitset(RCC->APB1ENR1, 1); 		// enable the clock for timer 3
 8000f5c:	4b23      	ldr	r3, [pc, #140]	@ (8000fec <pwm_green_y+0xd4>)
 8000f5e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000f60:	4a22      	ldr	r2, [pc, #136]	@ (8000fec <pwm_green_y+0xd4>)
 8000f62:	f043 0302 	orr.w	r3, r3, #2
 8000f66:	6593      	str	r3, [r2, #88]	@ 0x58
	TIM3->PSC |= 160 - 1; 			// divide clock speed by 160
 8000f68:	4b22      	ldr	r3, [pc, #136]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f6a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000f6c:	4a21      	ldr	r2, [pc, #132]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f6e:	f043 039f 	orr.w	r3, r3, #159	@ 0x9f
 8000f72:	6293      	str	r3, [r2, #40]	@ 0x28
	TIM3->ARR = 2000 - 1; 			// set the auto load register
 8000f74:	4b1f      	ldr	r3, [pc, #124]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f76:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 8000f7a:	62da      	str	r2, [r3, #44]	@ 0x2c
	bitclear(TIM3->CCMR1, 12); 		// set channel 2 to PWM mode 1, CCMR is set to output by default
 8000f7c:	4b1d      	ldr	r3, [pc, #116]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f7e:	699b      	ldr	r3, [r3, #24]
 8000f80:	4a1c      	ldr	r2, [pc, #112]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f82:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000f86:	6193      	str	r3, [r2, #24]
	bitset(TIM3->CCMR1, 13);
 8000f88:	4b1a      	ldr	r3, [pc, #104]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f8a:	699b      	ldr	r3, [r3, #24]
 8000f8c:	4a19      	ldr	r2, [pc, #100]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f8e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000f92:	6193      	str	r3, [r2, #24]
	bitset(TIM3->CCMR1, 14);
 8000f94:	4b17      	ldr	r3, [pc, #92]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f96:	699b      	ldr	r3, [r3, #24]
 8000f98:	4a16      	ldr	r2, [pc, #88]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000f9a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000f9e:	6193      	str	r3, [r2, #24]
	bitclear(TIM3->CCMR1, 24);
 8000fa0:	4b14      	ldr	r3, [pc, #80]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fa2:	699b      	ldr	r3, [r3, #24]
 8000fa4:	4a13      	ldr	r2, [pc, #76]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fa6:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8000faa:	6193      	str	r3, [r2, #24]
	TIM3->CCR2 = (degrees * 1) + 40;// set duty cycle (16 bit #, max val is 65535)
 8000fac:	4a11      	ldr	r2, [pc, #68]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	3328      	adds	r3, #40	@ 0x28
 8000fb2:	6393      	str	r3, [r2, #56]	@ 0x38
	bitset(TIM3->CCMR1, 11); 		// output compare 2 preload enable
 8000fb4:	4b0f      	ldr	r3, [pc, #60]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fb6:	699b      	ldr	r3, [r3, #24]
 8000fb8:	4a0e      	ldr	r2, [pc, #56]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fba:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8000fbe:	6193      	str	r3, [r2, #24]
	bitset(TIM3->CCER, 4); 			// enable capture/compare 2 output
 8000fc0:	4b0c      	ldr	r3, [pc, #48]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fc2:	6a1b      	ldr	r3, [r3, #32]
 8000fc4:	4a0b      	ldr	r2, [pc, #44]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fc6:	f043 0310 	orr.w	r3, r3, #16
 8000fca:	6213      	str	r3, [r2, #32]
	TIM3->CNT = 0; 					// reset counter current value
 8000fcc:	4b09      	ldr	r3, [pc, #36]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fce:	2200      	movs	r2, #0
 8000fd0:	625a      	str	r2, [r3, #36]	@ 0x24
	TIM3->CR1|= 1; 					// enable the timer
 8000fd2:	4b08      	ldr	r3, [pc, #32]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fd4:	681b      	ldr	r3, [r3, #0]
 8000fd6:	4a07      	ldr	r2, [pc, #28]	@ (8000ff4 <pwm_green_y+0xdc>)
 8000fd8:	f043 0301 	orr.w	r3, r3, #1
 8000fdc:	6013      	str	r3, [r2, #0]
}
 8000fde:	bf00      	nop
 8000fe0:	370c      	adds	r7, #12
 8000fe2:	46bd      	mov	sp, r7
 8000fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe8:	4770      	bx	lr
 8000fea:	bf00      	nop
 8000fec:	40021000 	.word	0x40021000
 8000ff0:	42020800 	.word	0x42020800
 8000ff4:	40000400 	.word	0x40000400

08000ff8 <IFX_EMA_Update>:

static inline float IFX_EMA_Update(IFX_EMA *f, float in) {
 8000ff8:	b480      	push	{r7}
 8000ffa:	b083      	sub	sp, #12
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	6078      	str	r0, [r7, #4]
 8001000:	ed87 0a00 	vstr	s0, [r7]
	// f->α already clamped [0..1]
	f->out = f->a*in + (1.0f - f->a)*f->out;
 8001004:	687b      	ldr	r3, [r7, #4]
 8001006:	ed93 7a00 	vldr	s14, [r3]
 800100a:	edd7 7a00 	vldr	s15, [r7]
 800100e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001012:	687b      	ldr	r3, [r7, #4]
 8001014:	edd3 7a00 	vldr	s15, [r3]
 8001018:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800101c:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8001020:	687b      	ldr	r3, [r7, #4]
 8001022:	edd3 7a01 	vldr	s15, [r3, #4]
 8001026:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800102a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800102e:	687b      	ldr	r3, [r7, #4]
 8001030:	edc3 7a01 	vstr	s15, [r3, #4]
	return f->out;
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	685b      	ldr	r3, [r3, #4]
 8001038:	ee07 3a90 	vmov	s15, r3
}
 800103c:	eeb0 0a67 	vmov.f32	s0, s15
 8001040:	370c      	adds	r7, #12
 8001042:	46bd      	mov	sp, r7
 8001044:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001048:	4770      	bx	lr
	...

0800104c <balance_timer>:

void balance_timer(){
 800104c:	b580      	push	{r7, lr}
 800104e:	af00      	add	r7, sp, #0
	bitset(RCC-> APB1ENR1, 0); //Enables timer 2
 8001050:	4b17      	ldr	r3, [pc, #92]	@ (80010b0 <balance_timer+0x64>)
 8001052:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001054:	4a16      	ldr	r2, [pc, #88]	@ (80010b0 <balance_timer+0x64>)
 8001056:	f043 0301 	orr.w	r3, r3, #1
 800105a:	6593      	str	r3, [r2, #88]	@ 0x58
	TIM2->PSC |= 160 - 1; 			// divide clock speed by 160
 800105c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001060:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001062:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001066:	f043 039f 	orr.w	r3, r3, #159	@ 0x9f
 800106a:	6293      	str	r3, [r2, #40]	@ 0x28
	TIM2->ARR = 5000 - 1; 			// set the auto load register
 800106c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001070:	f241 3287 	movw	r2, #4999	@ 0x1387
 8001074:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM2->CNT = 0; 					// reset counter current value
 8001076:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800107a:	2200      	movs	r2, #0
 800107c:	625a      	str	r2, [r3, #36]	@ 0x24
	TIM2->DIER |= 1;
 800107e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001082:	68db      	ldr	r3, [r3, #12]
 8001084:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001088:	f043 0301 	orr.w	r3, r3, #1
 800108c:	60d3      	str	r3, [r2, #12]
	TIM2->CR1|= 1;
 800108e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001092:	681b      	ldr	r3, [r3, #0]
 8001094:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001098:	f043 0301 	orr.w	r3, r3, #1
 800109c:	6013      	str	r3, [r2, #0]

	NVIC_SetPriority(TIM2_IRQn, 1);
 800109e:	2101      	movs	r1, #1
 80010a0:	202d      	movs	r0, #45	@ 0x2d
 80010a2:	f7ff fdf3 	bl	8000c8c <__NVIC_SetPriority>
	NVIC_EnableIRQ(TIM2_IRQn);
 80010a6:	202d      	movs	r0, #45	@ 0x2d
 80010a8:	f7ff fdd2 	bl	8000c50 <__NVIC_EnableIRQ>
}
 80010ac:	bf00      	nop
 80010ae:	bd80      	pop	{r7, pc}
 80010b0:	40021000 	.word	0x40021000
 80010b4:	00000000 	.word	0x00000000

080010b8 <TIM2_IRQHandler>:

void TIM2_IRQHandler(){
 80010b8:	b580      	push	{r7, lr}
 80010ba:	b084      	sub	sp, #16
 80010bc:	af00      	add	r7, sp, #0
	if (TIM2->SR & TIM_SR_UIF) {
 80010be:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80010c2:	691b      	ldr	r3, [r3, #16]
 80010c4:	f003 0301 	and.w	r3, r3, #1
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	f000 80a3 	beq.w	8001214 <TIM2_IRQHandler+0x15c>
		TIM2->SR = 0;  // clear interrupt flag
 80010ce:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80010d2:	2200      	movs	r2, #0
 80010d4:	611a      	str	r2, [r3, #16]

		// 1) read, filter, & scale
		get_xy(&rawX, &rawY);
 80010d6:	4954      	ldr	r1, [pc, #336]	@ (8001228 <TIM2_IRQHandler+0x170>)
 80010d8:	4854      	ldr	r0, [pc, #336]	@ (800122c <TIM2_IRQHandler+0x174>)
 80010da:	f000 f9b1 	bl	8001440 <get_xy>
		float filtX = IFX_EMA_Update(&ema_x, (float)rawX);
 80010de:	4b53      	ldr	r3, [pc, #332]	@ (800122c <TIM2_IRQHandler+0x174>)
 80010e0:	881b      	ldrh	r3, [r3, #0]
 80010e2:	ee07 3a90 	vmov	s15, r3
 80010e6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010ea:	eeb0 0a67 	vmov.f32	s0, s15
 80010ee:	4850      	ldr	r0, [pc, #320]	@ (8001230 <TIM2_IRQHandler+0x178>)
 80010f0:	f7ff ff82 	bl	8000ff8 <IFX_EMA_Update>
 80010f4:	ed87 0a03 	vstr	s0, [r7, #12]
		float filtY = IFX_EMA_Update(&ema_y, (float)rawY);
 80010f8:	4b4b      	ldr	r3, [pc, #300]	@ (8001228 <TIM2_IRQHandler+0x170>)
 80010fa:	881b      	ldrh	r3, [r3, #0]
 80010fc:	ee07 3a90 	vmov	s15, r3
 8001100:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001104:	eeb0 0a67 	vmov.f32	s0, s15
 8001108:	484a      	ldr	r0, [pc, #296]	@ (8001234 <TIM2_IRQHandler+0x17c>)
 800110a:	f7ff ff75 	bl	8000ff8 <IFX_EMA_Update>
 800110e:	ed87 0a02 	vstr	s0, [r7, #8]

		float posX = 200*((float)filtX - ADC_MID)/ADC_SPAN;
 8001112:	68f8      	ldr	r0, [r7, #12]
 8001114:	f7ff f9fc 	bl	8000510 <__aeabi_f2d>
 8001118:	a341      	add	r3, pc, #260	@ (adr r3, 8001220 <TIM2_IRQHandler+0x168>)
 800111a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800111e:	f7ff f897 	bl	8000250 <__aeabi_dsub>
 8001122:	4602      	mov	r2, r0
 8001124:	460b      	mov	r3, r1
 8001126:	4610      	mov	r0, r2
 8001128:	4619      	mov	r1, r3
 800112a:	f04f 0200 	mov.w	r2, #0
 800112e:	4b42      	ldr	r3, [pc, #264]	@ (8001238 <TIM2_IRQHandler+0x180>)
 8001130:	f7ff fa46 	bl	80005c0 <__aeabi_dmul>
 8001134:	4602      	mov	r2, r0
 8001136:	460b      	mov	r3, r1
 8001138:	4610      	mov	r0, r2
 800113a:	4619      	mov	r1, r3
 800113c:	f04f 0200 	mov.w	r2, #0
 8001140:	4b3e      	ldr	r3, [pc, #248]	@ (800123c <TIM2_IRQHandler+0x184>)
 8001142:	f7ff fb67 	bl	8000814 <__aeabi_ddiv>
 8001146:	4602      	mov	r2, r0
 8001148:	460b      	mov	r3, r1
 800114a:	4610      	mov	r0, r2
 800114c:	4619      	mov	r1, r3
 800114e:	f7ff fd2f 	bl	8000bb0 <__aeabi_d2f>
 8001152:	4603      	mov	r3, r0
 8001154:	607b      	str	r3, [r7, #4]
		float posY = 200*((float)filtY - ADC_MID)/ADC_SPAN;
 8001156:	68b8      	ldr	r0, [r7, #8]
 8001158:	f7ff f9da 	bl	8000510 <__aeabi_f2d>
 800115c:	a330      	add	r3, pc, #192	@ (adr r3, 8001220 <TIM2_IRQHandler+0x168>)
 800115e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001162:	f7ff f875 	bl	8000250 <__aeabi_dsub>
 8001166:	4602      	mov	r2, r0
 8001168:	460b      	mov	r3, r1
 800116a:	4610      	mov	r0, r2
 800116c:	4619      	mov	r1, r3
 800116e:	f04f 0200 	mov.w	r2, #0
 8001172:	4b31      	ldr	r3, [pc, #196]	@ (8001238 <TIM2_IRQHandler+0x180>)
 8001174:	f7ff fa24 	bl	80005c0 <__aeabi_dmul>
 8001178:	4602      	mov	r2, r0
 800117a:	460b      	mov	r3, r1
 800117c:	4610      	mov	r0, r2
 800117e:	4619      	mov	r1, r3
 8001180:	f04f 0200 	mov.w	r2, #0
 8001184:	4b2d      	ldr	r3, [pc, #180]	@ (800123c <TIM2_IRQHandler+0x184>)
 8001186:	f7ff fb45 	bl	8000814 <__aeabi_ddiv>
 800118a:	4602      	mov	r2, r0
 800118c:	460b      	mov	r3, r1
 800118e:	4610      	mov	r0, r2
 8001190:	4619      	mov	r1, r3
 8001192:	f7ff fd0d 	bl	8000bb0 <__aeabi_d2f>
 8001196:	4603      	mov	r3, r0
 8001198:	603b      	str	r3, [r7, #0]

		// 2) PID on current global setpoints
		u_x = pid_x(posX );
 800119a:	ed97 0a01 	vldr	s0, [r7, #4]
 800119e:	f000 f857 	bl	8001250 <pid_x>
 80011a2:	eef0 7a40 	vmov.f32	s15, s0
 80011a6:	4b26      	ldr	r3, [pc, #152]	@ (8001240 <TIM2_IRQHandler+0x188>)
 80011a8:	edc3 7a00 	vstr	s15, [r3]
		u_y = pid_y(posY );
 80011ac:	ed97 0a00 	vldr	s0, [r7]
 80011b0:	f000 f8c8 	bl	8001344 <pid_y>
 80011b4:	eef0 7a40 	vmov.f32	s15, s0
 80011b8:	4b22      	ldr	r3, [pc, #136]	@ (8001244 <TIM2_IRQHandler+0x18c>)
 80011ba:	edc3 7a00 	vstr	s15, [r3]

		// 3) drive servos
		pwm_blue_x((uint32_t)(u_x + 90.0) );
 80011be:	4b20      	ldr	r3, [pc, #128]	@ (8001240 <TIM2_IRQHandler+0x188>)
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	4618      	mov	r0, r3
 80011c4:	f7ff f9a4 	bl	8000510 <__aeabi_f2d>
 80011c8:	f04f 0200 	mov.w	r2, #0
 80011cc:	4b1e      	ldr	r3, [pc, #120]	@ (8001248 <TIM2_IRQHandler+0x190>)
 80011ce:	f7ff f841 	bl	8000254 <__adddf3>
 80011d2:	4602      	mov	r2, r0
 80011d4:	460b      	mov	r3, r1
 80011d6:	4610      	mov	r0, r2
 80011d8:	4619      	mov	r1, r3
 80011da:	f7ff fcc9 	bl	8000b70 <__aeabi_d2uiz>
 80011de:	4603      	mov	r3, r0
 80011e0:	4618      	mov	r0, r3
 80011e2:	f7ff fe29 	bl	8000e38 <pwm_blue_x>
		pwm_green_y((uint32_t)(u_y + 90.0) );
 80011e6:	4b17      	ldr	r3, [pc, #92]	@ (8001244 <TIM2_IRQHandler+0x18c>)
 80011e8:	681b      	ldr	r3, [r3, #0]
 80011ea:	4618      	mov	r0, r3
 80011ec:	f7ff f990 	bl	8000510 <__aeabi_f2d>
 80011f0:	f04f 0200 	mov.w	r2, #0
 80011f4:	4b14      	ldr	r3, [pc, #80]	@ (8001248 <TIM2_IRQHandler+0x190>)
 80011f6:	f7ff f82d 	bl	8000254 <__adddf3>
 80011fa:	4602      	mov	r2, r0
 80011fc:	460b      	mov	r3, r1
 80011fe:	4610      	mov	r0, r2
 8001200:	4619      	mov	r1, r3
 8001202:	f7ff fcb5 	bl	8000b70 <__aeabi_d2uiz>
 8001206:	4603      	mov	r3, r0
 8001208:	4618      	mov	r0, r3
 800120a:	f7ff fe85 	bl	8000f18 <pwm_green_y>

		newData = true;
 800120e:	4b0f      	ldr	r3, [pc, #60]	@ (800124c <TIM2_IRQHandler+0x194>)
 8001210:	2201      	movs	r2, #1
 8001212:	701a      	strb	r2, [r3, #0]
	}
}
 8001214:	bf00      	nop
 8001216:	3710      	adds	r7, #16
 8001218:	46bd      	mov	sp, r7
 800121a:	bd80      	pop	{r7, pc}
 800121c:	f3af 8000 	nop.w
 8001220:	9999999a 	.word	0x9999999a
 8001224:	40a00999 	.word	0x40a00999
 8001228:	200001e6 	.word	0x200001e6
 800122c:	200001e4 	.word	0x200001e4
 8001230:	200001f4 	.word	0x200001f4
 8001234:	200001fc 	.word	0x200001fc
 8001238:	40690000 	.word	0x40690000
 800123c:	40b00000 	.word	0x40b00000
 8001240:	200001e8 	.word	0x200001e8
 8001244:	200001ec 	.word	0x200001ec
 8001248:	40568000 	.word	0x40568000
 800124c:	200001f0 	.word	0x200001f0

08001250 <pid_x>:

float pid_x(float currentX){
 8001250:	b480      	push	{r7}
 8001252:	b08b      	sub	sp, #44	@ 0x2c
 8001254:	af00      	add	r7, sp, #0
 8001256:	ed87 0a01 	vstr	s0, [r7, #4]
	/* Current Error - Proportional term (desired - where we are) */

	static float totalError = 0;
	static float previousError = 0;

	float e = currentX; //(0,0 - Yaxis)
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	623b      	str	r3, [r7, #32]

	/* Accumulated Error - Integral term */
	totalError += e;
 800125e:	4b31      	ldr	r3, [pc, #196]	@ (8001324 <pid_x+0xd4>)
 8001260:	ed93 7a00 	vldr	s14, [r3]
 8001264:	edd7 7a08 	vldr	s15, [r7, #32]
 8001268:	ee77 7a27 	vadd.f32	s15, s14, s15
 800126c:	4b2d      	ldr	r3, [pc, #180]	@ (8001324 <pid_x+0xd4>)
 800126e:	edc3 7a00 	vstr	s15, [r3]

	/* Difference of Error - Derivative term */
	float deltaError = e - previousError;
 8001272:	4b2d      	ldr	r3, [pc, #180]	@ (8001328 <pid_x+0xd8>)
 8001274:	edd3 7a00 	vldr	s15, [r3]
 8001278:	ed97 7a08 	vldr	s14, [r7, #32]
 800127c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001280:	edc7 7a07 	vstr	s15, [r7, #28]

	/* Also prepare for next iteration – set previous to Current Error */
	previousError = e;
 8001284:	4a28      	ldr	r2, [pc, #160]	@ (8001328 <pid_x+0xd8>)
 8001286:	6a3b      	ldr	r3, [r7, #32]
 8001288:	6013      	str	r3, [r2, #0]

	/* PID control variables */
	float Kp=0.20;
 800128a:	4b28      	ldr	r3, [pc, #160]	@ (800132c <pid_x+0xdc>)
 800128c:	61bb      	str	r3, [r7, #24]
	float Ki=0.11;
 800128e:	4b28      	ldr	r3, [pc, #160]	@ (8001330 <pid_x+0xe0>)
 8001290:	617b      	str	r3, [r7, #20]
	float Kd=0.06;
 8001292:	4b28      	ldr	r3, [pc, #160]	@ (8001334 <pid_x+0xe4>)
 8001294:	613b      	str	r3, [r7, #16]
	float T =0.05;
 8001296:	4b28      	ldr	r3, [pc, #160]	@ (8001338 <pid_x+0xe8>)
 8001298:	60fb      	str	r3, [r7, #12]
	float u = 0;
 800129a:	f04f 0300 	mov.w	r3, #0
 800129e:	627b      	str	r3, [r7, #36]	@ 0x24
	u = Kp * e + Ki * (totalError * T) + Kd * (deltaError / T);
 80012a0:	ed97 7a06 	vldr	s14, [r7, #24]
 80012a4:	edd7 7a08 	vldr	s15, [r7, #32]
 80012a8:	ee27 7a27 	vmul.f32	s14, s14, s15
 80012ac:	4b1d      	ldr	r3, [pc, #116]	@ (8001324 <pid_x+0xd4>)
 80012ae:	edd3 6a00 	vldr	s13, [r3]
 80012b2:	edd7 7a03 	vldr	s15, [r7, #12]
 80012b6:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80012ba:	edd7 7a05 	vldr	s15, [r7, #20]
 80012be:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80012c2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80012c6:	ed97 6a07 	vldr	s12, [r7, #28]
 80012ca:	edd7 7a03 	vldr	s15, [r7, #12]
 80012ce:	eec6 6a27 	vdiv.f32	s13, s12, s15
 80012d2:	edd7 7a04 	vldr	s15, [r7, #16]
 80012d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80012da:	ee77 7a27 	vadd.f32	s15, s14, s15
 80012de:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24

	if(u > 30.0) u = 30.0;
 80012e2:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80012e6:	eeb3 7a0e 	vmov.f32	s14, #62	@ 0x41f00000  30.0
 80012ea:	eef4 7ac7 	vcmpe.f32	s15, s14
 80012ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012f2:	dd01      	ble.n	80012f8 <pid_x+0xa8>
 80012f4:	4b11      	ldr	r3, [pc, #68]	@ (800133c <pid_x+0xec>)
 80012f6:	627b      	str	r3, [r7, #36]	@ 0x24
	if(u < -30.0 ) u = -30.0;
 80012f8:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80012fc:	eebb 7a0e 	vmov.f32	s14, #190	@ 0xc1f00000 -30.0
 8001300:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001304:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001308:	d501      	bpl.n	800130e <pid_x+0xbe>
 800130a:	4b0d      	ldr	r3, [pc, #52]	@ (8001340 <pid_x+0xf0>)
 800130c:	627b      	str	r3, [r7, #36]	@ 0x24

	return u;
 800130e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001310:	ee07 3a90 	vmov	s15, r3

}
 8001314:	eeb0 0a67 	vmov.f32	s0, s15
 8001318:	372c      	adds	r7, #44	@ 0x2c
 800131a:	46bd      	mov	sp, r7
 800131c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001320:	4770      	bx	lr
 8001322:	bf00      	nop
 8001324:	20000204 	.word	0x20000204
 8001328:	20000208 	.word	0x20000208
 800132c:	3e4ccccd 	.word	0x3e4ccccd
 8001330:	3de147ae 	.word	0x3de147ae
 8001334:	3d75c28f 	.word	0x3d75c28f
 8001338:	3d4ccccd 	.word	0x3d4ccccd
 800133c:	41f00000 	.word	0x41f00000
 8001340:	c1f00000 	.word	0xc1f00000

08001344 <pid_y>:
float pid_y(float currentY){
 8001344:	b480      	push	{r7}
 8001346:	b08b      	sub	sp, #44	@ 0x2c
 8001348:	af00      	add	r7, sp, #0
 800134a:	ed87 0a01 	vstr	s0, [r7, #4]
	/* Current Error - Proportional term (desired - where we are) */
	static float totalError = 0;
	static float previousError = 0;

	float e = -currentY; //(0,0 - Yaxis)
 800134e:	edd7 7a01 	vldr	s15, [r7, #4]
 8001352:	eef1 7a67 	vneg.f32	s15, s15
 8001356:	edc7 7a08 	vstr	s15, [r7, #32]

	/* Accumulated Error - Integral term */
	totalError += e;
 800135a:	4b31      	ldr	r3, [pc, #196]	@ (8001420 <pid_y+0xdc>)
 800135c:	ed93 7a00 	vldr	s14, [r3]
 8001360:	edd7 7a08 	vldr	s15, [r7, #32]
 8001364:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001368:	4b2d      	ldr	r3, [pc, #180]	@ (8001420 <pid_y+0xdc>)
 800136a:	edc3 7a00 	vstr	s15, [r3]

	/* Difference of Error - Derivative term */
	float deltaError = e - previousError;
 800136e:	4b2d      	ldr	r3, [pc, #180]	@ (8001424 <pid_y+0xe0>)
 8001370:	edd3 7a00 	vldr	s15, [r3]
 8001374:	ed97 7a08 	vldr	s14, [r7, #32]
 8001378:	ee77 7a67 	vsub.f32	s15, s14, s15
 800137c:	edc7 7a07 	vstr	s15, [r7, #28]

	/* Also prepare for next iteration – set previous to Current Error */
	previousError = e;
 8001380:	4a28      	ldr	r2, [pc, #160]	@ (8001424 <pid_y+0xe0>)
 8001382:	6a3b      	ldr	r3, [r7, #32]
 8001384:	6013      	str	r3, [r2, #0]

	/* PID control variables */
	float Kp=0.20;
 8001386:	4b28      	ldr	r3, [pc, #160]	@ (8001428 <pid_y+0xe4>)
 8001388:	61bb      	str	r3, [r7, #24]
	float Ki=0.11;
 800138a:	4b28      	ldr	r3, [pc, #160]	@ (800142c <pid_y+0xe8>)
 800138c:	617b      	str	r3, [r7, #20]
	float Kd=0.06;
 800138e:	4b28      	ldr	r3, [pc, #160]	@ (8001430 <pid_y+0xec>)
 8001390:	613b      	str	r3, [r7, #16]
	float T =0.05;
 8001392:	4b28      	ldr	r3, [pc, #160]	@ (8001434 <pid_y+0xf0>)
 8001394:	60fb      	str	r3, [r7, #12]
	float u = 0;
 8001396:	f04f 0300 	mov.w	r3, #0
 800139a:	627b      	str	r3, [r7, #36]	@ 0x24
	u = Kp * e + Ki * (totalError * T) + Kd * (deltaError / T);
 800139c:	ed97 7a06 	vldr	s14, [r7, #24]
 80013a0:	edd7 7a08 	vldr	s15, [r7, #32]
 80013a4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80013a8:	4b1d      	ldr	r3, [pc, #116]	@ (8001420 <pid_y+0xdc>)
 80013aa:	edd3 6a00 	vldr	s13, [r3]
 80013ae:	edd7 7a03 	vldr	s15, [r7, #12]
 80013b2:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80013b6:	edd7 7a05 	vldr	s15, [r7, #20]
 80013ba:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80013be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80013c2:	ed97 6a07 	vldr	s12, [r7, #28]
 80013c6:	edd7 7a03 	vldr	s15, [r7, #12]
 80013ca:	eec6 6a27 	vdiv.f32	s13, s12, s15
 80013ce:	edd7 7a04 	vldr	s15, [r7, #16]
 80013d2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80013d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013da:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24

	if(u > 30)  u = 30;
 80013de:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80013e2:	eeb3 7a0e 	vmov.f32	s14, #62	@ 0x41f00000  30.0
 80013e6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80013ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013ee:	dd01      	ble.n	80013f4 <pid_y+0xb0>
 80013f0:	4b11      	ldr	r3, [pc, #68]	@ (8001438 <pid_y+0xf4>)
 80013f2:	627b      	str	r3, [r7, #36]	@ 0x24
	if(u < -30 ) u = -30;
 80013f4:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 80013f8:	eebb 7a0e 	vmov.f32	s14, #190	@ 0xc1f00000 -30.0
 80013fc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001404:	d501      	bpl.n	800140a <pid_y+0xc6>
 8001406:	4b0d      	ldr	r3, [pc, #52]	@ (800143c <pid_y+0xf8>)
 8001408:	627b      	str	r3, [r7, #36]	@ 0x24

	return u;
 800140a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800140c:	ee07 3a90 	vmov	s15, r3
}
 8001410:	eeb0 0a67 	vmov.f32	s0, s15
 8001414:	372c      	adds	r7, #44	@ 0x2c
 8001416:	46bd      	mov	sp, r7
 8001418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800141c:	4770      	bx	lr
 800141e:	bf00      	nop
 8001420:	2000020c 	.word	0x2000020c
 8001424:	20000210 	.word	0x20000210
 8001428:	3e4ccccd 	.word	0x3e4ccccd
 800142c:	3de147ae 	.word	0x3de147ae
 8001430:	3d75c28f 	.word	0x3d75c28f
 8001434:	3d4ccccd 	.word	0x3d4ccccd
 8001438:	41f00000 	.word	0x41f00000
 800143c:	c1f00000 	.word	0xc1f00000

08001440 <get_xy>:
 * 		(purple) x+ ----> PD3 & ADC_CH2 PC1
 * 		(white)  y+ ----> PD4 & ADC_CH1 PC0
 * 		(yellow) x- ----> PD5
 * 		(black)  y- ----> PD6
 */
void get_xy(uint16_t* x, uint16_t* y) {
 8001440:	b480      	push	{r7}
 8001442:	b085      	sub	sp, #20
 8001444:	af00      	add	r7, sp, #0
 8001446:	6078      	str	r0, [r7, #4]
 8001448:	6039      	str	r1, [r7, #0]
	RCC->AHB2ENR |= 1 << 3;		// turn on clock gpiod
 800144a:	4b69      	ldr	r3, [pc, #420]	@ (80015f0 <get_xy+0x1b0>)
 800144c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800144e:	4a68      	ldr	r2, [pc, #416]	@ (80015f0 <get_xy+0x1b0>)
 8001450:	f043 0308 	orr.w	r3, r3, #8
 8001454:	64d3      	str	r3, [r2, #76]	@ 0x4c

	/* measure x axis voltage */
	bitclear(GPIOD->MODER, 8);		// set y+ PD4 tristate
 8001456:	4b67      	ldr	r3, [pc, #412]	@ (80015f4 <get_xy+0x1b4>)
 8001458:	681b      	ldr	r3, [r3, #0]
 800145a:	4a66      	ldr	r2, [pc, #408]	@ (80015f4 <get_xy+0x1b4>)
 800145c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001460:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->MODER, 9);
 8001462:	4b64      	ldr	r3, [pc, #400]	@ (80015f4 <get_xy+0x1b4>)
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	4a63      	ldr	r2, [pc, #396]	@ (80015f4 <get_xy+0x1b4>)
 8001468:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800146c:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->ODR, 4);
 800146e:	4b61      	ldr	r3, [pc, #388]	@ (80015f4 <get_xy+0x1b4>)
 8001470:	695b      	ldr	r3, [r3, #20]
 8001472:	4a60      	ldr	r2, [pc, #384]	@ (80015f4 <get_xy+0x1b4>)
 8001474:	f023 0310 	bic.w	r3, r3, #16
 8001478:	6153      	str	r3, [r2, #20]

	bitclear(GPIOD->MODER, 12);		// set y- PD6 tristate
 800147a:	4b5e      	ldr	r3, [pc, #376]	@ (80015f4 <get_xy+0x1b4>)
 800147c:	681b      	ldr	r3, [r3, #0]
 800147e:	4a5d      	ldr	r2, [pc, #372]	@ (80015f4 <get_xy+0x1b4>)
 8001480:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001484:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->MODER, 13);
 8001486:	4b5b      	ldr	r3, [pc, #364]	@ (80015f4 <get_xy+0x1b4>)
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	4a5a      	ldr	r2, [pc, #360]	@ (80015f4 <get_xy+0x1b4>)
 800148c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8001490:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->ODR, 6);
 8001492:	4b58      	ldr	r3, [pc, #352]	@ (80015f4 <get_xy+0x1b4>)
 8001494:	695b      	ldr	r3, [r3, #20]
 8001496:	4a57      	ldr	r2, [pc, #348]	@ (80015f4 <get_xy+0x1b4>)
 8001498:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800149c:	6153      	str	r3, [r2, #20]

	bitset(GPIOD->MODER, 6);		// set x+ PD3 out
 800149e:	4b55      	ldr	r3, [pc, #340]	@ (80015f4 <get_xy+0x1b4>)
 80014a0:	681b      	ldr	r3, [r3, #0]
 80014a2:	4a54      	ldr	r2, [pc, #336]	@ (80015f4 <get_xy+0x1b4>)
 80014a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80014a8:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->MODER, 7);
 80014aa:	4b52      	ldr	r3, [pc, #328]	@ (80015f4 <get_xy+0x1b4>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	4a51      	ldr	r2, [pc, #324]	@ (80015f4 <get_xy+0x1b4>)
 80014b0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80014b4:	6013      	str	r3, [r2, #0]
	bitset(GPIOD->ODR, 3);			// set x+ PD3  high (3.3v)
 80014b6:	4b4f      	ldr	r3, [pc, #316]	@ (80015f4 <get_xy+0x1b4>)
 80014b8:	695b      	ldr	r3, [r3, #20]
 80014ba:	4a4e      	ldr	r2, [pc, #312]	@ (80015f4 <get_xy+0x1b4>)
 80014bc:	f043 0308 	orr.w	r3, r3, #8
 80014c0:	6153      	str	r3, [r2, #20]

	bitset(GPIOD->MODER, 10);		// set x- PD5 out
 80014c2:	4b4c      	ldr	r3, [pc, #304]	@ (80015f4 <get_xy+0x1b4>)
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	4a4b      	ldr	r2, [pc, #300]	@ (80015f4 <get_xy+0x1b4>)
 80014c8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80014cc:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->MODER, 11);
 80014ce:	4b49      	ldr	r3, [pc, #292]	@ (80015f4 <get_xy+0x1b4>)
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	4a48      	ldr	r2, [pc, #288]	@ (80015f4 <get_xy+0x1b4>)
 80014d4:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80014d8:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->ODR, 5);		// set x- PD5  low
 80014da:	4b46      	ldr	r3, [pc, #280]	@ (80015f4 <get_xy+0x1b4>)
 80014dc:	695b      	ldr	r3, [r3, #20]
 80014de:	4a45      	ldr	r2, [pc, #276]	@ (80015f4 <get_xy+0x1b4>)
 80014e0:	f023 0320 	bic.w	r3, r3, #32
 80014e4:	6153      	str	r3, [r2, #20]

	bitset(ADC1->CR, 2);			// Start ADC conversion
 80014e6:	4b44      	ldr	r3, [pc, #272]	@ (80015f8 <get_xy+0x1b8>)
 80014e8:	689b      	ldr	r3, [r3, #8]
 80014ea:	4a43      	ldr	r2, [pc, #268]	@ (80015f8 <get_xy+0x1b8>)
 80014ec:	f043 0304 	orr.w	r3, r3, #4
 80014f0:	6093      	str	r3, [r2, #8]
	while (bitcheck(ADC1->ISR, 2) == 0) ; 	// wait for conversion complete
 80014f2:	bf00      	nop
 80014f4:	4b40      	ldr	r3, [pc, #256]	@ (80015f8 <get_xy+0x1b8>)
 80014f6:	681b      	ldr	r3, [r3, #0]
 80014f8:	089b      	lsrs	r3, r3, #2
 80014fa:	f003 0301 	and.w	r3, r3, #1
 80014fe:	2b00      	cmp	r3, #0
 8001500:	d0f8      	beq.n	80014f4 <get_xy+0xb4>
	*x = ADC1->DR & 0xfff;			// read adc val (clears EOC flag)
 8001502:	4b3d      	ldr	r3, [pc, #244]	@ (80015f8 <get_xy+0x1b8>)
 8001504:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001506:	b29b      	uxth	r3, r3
 8001508:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800150c:	b29a      	uxth	r2, r3
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	801a      	strh	r2, [r3, #0]

	/* measure y axis voltage */
	bitclear(GPIOD->MODER, 6);		// set x+ PD3 tristate
 8001512:	4b38      	ldr	r3, [pc, #224]	@ (80015f4 <get_xy+0x1b4>)
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	4a37      	ldr	r2, [pc, #220]	@ (80015f4 <get_xy+0x1b4>)
 8001518:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800151c:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->MODER, 7);
 800151e:	4b35      	ldr	r3, [pc, #212]	@ (80015f4 <get_xy+0x1b4>)
 8001520:	681b      	ldr	r3, [r3, #0]
 8001522:	4a34      	ldr	r2, [pc, #208]	@ (80015f4 <get_xy+0x1b4>)
 8001524:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8001528:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->ODR, 3);
 800152a:	4b32      	ldr	r3, [pc, #200]	@ (80015f4 <get_xy+0x1b4>)
 800152c:	695b      	ldr	r3, [r3, #20]
 800152e:	4a31      	ldr	r2, [pc, #196]	@ (80015f4 <get_xy+0x1b4>)
 8001530:	f023 0308 	bic.w	r3, r3, #8
 8001534:	6153      	str	r3, [r2, #20]

	bitclear(GPIOD->MODER, 10);		// set x- PD5 tristate
 8001536:	4b2f      	ldr	r3, [pc, #188]	@ (80015f4 <get_xy+0x1b4>)
 8001538:	681b      	ldr	r3, [r3, #0]
 800153a:	4a2e      	ldr	r2, [pc, #184]	@ (80015f4 <get_xy+0x1b4>)
 800153c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001540:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->MODER, 11);
 8001542:	4b2c      	ldr	r3, [pc, #176]	@ (80015f4 <get_xy+0x1b4>)
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	4a2b      	ldr	r2, [pc, #172]	@ (80015f4 <get_xy+0x1b4>)
 8001548:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800154c:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->ODR, 5);
 800154e:	4b29      	ldr	r3, [pc, #164]	@ (80015f4 <get_xy+0x1b4>)
 8001550:	695b      	ldr	r3, [r3, #20]
 8001552:	4a28      	ldr	r2, [pc, #160]	@ (80015f4 <get_xy+0x1b4>)
 8001554:	f023 0320 	bic.w	r3, r3, #32
 8001558:	6153      	str	r3, [r2, #20]

	bitset(GPIOD->MODER, 8);		// set y+ PD4 out
 800155a:	4b26      	ldr	r3, [pc, #152]	@ (80015f4 <get_xy+0x1b4>)
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	4a25      	ldr	r2, [pc, #148]	@ (80015f4 <get_xy+0x1b4>)
 8001560:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001564:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->MODER, 9);
 8001566:	4b23      	ldr	r3, [pc, #140]	@ (80015f4 <get_xy+0x1b4>)
 8001568:	681b      	ldr	r3, [r3, #0]
 800156a:	4a22      	ldr	r2, [pc, #136]	@ (80015f4 <get_xy+0x1b4>)
 800156c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8001570:	6013      	str	r3, [r2, #0]
	bitset(GPIOD->ODR, 4);			// set D4 (y+) high
 8001572:	4b20      	ldr	r3, [pc, #128]	@ (80015f4 <get_xy+0x1b4>)
 8001574:	695b      	ldr	r3, [r3, #20]
 8001576:	4a1f      	ldr	r2, [pc, #124]	@ (80015f4 <get_xy+0x1b4>)
 8001578:	f043 0310 	orr.w	r3, r3, #16
 800157c:	6153      	str	r3, [r2, #20]

	bitset(GPIOD->MODER, 12);		// set y- PD6 out
 800157e:	4b1d      	ldr	r3, [pc, #116]	@ (80015f4 <get_xy+0x1b4>)
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	4a1c      	ldr	r2, [pc, #112]	@ (80015f4 <get_xy+0x1b4>)
 8001584:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001588:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->MODER, 13);
 800158a:	4b1a      	ldr	r3, [pc, #104]	@ (80015f4 <get_xy+0x1b4>)
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	4a19      	ldr	r2, [pc, #100]	@ (80015f4 <get_xy+0x1b4>)
 8001590:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8001594:	6013      	str	r3, [r2, #0]
	bitclear(GPIOD->ODR,6);			// set D6 (y-) low
 8001596:	4b17      	ldr	r3, [pc, #92]	@ (80015f4 <get_xy+0x1b4>)
 8001598:	695b      	ldr	r3, [r3, #20]
 800159a:	4a16      	ldr	r2, [pc, #88]	@ (80015f4 <get_xy+0x1b4>)
 800159c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80015a0:	6153      	str	r3, [r2, #20]

	while (bitcheck(ADC1->ISR, 2) == 0) ; 	// wait for conversion complete
 80015a2:	bf00      	nop
 80015a4:	4b14      	ldr	r3, [pc, #80]	@ (80015f8 <get_xy+0x1b8>)
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	089b      	lsrs	r3, r3, #2
 80015aa:	f003 0301 	and.w	r3, r3, #1
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d0f8      	beq.n	80015a4 <get_xy+0x164>
	*y = ADC1->DR & 0xfff;			// read adc val (clears EOC flag)
 80015b2:	4b11      	ldr	r3, [pc, #68]	@ (80015f8 <get_xy+0x1b8>)
 80015b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80015b6:	b29b      	uxth	r3, r3
 80015b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80015bc:	b29a      	uxth	r2, r3
 80015be:	683b      	ldr	r3, [r7, #0]
 80015c0:	801a      	strh	r2, [r3, #0]
	delay_ms(1);
 80015c2:	2300      	movs	r3, #0
 80015c4:	60fb      	str	r3, [r7, #12]
 80015c6:	e002      	b.n	80015ce <get_xy+0x18e>
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	3301      	adds	r3, #1
 80015cc:	60fb      	str	r3, [r7, #12]
 80015ce:	68fb      	ldr	r3, [r7, #12]
 80015d0:	f5b3 6fc8 	cmp.w	r3, #1600	@ 0x640
 80015d4:	dbf8      	blt.n	80015c8 <get_xy+0x188>
	bitclear(ADC1->ISR, 3);			// clear EOS flag
 80015d6:	4b08      	ldr	r3, [pc, #32]	@ (80015f8 <get_xy+0x1b8>)
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	4a07      	ldr	r2, [pc, #28]	@ (80015f8 <get_xy+0x1b8>)
 80015dc:	f023 0308 	bic.w	r3, r3, #8
 80015e0:	6013      	str	r3, [r2, #0]
}
 80015e2:	bf00      	nop
 80015e4:	3714      	adds	r7, #20
 80015e6:	46bd      	mov	sp, r7
 80015e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ec:	4770      	bx	lr
 80015ee:	bf00      	nop
 80015f0:	40021000 	.word	0x40021000
 80015f4:	42020c00 	.word	0x42020c00
 80015f8:	42028000 	.word	0x42028000

080015fc <txLPUART1>:
	}
	return in_buf;
}

/* Transmits data through LPUART Transmit data register while there is data */
void txLPUART1(char out_buf[]) {
 80015fc:	b480      	push	{r7}
 80015fe:	b085      	sub	sp, #20
 8001600:	af00      	add	r7, sp, #0
 8001602:	6078      	str	r0, [r7, #4]
	uint8_t i=0;
 8001604:	2300      	movs	r3, #0
 8001606:	73fb      	strb	r3, [r7, #15]
	while(out_buf[i] != '\0') {
 8001608:	e013      	b.n	8001632 <txLPUART1+0x36>
		LPUART1->TDR = out_buf[i++];
 800160a:	7bfb      	ldrb	r3, [r7, #15]
 800160c:	1c5a      	adds	r2, r3, #1
 800160e:	73fa      	strb	r2, [r7, #15]
 8001610:	461a      	mov	r2, r3
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	4413      	add	r3, r2
 8001616:	781a      	ldrb	r2, [r3, #0]
 8001618:	4b0c      	ldr	r3, [pc, #48]	@ (800164c <txLPUART1+0x50>)
 800161a:	629a      	str	r2, [r3, #40]	@ 0x28
		for(int j =0; j<10000; j++);
 800161c:	2300      	movs	r3, #0
 800161e:	60bb      	str	r3, [r7, #8]
 8001620:	e002      	b.n	8001628 <txLPUART1+0x2c>
 8001622:	68bb      	ldr	r3, [r7, #8]
 8001624:	3301      	adds	r3, #1
 8001626:	60bb      	str	r3, [r7, #8]
 8001628:	68bb      	ldr	r3, [r7, #8]
 800162a:	f242 720f 	movw	r2, #9999	@ 0x270f
 800162e:	4293      	cmp	r3, r2
 8001630:	ddf7      	ble.n	8001622 <txLPUART1+0x26>
	while(out_buf[i] != '\0') {
 8001632:	7bfb      	ldrb	r3, [r7, #15]
 8001634:	687a      	ldr	r2, [r7, #4]
 8001636:	4413      	add	r3, r2
 8001638:	781b      	ldrb	r3, [r3, #0]
 800163a:	2b00      	cmp	r3, #0
 800163c:	d1e5      	bne.n	800160a <txLPUART1+0xe>
	}
}
 800163e:	bf00      	nop
 8001640:	bf00      	nop
 8001642:	3714      	adds	r7, #20
 8001644:	46bd      	mov	sp, r7
 8001646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800164a:	4770      	bx	lr
 800164c:	40008000 	.word	0x40008000

08001650 <init_clks>:

// enable clocks
void init_clks() {
 8001650:	b480      	push	{r7}
 8001652:	af00      	add	r7, sp, #0
	RCC->APB1ENR1 |= 1 << 28; 	// enable power interface clock by setting PWREN bits
 8001654:	4b1d      	ldr	r3, [pc, #116]	@ (80016cc <init_clks+0x7c>)
 8001656:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001658:	4a1c      	ldr	r2, [pc, #112]	@ (80016cc <init_clks+0x7c>)
 800165a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800165e:	6593      	str	r3, [r2, #88]	@ 0x58
	RCC->APB1ENR2 |= 0x1;		// enable LPUART1EN clock
 8001660:	4b1a      	ldr	r3, [pc, #104]	@ (80016cc <init_clks+0x7c>)
 8001662:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001664:	4a19      	ldr	r2, [pc, #100]	@ (80016cc <init_clks+0x7c>)
 8001666:	f043 0301 	orr.w	r3, r3, #1
 800166a:	65d3      	str	r3, [r2, #92]	@ 0x5c
	RCC->CCIPR1 |= 0x800;		// 01 for HSI16 clock to be used for LPUART1
 800166c:	4b17      	ldr	r3, [pc, #92]	@ (80016cc <init_clks+0x7c>)
 800166e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001672:	4a16      	ldr	r2, [pc, #88]	@ (80016cc <init_clks+0x7c>)
 8001674:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001678:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
	RCC->CCIPR1 &= ~(0x400);
 800167c:	4b13      	ldr	r3, [pc, #76]	@ (80016cc <init_clks+0x7c>)
 800167e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001682:	4a12      	ldr	r2, [pc, #72]	@ (80016cc <init_clks+0x7c>)
 8001684:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001688:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
	RCC->CFGR |= 0x1;			// use HSI16 as SYSCLK
 800168c:	4b0f      	ldr	r3, [pc, #60]	@ (80016cc <init_clks+0x7c>)
 800168e:	689b      	ldr	r3, [r3, #8]
 8001690:	4a0e      	ldr	r2, [pc, #56]	@ (80016cc <init_clks+0x7c>)
 8001692:	f043 0301 	orr.w	r3, r3, #1
 8001696:	6093      	str	r3, [r2, #8]
	RCC->CR |= 0x161;			// MSI clock enable; MSI = 4 MHz; HSI16 clock enable
 8001698:	4b0c      	ldr	r3, [pc, #48]	@ (80016cc <init_clks+0x7c>)
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	4a0b      	ldr	r2, [pc, #44]	@ (80016cc <init_clks+0x7c>)
 800169e:	f443 73b0 	orr.w	r3, r3, #352	@ 0x160
 80016a2:	f043 0301 	orr.w	r3, r3, #1
 80016a6:	6013      	str	r3, [r2, #0]
	RCC->AHB2ENR |= 1<<6;		// enable clock to GPIOG
 80016a8:	4b08      	ldr	r3, [pc, #32]	@ (80016cc <init_clks+0x7c>)
 80016aa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80016ac:	4a07      	ldr	r2, [pc, #28]	@ (80016cc <init_clks+0x7c>)
 80016ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80016b2:	64d3      	str	r3, [r2, #76]	@ 0x4c
	bitset(RCC->APB1ENR2, 0);	// enable clock to LPUART1
 80016b4:	4b05      	ldr	r3, [pc, #20]	@ (80016cc <init_clks+0x7c>)
 80016b6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80016b8:	4a04      	ldr	r2, [pc, #16]	@ (80016cc <init_clks+0x7c>)
 80016ba:	f043 0301 	orr.w	r3, r3, #1
 80016be:	65d3      	str	r3, [r2, #92]	@ 0x5c
}
 80016c0:	bf00      	nop
 80016c2:	46bd      	mov	sp, r7
 80016c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016c8:	4770      	bx	lr
 80016ca:	bf00      	nop
 80016cc:	40021000 	.word	0x40021000

080016d0 <init_LPUART1>:

/* PG7 is connected to LPUART tx PG8 is connect to LPUART rx */
void init_LPUART1() {
 80016d0:	b480      	push	{r7}
 80016d2:	af00      	add	r7, sp, #0
	PWR->CR2 |= 0x200;			// power up port g / enable VDDIO2 Independent I/O supply
 80016d4:	4b20      	ldr	r3, [pc, #128]	@ (8001758 <init_LPUART1+0x88>)
 80016d6:	685b      	ldr	r3, [r3, #4]
 80016d8:	4a1f      	ldr	r2, [pc, #124]	@ (8001758 <init_LPUART1+0x88>)
 80016da:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80016de:	6053      	str	r3, [r2, #4]
	/* tx config */
	GPIOG->MODER &= ~(0x3<<14); // clear the two bits
 80016e0:	4b1e      	ldr	r3, [pc, #120]	@ (800175c <init_LPUART1+0x8c>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	4a1d      	ldr	r2, [pc, #116]	@ (800175c <init_LPUART1+0x8c>)
 80016e6:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 80016ea:	6013      	str	r3, [r2, #0]
	GPIOG->MODER |= 0x2 << 14;	// set mode to alternate function
 80016ec:	4b1b      	ldr	r3, [pc, #108]	@ (800175c <init_LPUART1+0x8c>)
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	4a1a      	ldr	r2, [pc, #104]	@ (800175c <init_LPUART1+0x8c>)
 80016f2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80016f6:	6013      	str	r3, [r2, #0]
	GPIOG->AFR[0] &= ~(0xf<<28);// clear 4 bits for PG7
 80016f8:	4b18      	ldr	r3, [pc, #96]	@ (800175c <init_LPUART1+0x8c>)
 80016fa:	6a1b      	ldr	r3, [r3, #32]
 80016fc:	4a17      	ldr	r2, [pc, #92]	@ (800175c <init_LPUART1+0x8c>)
 80016fe:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8001702:	6213      	str	r3, [r2, #32]
	GPIOG->AFR[0] |= 0x8<<28;	// set PG7 to alternate function 8
 8001704:	4b15      	ldr	r3, [pc, #84]	@ (800175c <init_LPUART1+0x8c>)
 8001706:	6a1b      	ldr	r3, [r3, #32]
 8001708:	4a14      	ldr	r2, [pc, #80]	@ (800175c <init_LPUART1+0x8c>)
 800170a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800170e:	6213      	str	r3, [r2, #32]
	/* rx config */
	GPIOG->MODER &= ~(0x3<<16); // clear the two bits
 8001710:	4b12      	ldr	r3, [pc, #72]	@ (800175c <init_LPUART1+0x8c>)
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	4a11      	ldr	r2, [pc, #68]	@ (800175c <init_LPUART1+0x8c>)
 8001716:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800171a:	6013      	str	r3, [r2, #0]
	GPIOG->MODER |= 0x2 << 16;	// set mode to alternate function
 800171c:	4b0f      	ldr	r3, [pc, #60]	@ (800175c <init_LPUART1+0x8c>)
 800171e:	681b      	ldr	r3, [r3, #0]
 8001720:	4a0e      	ldr	r2, [pc, #56]	@ (800175c <init_LPUART1+0x8c>)
 8001722:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001726:	6013      	str	r3, [r2, #0]
	GPIOG->AFR[1] &= ~(0xf);	// clear 4 bits for PG8
 8001728:	4b0c      	ldr	r3, [pc, #48]	@ (800175c <init_LPUART1+0x8c>)
 800172a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800172c:	4a0b      	ldr	r2, [pc, #44]	@ (800175c <init_LPUART1+0x8c>)
 800172e:	f023 030f 	bic.w	r3, r3, #15
 8001732:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOG->AFR[1] |= 0x8;		// set PG8 to alternate function 8
 8001734:	4b09      	ldr	r3, [pc, #36]	@ (800175c <init_LPUART1+0x8c>)
 8001736:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001738:	4a08      	ldr	r2, [pc, #32]	@ (800175c <init_LPUART1+0x8c>)
 800173a:	f043 0308 	orr.w	r3, r3, #8
 800173e:	6253      	str	r3, [r2, #36]	@ 0x24

	// BRR = 256*16000000/57600 = 71111
	LPUART1->BRR = 4444; 				// set baud rate to 921600
 8001740:	4b07      	ldr	r3, [pc, #28]	@ (8001760 <init_LPUART1+0x90>)
 8001742:	f241 125c 	movw	r2, #4444	@ 0x115c
 8001746:	60da      	str	r2, [r3, #12]
	LPUART1->CR1 = 0xD; 				// 0x1101 --> TX, RX are enabled and UART is Enabled.
 8001748:	4b05      	ldr	r3, [pc, #20]	@ (8001760 <init_LPUART1+0x90>)
 800174a:	220d      	movs	r2, #13
 800174c:	601a      	str	r2, [r3, #0]
}
 800174e:	bf00      	nop
 8001750:	46bd      	mov	sp, r7
 8001752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001756:	4770      	bx	lr
 8001758:	40007000 	.word	0x40007000
 800175c:	42021800 	.word	0x42021800
 8001760:	40008000 	.word	0x40008000

08001764 <init_adc1>:
/**
 * Initialize ADC1 to read 2 values connected to CH1 and CH2.
 *  	CH1 -> PC0
 *  	CH2 -> PC1
 */
void init_adc1() {
 8001764:	b480      	push	{r7}
 8001766:	b083      	sub	sp, #12
 8001768:	af00      	add	r7, sp, #0
	bitset(RCC->AHB2ENR, 13); 	// enable ADC clock
 800176a:	4b2e      	ldr	r3, [pc, #184]	@ (8001824 <init_adc1+0xc0>)
 800176c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800176e:	4a2d      	ldr	r2, [pc, #180]	@ (8001824 <init_adc1+0xc0>)
 8001770:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001774:	64d3      	str	r3, [r2, #76]	@ 0x4c
	RCC->CCIPR1 |= 0x3 << 28; 	// route SYSCLK HCLK to ADC
 8001776:	4b2b      	ldr	r3, [pc, #172]	@ (8001824 <init_adc1+0xc0>)
 8001778:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800177c:	4a29      	ldr	r2, [pc, #164]	@ (8001824 <init_adc1+0xc0>)
 800177e:	f043 5340 	orr.w	r3, r3, #805306368	@ 0x30000000
 8001782:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

	bitclear(ADC1->CR, 29);		// exit deep power mode by setting DEEPPWD = 0 in control register
 8001786:	4b28      	ldr	r3, [pc, #160]	@ (8001828 <init_adc1+0xc4>)
 8001788:	689b      	ldr	r3, [r3, #8]
 800178a:	4a27      	ldr	r2, [pc, #156]	@ (8001828 <init_adc1+0xc4>)
 800178c:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 8001790:	6093      	str	r3, [r2, #8]
	bitset(ADC1->CR, 28); 		// turn on the ADC voltage reguator
 8001792:	4b25      	ldr	r3, [pc, #148]	@ (8001828 <init_adc1+0xc4>)
 8001794:	689b      	ldr	r3, [r3, #8]
 8001796:	4a24      	ldr	r2, [pc, #144]	@ (8001828 <init_adc1+0xc4>)
 8001798:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800179c:	6093      	str	r3, [r2, #8]

	bitset(ADC1->CFGR, 12); 	// OVRMOD: Disable overrun mode (ADC keeps going even if user does not read)
 800179e:	4b22      	ldr	r3, [pc, #136]	@ (8001828 <init_adc1+0xc4>)
 80017a0:	68db      	ldr	r3, [r3, #12]
 80017a2:	4a21      	ldr	r2, [pc, #132]	@ (8001828 <init_adc1+0xc4>)
 80017a4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80017a8:	60d3      	str	r3, [r2, #12]
	bitset(ADC1->ISR, 0); 		// ADC Ready
 80017aa:	4b1f      	ldr	r3, [pc, #124]	@ (8001828 <init_adc1+0xc4>)
 80017ac:	681b      	ldr	r3, [r3, #0]
 80017ae:	4a1e      	ldr	r2, [pc, #120]	@ (8001828 <init_adc1+0xc4>)
 80017b0:	f043 0301 	orr.w	r3, r3, #1
 80017b4:	6013      	str	r3, [r2, #0]

	delay_ms(10);				// wait for voltage regulator to stabilize
 80017b6:	2300      	movs	r3, #0
 80017b8:	607b      	str	r3, [r7, #4]
 80017ba:	e002      	b.n	80017c2 <init_adc1+0x5e>
 80017bc:	687b      	ldr	r3, [r7, #4]
 80017be:	3301      	adds	r3, #1
 80017c0:	607b      	str	r3, [r7, #4]
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	f5b3 5f7a 	cmp.w	r3, #16000	@ 0x3e80
 80017c8:	dbf8      	blt.n	80017bc <init_adc1+0x58>

	/* Sequencer Setup */
	bitset(ADC1->SQR1, 0);		// set sequence length to 2
 80017ca:	4b17      	ldr	r3, [pc, #92]	@ (8001828 <init_adc1+0xc4>)
 80017cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017ce:	4a16      	ldr	r2, [pc, #88]	@ (8001828 <init_adc1+0xc4>)
 80017d0:	f043 0301 	orr.w	r3, r3, #1
 80017d4:	6313      	str	r3, [r2, #48]	@ 0x30
	bitset(ADC1->SQR1, 6);  	// set 1st conversion to ch1 0b0001
 80017d6:	4b14      	ldr	r3, [pc, #80]	@ (8001828 <init_adc1+0xc4>)
 80017d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017da:	4a13      	ldr	r2, [pc, #76]	@ (8001828 <init_adc1+0xc4>)
 80017dc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80017e0:	6313      	str	r3, [r2, #48]	@ 0x30
	bitset(ADC1->SQR1, 13);		// set 2nd conversion to ch2 0b0010
 80017e2:	4b11      	ldr	r3, [pc, #68]	@ (8001828 <init_adc1+0xc4>)
 80017e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017e6:	4a10      	ldr	r2, [pc, #64]	@ (8001828 <init_adc1+0xc4>)
 80017e8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80017ec:	6313      	str	r3, [r2, #48]	@ 0x30

	ADC1->SMPR1 |= 0b000111111000;	// set sample speed to 700 ADC clock cycles
 80017ee:	4b0e      	ldr	r3, [pc, #56]	@ (8001828 <init_adc1+0xc4>)
 80017f0:	695b      	ldr	r3, [r3, #20]
 80017f2:	4a0d      	ldr	r2, [pc, #52]	@ (8001828 <init_adc1+0xc4>)
 80017f4:	f443 73fc 	orr.w	r3, r3, #504	@ 0x1f8
 80017f8:	6153      	str	r3, [r2, #20]

	ADC1->CR |= 1 ;				// enable ADC
 80017fa:	4b0b      	ldr	r3, [pc, #44]	@ (8001828 <init_adc1+0xc4>)
 80017fc:	689b      	ldr	r3, [r3, #8]
 80017fe:	4a0a      	ldr	r2, [pc, #40]	@ (8001828 <init_adc1+0xc4>)
 8001800:	f043 0301 	orr.w	r3, r3, #1
 8001804:	6093      	str	r3, [r2, #8]

	while (bitcheck(ADC1->ISR, 0) == 0);	// wait until ADC is ready
 8001806:	bf00      	nop
 8001808:	4b07      	ldr	r3, [pc, #28]	@ (8001828 <init_adc1+0xc4>)
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	f003 0301 	and.w	r3, r3, #1
 8001810:	2b00      	cmp	r3, #0
 8001812:	d0f9      	beq.n	8001808 <init_adc1+0xa4>
}
 8001814:	bf00      	nop
 8001816:	bf00      	nop
 8001818:	370c      	adds	r7, #12
 800181a:	46bd      	mov	sp, r7
 800181c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001820:	4770      	bx	lr
 8001822:	bf00      	nop
 8001824:	40021000 	.word	0x40021000
 8001828:	42028000 	.word	0x42028000

0800182c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800182c:	b480      	push	{r7}
 800182e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001830:	bf00      	nop
 8001832:	e7fd      	b.n	8001830 <NMI_Handler+0x4>

08001834 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001834:	b480      	push	{r7}
 8001836:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001838:	bf00      	nop
 800183a:	e7fd      	b.n	8001838 <HardFault_Handler+0x4>

0800183c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800183c:	b480      	push	{r7}
 800183e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001840:	bf00      	nop
 8001842:	e7fd      	b.n	8001840 <MemManage_Handler+0x4>

08001844 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001844:	b480      	push	{r7}
 8001846:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001848:	bf00      	nop
 800184a:	e7fd      	b.n	8001848 <BusFault_Handler+0x4>

0800184c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800184c:	b480      	push	{r7}
 800184e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001850:	bf00      	nop
 8001852:	e7fd      	b.n	8001850 <UsageFault_Handler+0x4>

08001854 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001854:	b480      	push	{r7}
 8001856:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001858:	bf00      	nop
 800185a:	46bd      	mov	sp, r7
 800185c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001860:	4770      	bx	lr

08001862 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001862:	b480      	push	{r7}
 8001864:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001866:	bf00      	nop
 8001868:	46bd      	mov	sp, r7
 800186a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800186e:	4770      	bx	lr

08001870 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001870:	b480      	push	{r7}
 8001872:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001874:	bf00      	nop
 8001876:	46bd      	mov	sp, r7
 8001878:	f85d 7b04 	ldr.w	r7, [sp], #4
 800187c:	4770      	bx	lr

0800187e <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800187e:	b480      	push	{r7}
 8001880:	af00      	add	r7, sp, #0
  return 1;
 8001882:	2301      	movs	r3, #1
}
 8001884:	4618      	mov	r0, r3
 8001886:	46bd      	mov	sp, r7
 8001888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800188c:	4770      	bx	lr

0800188e <_kill>:

int _kill(int pid, int sig)
{
 800188e:	b580      	push	{r7, lr}
 8001890:	b082      	sub	sp, #8
 8001892:	af00      	add	r7, sp, #0
 8001894:	6078      	str	r0, [r7, #4]
 8001896:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001898:	f000 fed4 	bl	8002644 <__errno>
 800189c:	4603      	mov	r3, r0
 800189e:	2216      	movs	r2, #22
 80018a0:	601a      	str	r2, [r3, #0]
  return -1;
 80018a2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80018a6:	4618      	mov	r0, r3
 80018a8:	3708      	adds	r7, #8
 80018aa:	46bd      	mov	sp, r7
 80018ac:	bd80      	pop	{r7, pc}

080018ae <_exit>:

void _exit (int status)
{
 80018ae:	b580      	push	{r7, lr}
 80018b0:	b082      	sub	sp, #8
 80018b2:	af00      	add	r7, sp, #0
 80018b4:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80018b6:	f04f 31ff 	mov.w	r1, #4294967295
 80018ba:	6878      	ldr	r0, [r7, #4]
 80018bc:	f7ff ffe7 	bl	800188e <_kill>
  while (1) {}    /* Make sure we hang here */
 80018c0:	bf00      	nop
 80018c2:	e7fd      	b.n	80018c0 <_exit+0x12>

080018c4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80018c4:	b580      	push	{r7, lr}
 80018c6:	b086      	sub	sp, #24
 80018c8:	af00      	add	r7, sp, #0
 80018ca:	60f8      	str	r0, [r7, #12]
 80018cc:	60b9      	str	r1, [r7, #8]
 80018ce:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80018d0:	2300      	movs	r3, #0
 80018d2:	617b      	str	r3, [r7, #20]
 80018d4:	e00a      	b.n	80018ec <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80018d6:	f3af 8000 	nop.w
 80018da:	4601      	mov	r1, r0
 80018dc:	68bb      	ldr	r3, [r7, #8]
 80018de:	1c5a      	adds	r2, r3, #1
 80018e0:	60ba      	str	r2, [r7, #8]
 80018e2:	b2ca      	uxtb	r2, r1
 80018e4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80018e6:	697b      	ldr	r3, [r7, #20]
 80018e8:	3301      	adds	r3, #1
 80018ea:	617b      	str	r3, [r7, #20]
 80018ec:	697a      	ldr	r2, [r7, #20]
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	429a      	cmp	r2, r3
 80018f2:	dbf0      	blt.n	80018d6 <_read+0x12>
  }

  return len;
 80018f4:	687b      	ldr	r3, [r7, #4]
}
 80018f6:	4618      	mov	r0, r3
 80018f8:	3718      	adds	r7, #24
 80018fa:	46bd      	mov	sp, r7
 80018fc:	bd80      	pop	{r7, pc}

080018fe <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80018fe:	b580      	push	{r7, lr}
 8001900:	b086      	sub	sp, #24
 8001902:	af00      	add	r7, sp, #0
 8001904:	60f8      	str	r0, [r7, #12]
 8001906:	60b9      	str	r1, [r7, #8]
 8001908:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800190a:	2300      	movs	r3, #0
 800190c:	617b      	str	r3, [r7, #20]
 800190e:	e009      	b.n	8001924 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001910:	68bb      	ldr	r3, [r7, #8]
 8001912:	1c5a      	adds	r2, r3, #1
 8001914:	60ba      	str	r2, [r7, #8]
 8001916:	781b      	ldrb	r3, [r3, #0]
 8001918:	4618      	mov	r0, r3
 800191a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800191e:	697b      	ldr	r3, [r7, #20]
 8001920:	3301      	adds	r3, #1
 8001922:	617b      	str	r3, [r7, #20]
 8001924:	697a      	ldr	r2, [r7, #20]
 8001926:	687b      	ldr	r3, [r7, #4]
 8001928:	429a      	cmp	r2, r3
 800192a:	dbf1      	blt.n	8001910 <_write+0x12>
  }
  return len;
 800192c:	687b      	ldr	r3, [r7, #4]
}
 800192e:	4618      	mov	r0, r3
 8001930:	3718      	adds	r7, #24
 8001932:	46bd      	mov	sp, r7
 8001934:	bd80      	pop	{r7, pc}

08001936 <_close>:

int _close(int file)
{
 8001936:	b480      	push	{r7}
 8001938:	b083      	sub	sp, #12
 800193a:	af00      	add	r7, sp, #0
 800193c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800193e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001942:	4618      	mov	r0, r3
 8001944:	370c      	adds	r7, #12
 8001946:	46bd      	mov	sp, r7
 8001948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800194c:	4770      	bx	lr

0800194e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800194e:	b480      	push	{r7}
 8001950:	b083      	sub	sp, #12
 8001952:	af00      	add	r7, sp, #0
 8001954:	6078      	str	r0, [r7, #4]
 8001956:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001958:	683b      	ldr	r3, [r7, #0]
 800195a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800195e:	605a      	str	r2, [r3, #4]
  return 0;
 8001960:	2300      	movs	r3, #0
}
 8001962:	4618      	mov	r0, r3
 8001964:	370c      	adds	r7, #12
 8001966:	46bd      	mov	sp, r7
 8001968:	f85d 7b04 	ldr.w	r7, [sp], #4
 800196c:	4770      	bx	lr

0800196e <_isatty>:

int _isatty(int file)
{
 800196e:	b480      	push	{r7}
 8001970:	b083      	sub	sp, #12
 8001972:	af00      	add	r7, sp, #0
 8001974:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001976:	2301      	movs	r3, #1
}
 8001978:	4618      	mov	r0, r3
 800197a:	370c      	adds	r7, #12
 800197c:	46bd      	mov	sp, r7
 800197e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001982:	4770      	bx	lr

08001984 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001984:	b480      	push	{r7}
 8001986:	b085      	sub	sp, #20
 8001988:	af00      	add	r7, sp, #0
 800198a:	60f8      	str	r0, [r7, #12]
 800198c:	60b9      	str	r1, [r7, #8]
 800198e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001990:	2300      	movs	r3, #0
}
 8001992:	4618      	mov	r0, r3
 8001994:	3714      	adds	r7, #20
 8001996:	46bd      	mov	sp, r7
 8001998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800199c:	4770      	bx	lr
	...

080019a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80019a0:	b580      	push	{r7, lr}
 80019a2:	b086      	sub	sp, #24
 80019a4:	af00      	add	r7, sp, #0
 80019a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80019a8:	4a14      	ldr	r2, [pc, #80]	@ (80019fc <_sbrk+0x5c>)
 80019aa:	4b15      	ldr	r3, [pc, #84]	@ (8001a00 <_sbrk+0x60>)
 80019ac:	1ad3      	subs	r3, r2, r3
 80019ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80019b0:	697b      	ldr	r3, [r7, #20]
 80019b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80019b4:	4b13      	ldr	r3, [pc, #76]	@ (8001a04 <_sbrk+0x64>)
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	2b00      	cmp	r3, #0
 80019ba:	d102      	bne.n	80019c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80019bc:	4b11      	ldr	r3, [pc, #68]	@ (8001a04 <_sbrk+0x64>)
 80019be:	4a12      	ldr	r2, [pc, #72]	@ (8001a08 <_sbrk+0x68>)
 80019c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80019c2:	4b10      	ldr	r3, [pc, #64]	@ (8001a04 <_sbrk+0x64>)
 80019c4:	681a      	ldr	r2, [r3, #0]
 80019c6:	687b      	ldr	r3, [r7, #4]
 80019c8:	4413      	add	r3, r2
 80019ca:	693a      	ldr	r2, [r7, #16]
 80019cc:	429a      	cmp	r2, r3
 80019ce:	d207      	bcs.n	80019e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80019d0:	f000 fe38 	bl	8002644 <__errno>
 80019d4:	4603      	mov	r3, r0
 80019d6:	220c      	movs	r2, #12
 80019d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80019da:	f04f 33ff 	mov.w	r3, #4294967295
 80019de:	e009      	b.n	80019f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80019e0:	4b08      	ldr	r3, [pc, #32]	@ (8001a04 <_sbrk+0x64>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80019e6:	4b07      	ldr	r3, [pc, #28]	@ (8001a04 <_sbrk+0x64>)
 80019e8:	681a      	ldr	r2, [r3, #0]
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	4413      	add	r3, r2
 80019ee:	4a05      	ldr	r2, [pc, #20]	@ (8001a04 <_sbrk+0x64>)
 80019f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80019f2:	68fb      	ldr	r3, [r7, #12]
}
 80019f4:	4618      	mov	r0, r3
 80019f6:	3718      	adds	r7, #24
 80019f8:	46bd      	mov	sp, r7
 80019fa:	bd80      	pop	{r7, pc}
 80019fc:	20030000 	.word	0x20030000
 8001a00:	00000400 	.word	0x00000400
 8001a04:	20000214 	.word	0x20000214
 8001a08:	20000368 	.word	0x20000368

08001a0c <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 8001a0c:	b480      	push	{r7}
 8001a0e:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8001a10:	4b06      	ldr	r3, [pc, #24]	@ (8001a2c <SystemInit+0x20>)
 8001a12:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001a16:	4a05      	ldr	r2, [pc, #20]	@ (8001a2c <SystemInit+0x20>)
 8001a18:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001a1c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
#endif
}
 8001a20:	bf00      	nop
 8001a22:	46bd      	mov	sp, r7
 8001a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a28:	4770      	bx	lr
 8001a2a:	bf00      	nop
 8001a2c:	e000ed00 	.word	0xe000ed00

08001a30 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 8001a30:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001a68 <LoopForever+0x2>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8001a34:	f7ff ffea 	bl	8001a0c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8001a38:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8001a3a:	e003      	b.n	8001a44 <LoopCopyDataInit>

08001a3c <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8001a3c:	4b0b      	ldr	r3, [pc, #44]	@ (8001a6c <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8001a3e:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8001a40:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8001a42:	3104      	adds	r1, #4

08001a44 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8001a44:	480a      	ldr	r0, [pc, #40]	@ (8001a70 <LoopForever+0xa>)
	ldr	r3, =_edata
 8001a46:	4b0b      	ldr	r3, [pc, #44]	@ (8001a74 <LoopForever+0xe>)
	adds	r2, r0, r1
 8001a48:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8001a4a:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8001a4c:	d3f6      	bcc.n	8001a3c <CopyDataInit>
	ldr	r2, =_sbss
 8001a4e:	4a0a      	ldr	r2, [pc, #40]	@ (8001a78 <LoopForever+0x12>)
	b	LoopFillZerobss
 8001a50:	e002      	b.n	8001a58 <LoopFillZerobss>

08001a52 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8001a52:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8001a54:	f842 3b04 	str.w	r3, [r2], #4

08001a58 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8001a58:	4b08      	ldr	r3, [pc, #32]	@ (8001a7c <LoopForever+0x16>)
	cmp	r2, r3
 8001a5a:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8001a5c:	d3f9      	bcc.n	8001a52 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001a5e:	f000 fdf7 	bl	8002650 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8001a62:	f7ff f93d 	bl	8000ce0 <main>

08001a66 <LoopForever>:

LoopForever:
    b LoopForever
 8001a66:	e7fe      	b.n	8001a66 <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8001a68:	20030000 	.word	0x20030000
	ldr	r3, =_sidata
 8001a6c:	08004b1c 	.word	0x08004b1c
	ldr	r0, =_sdata
 8001a70:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8001a74:	200001c8 	.word	0x200001c8
	ldr	r2, =_sbss
 8001a78:	200001c8 	.word	0x200001c8
	ldr	r3, = _ebss
 8001a7c:	20000364 	.word	0x20000364

08001a80 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8001a80:	e7fe      	b.n	8001a80 <ADC1_2_IRQHandler>

08001a82 <__cvt>:
 8001a82:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001a86:	ec57 6b10 	vmov	r6, r7, d0
 8001a8a:	2f00      	cmp	r7, #0
 8001a8c:	460c      	mov	r4, r1
 8001a8e:	4619      	mov	r1, r3
 8001a90:	463b      	mov	r3, r7
 8001a92:	bfb4      	ite	lt
 8001a94:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001a98:	2300      	movge	r3, #0
 8001a9a:	4691      	mov	r9, r2
 8001a9c:	bfbf      	itttt	lt
 8001a9e:	4632      	movlt	r2, r6
 8001aa0:	461f      	movlt	r7, r3
 8001aa2:	232d      	movlt	r3, #45	@ 0x2d
 8001aa4:	4616      	movlt	r6, r2
 8001aa6:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001aaa:	700b      	strb	r3, [r1, #0]
 8001aac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001aae:	f023 0820 	bic.w	r8, r3, #32
 8001ab2:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001ab6:	d005      	beq.n	8001ac4 <__cvt+0x42>
 8001ab8:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001abc:	d100      	bne.n	8001ac0 <__cvt+0x3e>
 8001abe:	3401      	adds	r4, #1
 8001ac0:	2102      	movs	r1, #2
 8001ac2:	e000      	b.n	8001ac6 <__cvt+0x44>
 8001ac4:	2103      	movs	r1, #3
 8001ac6:	ab03      	add	r3, sp, #12
 8001ac8:	4622      	mov	r2, r4
 8001aca:	9301      	str	r3, [sp, #4]
 8001acc:	ab02      	add	r3, sp, #8
 8001ace:	ec47 6b10 	vmov	d0, r6, r7
 8001ad2:	9300      	str	r3, [sp, #0]
 8001ad4:	4653      	mov	r3, sl
 8001ad6:	f000 fe7f 	bl	80027d8 <_dtoa_r>
 8001ada:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001ade:	4605      	mov	r5, r0
 8001ae0:	d119      	bne.n	8001b16 <__cvt+0x94>
 8001ae2:	f019 0f01 	tst.w	r9, #1
 8001ae6:	d00e      	beq.n	8001b06 <__cvt+0x84>
 8001ae8:	eb00 0904 	add.w	r9, r0, r4
 8001aec:	2200      	movs	r2, #0
 8001aee:	2300      	movs	r3, #0
 8001af0:	4630      	mov	r0, r6
 8001af2:	4639      	mov	r1, r7
 8001af4:	f7fe ffcc 	bl	8000a90 <__aeabi_dcmpeq>
 8001af8:	b108      	cbz	r0, 8001afe <__cvt+0x7c>
 8001afa:	f8cd 900c 	str.w	r9, [sp, #12]
 8001afe:	2230      	movs	r2, #48	@ 0x30
 8001b00:	9b03      	ldr	r3, [sp, #12]
 8001b02:	454b      	cmp	r3, r9
 8001b04:	d31e      	bcc.n	8001b44 <__cvt+0xc2>
 8001b06:	9b03      	ldr	r3, [sp, #12]
 8001b08:	4628      	mov	r0, r5
 8001b0a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001b0c:	1b5b      	subs	r3, r3, r5
 8001b0e:	6013      	str	r3, [r2, #0]
 8001b10:	b004      	add	sp, #16
 8001b12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b16:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001b1a:	eb00 0904 	add.w	r9, r0, r4
 8001b1e:	d1e5      	bne.n	8001aec <__cvt+0x6a>
 8001b20:	7803      	ldrb	r3, [r0, #0]
 8001b22:	2b30      	cmp	r3, #48	@ 0x30
 8001b24:	d10a      	bne.n	8001b3c <__cvt+0xba>
 8001b26:	2200      	movs	r2, #0
 8001b28:	2300      	movs	r3, #0
 8001b2a:	4630      	mov	r0, r6
 8001b2c:	4639      	mov	r1, r7
 8001b2e:	f7fe ffaf 	bl	8000a90 <__aeabi_dcmpeq>
 8001b32:	b918      	cbnz	r0, 8001b3c <__cvt+0xba>
 8001b34:	f1c4 0401 	rsb	r4, r4, #1
 8001b38:	f8ca 4000 	str.w	r4, [sl]
 8001b3c:	f8da 3000 	ldr.w	r3, [sl]
 8001b40:	4499      	add	r9, r3
 8001b42:	e7d3      	b.n	8001aec <__cvt+0x6a>
 8001b44:	1c59      	adds	r1, r3, #1
 8001b46:	9103      	str	r1, [sp, #12]
 8001b48:	701a      	strb	r2, [r3, #0]
 8001b4a:	e7d9      	b.n	8001b00 <__cvt+0x7e>

08001b4c <__exponent>:
 8001b4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001b4e:	2900      	cmp	r1, #0
 8001b50:	7002      	strb	r2, [r0, #0]
 8001b52:	bfba      	itte	lt
 8001b54:	4249      	neglt	r1, r1
 8001b56:	232d      	movlt	r3, #45	@ 0x2d
 8001b58:	232b      	movge	r3, #43	@ 0x2b
 8001b5a:	2909      	cmp	r1, #9
 8001b5c:	7043      	strb	r3, [r0, #1]
 8001b5e:	dd28      	ble.n	8001bb2 <__exponent+0x66>
 8001b60:	f10d 0307 	add.w	r3, sp, #7
 8001b64:	270a      	movs	r7, #10
 8001b66:	461d      	mov	r5, r3
 8001b68:	461a      	mov	r2, r3
 8001b6a:	3b01      	subs	r3, #1
 8001b6c:	fbb1 f6f7 	udiv	r6, r1, r7
 8001b70:	fb07 1416 	mls	r4, r7, r6, r1
 8001b74:	3430      	adds	r4, #48	@ 0x30
 8001b76:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001b7a:	460c      	mov	r4, r1
 8001b7c:	4631      	mov	r1, r6
 8001b7e:	2c63      	cmp	r4, #99	@ 0x63
 8001b80:	dcf2      	bgt.n	8001b68 <__exponent+0x1c>
 8001b82:	3130      	adds	r1, #48	@ 0x30
 8001b84:	1e94      	subs	r4, r2, #2
 8001b86:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001b8a:	1c41      	adds	r1, r0, #1
 8001b8c:	4623      	mov	r3, r4
 8001b8e:	42ab      	cmp	r3, r5
 8001b90:	d30a      	bcc.n	8001ba8 <__exponent+0x5c>
 8001b92:	f10d 0309 	add.w	r3, sp, #9
 8001b96:	1a9b      	subs	r3, r3, r2
 8001b98:	42ac      	cmp	r4, r5
 8001b9a:	bf88      	it	hi
 8001b9c:	2300      	movhi	r3, #0
 8001b9e:	3302      	adds	r3, #2
 8001ba0:	4403      	add	r3, r0
 8001ba2:	1a18      	subs	r0, r3, r0
 8001ba4:	b003      	add	sp, #12
 8001ba6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ba8:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001bac:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001bb0:	e7ed      	b.n	8001b8e <__exponent+0x42>
 8001bb2:	2330      	movs	r3, #48	@ 0x30
 8001bb4:	3130      	adds	r1, #48	@ 0x30
 8001bb6:	7083      	strb	r3, [r0, #2]
 8001bb8:	1d03      	adds	r3, r0, #4
 8001bba:	70c1      	strb	r1, [r0, #3]
 8001bbc:	e7f1      	b.n	8001ba2 <__exponent+0x56>
	...

08001bc0 <_printf_float>:
 8001bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bc4:	b08d      	sub	sp, #52	@ 0x34
 8001bc6:	460c      	mov	r4, r1
 8001bc8:	4616      	mov	r6, r2
 8001bca:	461f      	mov	r7, r3
 8001bcc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001bd0:	4605      	mov	r5, r0
 8001bd2:	f000 fced 	bl	80025b0 <_localeconv_r>
 8001bd6:	6803      	ldr	r3, [r0, #0]
 8001bd8:	4618      	mov	r0, r3
 8001bda:	9304      	str	r3, [sp, #16]
 8001bdc:	f7fe fb2c 	bl	8000238 <strlen>
 8001be0:	2300      	movs	r3, #0
 8001be2:	9005      	str	r0, [sp, #20]
 8001be4:	930a      	str	r3, [sp, #40]	@ 0x28
 8001be6:	f8d8 3000 	ldr.w	r3, [r8]
 8001bea:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001bee:	3307      	adds	r3, #7
 8001bf0:	f8d4 b000 	ldr.w	fp, [r4]
 8001bf4:	f023 0307 	bic.w	r3, r3, #7
 8001bf8:	f103 0208 	add.w	r2, r3, #8
 8001bfc:	f8c8 2000 	str.w	r2, [r8]
 8001c00:	f04f 32ff 	mov.w	r2, #4294967295
 8001c04:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001c08:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001c0c:	f8cd 8018 	str.w	r8, [sp, #24]
 8001c10:	9307      	str	r3, [sp, #28]
 8001c12:	4b9d      	ldr	r3, [pc, #628]	@ (8001e88 <_printf_float+0x2c8>)
 8001c14:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001c18:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001c1c:	f7fe ff6a 	bl	8000af4 <__aeabi_dcmpun>
 8001c20:	bb70      	cbnz	r0, 8001c80 <_printf_float+0xc0>
 8001c22:	f04f 32ff 	mov.w	r2, #4294967295
 8001c26:	4b98      	ldr	r3, [pc, #608]	@ (8001e88 <_printf_float+0x2c8>)
 8001c28:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001c2c:	f7fe ff44 	bl	8000ab8 <__aeabi_dcmple>
 8001c30:	bb30      	cbnz	r0, 8001c80 <_printf_float+0xc0>
 8001c32:	2200      	movs	r2, #0
 8001c34:	2300      	movs	r3, #0
 8001c36:	4640      	mov	r0, r8
 8001c38:	4649      	mov	r1, r9
 8001c3a:	f7fe ff33 	bl	8000aa4 <__aeabi_dcmplt>
 8001c3e:	b110      	cbz	r0, 8001c46 <_printf_float+0x86>
 8001c40:	232d      	movs	r3, #45	@ 0x2d
 8001c42:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001c46:	4a91      	ldr	r2, [pc, #580]	@ (8001e8c <_printf_float+0x2cc>)
 8001c48:	4b91      	ldr	r3, [pc, #580]	@ (8001e90 <_printf_float+0x2d0>)
 8001c4a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001c4e:	bf8c      	ite	hi
 8001c50:	4690      	movhi	r8, r2
 8001c52:	4698      	movls	r8, r3
 8001c54:	2303      	movs	r3, #3
 8001c56:	f04f 0900 	mov.w	r9, #0
 8001c5a:	6123      	str	r3, [r4, #16]
 8001c5c:	f02b 0304 	bic.w	r3, fp, #4
 8001c60:	6023      	str	r3, [r4, #0]
 8001c62:	4633      	mov	r3, r6
 8001c64:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001c66:	4621      	mov	r1, r4
 8001c68:	4628      	mov	r0, r5
 8001c6a:	9700      	str	r7, [sp, #0]
 8001c6c:	f000 f9d2 	bl	8002014 <_printf_common>
 8001c70:	3001      	adds	r0, #1
 8001c72:	f040 808d 	bne.w	8001d90 <_printf_float+0x1d0>
 8001c76:	f04f 30ff 	mov.w	r0, #4294967295
 8001c7a:	b00d      	add	sp, #52	@ 0x34
 8001c7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c80:	4642      	mov	r2, r8
 8001c82:	464b      	mov	r3, r9
 8001c84:	4640      	mov	r0, r8
 8001c86:	4649      	mov	r1, r9
 8001c88:	f7fe ff34 	bl	8000af4 <__aeabi_dcmpun>
 8001c8c:	b140      	cbz	r0, 8001ca0 <_printf_float+0xe0>
 8001c8e:	464b      	mov	r3, r9
 8001c90:	4a80      	ldr	r2, [pc, #512]	@ (8001e94 <_printf_float+0x2d4>)
 8001c92:	2b00      	cmp	r3, #0
 8001c94:	bfbc      	itt	lt
 8001c96:	232d      	movlt	r3, #45	@ 0x2d
 8001c98:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001c9c:	4b7e      	ldr	r3, [pc, #504]	@ (8001e98 <_printf_float+0x2d8>)
 8001c9e:	e7d4      	b.n	8001c4a <_printf_float+0x8a>
 8001ca0:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001ca4:	6863      	ldr	r3, [r4, #4]
 8001ca6:	9206      	str	r2, [sp, #24]
 8001ca8:	1c5a      	adds	r2, r3, #1
 8001caa:	d13b      	bne.n	8001d24 <_printf_float+0x164>
 8001cac:	2306      	movs	r3, #6
 8001cae:	6063      	str	r3, [r4, #4]
 8001cb0:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	4628      	mov	r0, r5
 8001cb8:	6022      	str	r2, [r4, #0]
 8001cba:	9303      	str	r3, [sp, #12]
 8001cbc:	ab0a      	add	r3, sp, #40	@ 0x28
 8001cbe:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001cc2:	ab09      	add	r3, sp, #36	@ 0x24
 8001cc4:	ec49 8b10 	vmov	d0, r8, r9
 8001cc8:	9300      	str	r3, [sp, #0]
 8001cca:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001cce:	6861      	ldr	r1, [r4, #4]
 8001cd0:	f7ff fed7 	bl	8001a82 <__cvt>
 8001cd4:	9b06      	ldr	r3, [sp, #24]
 8001cd6:	4680      	mov	r8, r0
 8001cd8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001cda:	2b47      	cmp	r3, #71	@ 0x47
 8001cdc:	d129      	bne.n	8001d32 <_printf_float+0x172>
 8001cde:	1cc8      	adds	r0, r1, #3
 8001ce0:	db02      	blt.n	8001ce8 <_printf_float+0x128>
 8001ce2:	6863      	ldr	r3, [r4, #4]
 8001ce4:	4299      	cmp	r1, r3
 8001ce6:	dd41      	ble.n	8001d6c <_printf_float+0x1ac>
 8001ce8:	f1aa 0a02 	sub.w	sl, sl, #2
 8001cec:	fa5f fa8a 	uxtb.w	sl, sl
 8001cf0:	3901      	subs	r1, #1
 8001cf2:	4652      	mov	r2, sl
 8001cf4:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001cf8:	9109      	str	r1, [sp, #36]	@ 0x24
 8001cfa:	f7ff ff27 	bl	8001b4c <__exponent>
 8001cfe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001d00:	4681      	mov	r9, r0
 8001d02:	1813      	adds	r3, r2, r0
 8001d04:	2a01      	cmp	r2, #1
 8001d06:	6123      	str	r3, [r4, #16]
 8001d08:	dc02      	bgt.n	8001d10 <_printf_float+0x150>
 8001d0a:	6822      	ldr	r2, [r4, #0]
 8001d0c:	07d2      	lsls	r2, r2, #31
 8001d0e:	d501      	bpl.n	8001d14 <_printf_float+0x154>
 8001d10:	3301      	adds	r3, #1
 8001d12:	6123      	str	r3, [r4, #16]
 8001d14:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001d18:	2b00      	cmp	r3, #0
 8001d1a:	d0a2      	beq.n	8001c62 <_printf_float+0xa2>
 8001d1c:	232d      	movs	r3, #45	@ 0x2d
 8001d1e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001d22:	e79e      	b.n	8001c62 <_printf_float+0xa2>
 8001d24:	9a06      	ldr	r2, [sp, #24]
 8001d26:	2a47      	cmp	r2, #71	@ 0x47
 8001d28:	d1c2      	bne.n	8001cb0 <_printf_float+0xf0>
 8001d2a:	2b00      	cmp	r3, #0
 8001d2c:	d1c0      	bne.n	8001cb0 <_printf_float+0xf0>
 8001d2e:	2301      	movs	r3, #1
 8001d30:	e7bd      	b.n	8001cae <_printf_float+0xee>
 8001d32:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001d36:	d9db      	bls.n	8001cf0 <_printf_float+0x130>
 8001d38:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001d3c:	d118      	bne.n	8001d70 <_printf_float+0x1b0>
 8001d3e:	2900      	cmp	r1, #0
 8001d40:	6863      	ldr	r3, [r4, #4]
 8001d42:	dd0b      	ble.n	8001d5c <_printf_float+0x19c>
 8001d44:	6121      	str	r1, [r4, #16]
 8001d46:	b913      	cbnz	r3, 8001d4e <_printf_float+0x18e>
 8001d48:	6822      	ldr	r2, [r4, #0]
 8001d4a:	07d0      	lsls	r0, r2, #31
 8001d4c:	d502      	bpl.n	8001d54 <_printf_float+0x194>
 8001d4e:	3301      	adds	r3, #1
 8001d50:	440b      	add	r3, r1
 8001d52:	6123      	str	r3, [r4, #16]
 8001d54:	f04f 0900 	mov.w	r9, #0
 8001d58:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001d5a:	e7db      	b.n	8001d14 <_printf_float+0x154>
 8001d5c:	b913      	cbnz	r3, 8001d64 <_printf_float+0x1a4>
 8001d5e:	6822      	ldr	r2, [r4, #0]
 8001d60:	07d2      	lsls	r2, r2, #31
 8001d62:	d501      	bpl.n	8001d68 <_printf_float+0x1a8>
 8001d64:	3302      	adds	r3, #2
 8001d66:	e7f4      	b.n	8001d52 <_printf_float+0x192>
 8001d68:	2301      	movs	r3, #1
 8001d6a:	e7f2      	b.n	8001d52 <_printf_float+0x192>
 8001d6c:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001d70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001d72:	4299      	cmp	r1, r3
 8001d74:	db05      	blt.n	8001d82 <_printf_float+0x1c2>
 8001d76:	6823      	ldr	r3, [r4, #0]
 8001d78:	6121      	str	r1, [r4, #16]
 8001d7a:	07d8      	lsls	r0, r3, #31
 8001d7c:	d5ea      	bpl.n	8001d54 <_printf_float+0x194>
 8001d7e:	1c4b      	adds	r3, r1, #1
 8001d80:	e7e7      	b.n	8001d52 <_printf_float+0x192>
 8001d82:	2900      	cmp	r1, #0
 8001d84:	bfd4      	ite	le
 8001d86:	f1c1 0202 	rsble	r2, r1, #2
 8001d8a:	2201      	movgt	r2, #1
 8001d8c:	4413      	add	r3, r2
 8001d8e:	e7e0      	b.n	8001d52 <_printf_float+0x192>
 8001d90:	6823      	ldr	r3, [r4, #0]
 8001d92:	055a      	lsls	r2, r3, #21
 8001d94:	d407      	bmi.n	8001da6 <_printf_float+0x1e6>
 8001d96:	6923      	ldr	r3, [r4, #16]
 8001d98:	4642      	mov	r2, r8
 8001d9a:	4631      	mov	r1, r6
 8001d9c:	4628      	mov	r0, r5
 8001d9e:	47b8      	blx	r7
 8001da0:	3001      	adds	r0, #1
 8001da2:	d12b      	bne.n	8001dfc <_printf_float+0x23c>
 8001da4:	e767      	b.n	8001c76 <_printf_float+0xb6>
 8001da6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001daa:	f240 80dd 	bls.w	8001f68 <_printf_float+0x3a8>
 8001dae:	2200      	movs	r2, #0
 8001db0:	2300      	movs	r3, #0
 8001db2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001db6:	f7fe fe6b 	bl	8000a90 <__aeabi_dcmpeq>
 8001dba:	2800      	cmp	r0, #0
 8001dbc:	d033      	beq.n	8001e26 <_printf_float+0x266>
 8001dbe:	2301      	movs	r3, #1
 8001dc0:	4a36      	ldr	r2, [pc, #216]	@ (8001e9c <_printf_float+0x2dc>)
 8001dc2:	4631      	mov	r1, r6
 8001dc4:	4628      	mov	r0, r5
 8001dc6:	47b8      	blx	r7
 8001dc8:	3001      	adds	r0, #1
 8001dca:	f43f af54 	beq.w	8001c76 <_printf_float+0xb6>
 8001dce:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001dd2:	4543      	cmp	r3, r8
 8001dd4:	db02      	blt.n	8001ddc <_printf_float+0x21c>
 8001dd6:	6823      	ldr	r3, [r4, #0]
 8001dd8:	07d8      	lsls	r0, r3, #31
 8001dda:	d50f      	bpl.n	8001dfc <_printf_float+0x23c>
 8001ddc:	4631      	mov	r1, r6
 8001dde:	4628      	mov	r0, r5
 8001de0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001de4:	47b8      	blx	r7
 8001de6:	3001      	adds	r0, #1
 8001de8:	f43f af45 	beq.w	8001c76 <_printf_float+0xb6>
 8001dec:	f04f 0900 	mov.w	r9, #0
 8001df0:	f108 38ff 	add.w	r8, r8, #4294967295
 8001df4:	f104 0a1a 	add.w	sl, r4, #26
 8001df8:	45c8      	cmp	r8, r9
 8001dfa:	dc09      	bgt.n	8001e10 <_printf_float+0x250>
 8001dfc:	6823      	ldr	r3, [r4, #0]
 8001dfe:	079b      	lsls	r3, r3, #30
 8001e00:	f100 8103 	bmi.w	800200a <_printf_float+0x44a>
 8001e04:	68e0      	ldr	r0, [r4, #12]
 8001e06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001e08:	4298      	cmp	r0, r3
 8001e0a:	bfb8      	it	lt
 8001e0c:	4618      	movlt	r0, r3
 8001e0e:	e734      	b.n	8001c7a <_printf_float+0xba>
 8001e10:	2301      	movs	r3, #1
 8001e12:	4652      	mov	r2, sl
 8001e14:	4631      	mov	r1, r6
 8001e16:	4628      	mov	r0, r5
 8001e18:	47b8      	blx	r7
 8001e1a:	3001      	adds	r0, #1
 8001e1c:	f43f af2b 	beq.w	8001c76 <_printf_float+0xb6>
 8001e20:	f109 0901 	add.w	r9, r9, #1
 8001e24:	e7e8      	b.n	8001df8 <_printf_float+0x238>
 8001e26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	dc39      	bgt.n	8001ea0 <_printf_float+0x2e0>
 8001e2c:	2301      	movs	r3, #1
 8001e2e:	4a1b      	ldr	r2, [pc, #108]	@ (8001e9c <_printf_float+0x2dc>)
 8001e30:	4631      	mov	r1, r6
 8001e32:	4628      	mov	r0, r5
 8001e34:	47b8      	blx	r7
 8001e36:	3001      	adds	r0, #1
 8001e38:	f43f af1d 	beq.w	8001c76 <_printf_float+0xb6>
 8001e3c:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001e40:	ea59 0303 	orrs.w	r3, r9, r3
 8001e44:	d102      	bne.n	8001e4c <_printf_float+0x28c>
 8001e46:	6823      	ldr	r3, [r4, #0]
 8001e48:	07d9      	lsls	r1, r3, #31
 8001e4a:	d5d7      	bpl.n	8001dfc <_printf_float+0x23c>
 8001e4c:	4631      	mov	r1, r6
 8001e4e:	4628      	mov	r0, r5
 8001e50:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001e54:	47b8      	blx	r7
 8001e56:	3001      	adds	r0, #1
 8001e58:	f43f af0d 	beq.w	8001c76 <_printf_float+0xb6>
 8001e5c:	f04f 0a00 	mov.w	sl, #0
 8001e60:	f104 0b1a 	add.w	fp, r4, #26
 8001e64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001e66:	425b      	negs	r3, r3
 8001e68:	4553      	cmp	r3, sl
 8001e6a:	dc01      	bgt.n	8001e70 <_printf_float+0x2b0>
 8001e6c:	464b      	mov	r3, r9
 8001e6e:	e793      	b.n	8001d98 <_printf_float+0x1d8>
 8001e70:	2301      	movs	r3, #1
 8001e72:	465a      	mov	r2, fp
 8001e74:	4631      	mov	r1, r6
 8001e76:	4628      	mov	r0, r5
 8001e78:	47b8      	blx	r7
 8001e7a:	3001      	adds	r0, #1
 8001e7c:	f43f aefb 	beq.w	8001c76 <_printf_float+0xb6>
 8001e80:	f10a 0a01 	add.w	sl, sl, #1
 8001e84:	e7ee      	b.n	8001e64 <_printf_float+0x2a4>
 8001e86:	bf00      	nop
 8001e88:	7fefffff 	.word	0x7fefffff
 8001e8c:	0800479a 	.word	0x0800479a
 8001e90:	08004796 	.word	0x08004796
 8001e94:	080047a2 	.word	0x080047a2
 8001e98:	0800479e 	.word	0x0800479e
 8001e9c:	080047a6 	.word	0x080047a6
 8001ea0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001ea2:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001ea6:	4553      	cmp	r3, sl
 8001ea8:	bfa8      	it	ge
 8001eaa:	4653      	movge	r3, sl
 8001eac:	2b00      	cmp	r3, #0
 8001eae:	4699      	mov	r9, r3
 8001eb0:	dc36      	bgt.n	8001f20 <_printf_float+0x360>
 8001eb2:	f04f 0b00 	mov.w	fp, #0
 8001eb6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001eba:	f104 021a 	add.w	r2, r4, #26
 8001ebe:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001ec0:	9306      	str	r3, [sp, #24]
 8001ec2:	eba3 0309 	sub.w	r3, r3, r9
 8001ec6:	455b      	cmp	r3, fp
 8001ec8:	dc31      	bgt.n	8001f2e <_printf_float+0x36e>
 8001eca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001ecc:	459a      	cmp	sl, r3
 8001ece:	dc3a      	bgt.n	8001f46 <_printf_float+0x386>
 8001ed0:	6823      	ldr	r3, [r4, #0]
 8001ed2:	07da      	lsls	r2, r3, #31
 8001ed4:	d437      	bmi.n	8001f46 <_printf_float+0x386>
 8001ed6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001ed8:	ebaa 0903 	sub.w	r9, sl, r3
 8001edc:	9b06      	ldr	r3, [sp, #24]
 8001ede:	ebaa 0303 	sub.w	r3, sl, r3
 8001ee2:	4599      	cmp	r9, r3
 8001ee4:	bfa8      	it	ge
 8001ee6:	4699      	movge	r9, r3
 8001ee8:	f1b9 0f00 	cmp.w	r9, #0
 8001eec:	dc33      	bgt.n	8001f56 <_printf_float+0x396>
 8001eee:	f04f 0800 	mov.w	r8, #0
 8001ef2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001ef6:	f104 0b1a 	add.w	fp, r4, #26
 8001efa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001efc:	ebaa 0303 	sub.w	r3, sl, r3
 8001f00:	eba3 0309 	sub.w	r3, r3, r9
 8001f04:	4543      	cmp	r3, r8
 8001f06:	f77f af79 	ble.w	8001dfc <_printf_float+0x23c>
 8001f0a:	2301      	movs	r3, #1
 8001f0c:	465a      	mov	r2, fp
 8001f0e:	4631      	mov	r1, r6
 8001f10:	4628      	mov	r0, r5
 8001f12:	47b8      	blx	r7
 8001f14:	3001      	adds	r0, #1
 8001f16:	f43f aeae 	beq.w	8001c76 <_printf_float+0xb6>
 8001f1a:	f108 0801 	add.w	r8, r8, #1
 8001f1e:	e7ec      	b.n	8001efa <_printf_float+0x33a>
 8001f20:	4642      	mov	r2, r8
 8001f22:	4631      	mov	r1, r6
 8001f24:	4628      	mov	r0, r5
 8001f26:	47b8      	blx	r7
 8001f28:	3001      	adds	r0, #1
 8001f2a:	d1c2      	bne.n	8001eb2 <_printf_float+0x2f2>
 8001f2c:	e6a3      	b.n	8001c76 <_printf_float+0xb6>
 8001f2e:	2301      	movs	r3, #1
 8001f30:	4631      	mov	r1, r6
 8001f32:	4628      	mov	r0, r5
 8001f34:	9206      	str	r2, [sp, #24]
 8001f36:	47b8      	blx	r7
 8001f38:	3001      	adds	r0, #1
 8001f3a:	f43f ae9c 	beq.w	8001c76 <_printf_float+0xb6>
 8001f3e:	f10b 0b01 	add.w	fp, fp, #1
 8001f42:	9a06      	ldr	r2, [sp, #24]
 8001f44:	e7bb      	b.n	8001ebe <_printf_float+0x2fe>
 8001f46:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001f4a:	4631      	mov	r1, r6
 8001f4c:	4628      	mov	r0, r5
 8001f4e:	47b8      	blx	r7
 8001f50:	3001      	adds	r0, #1
 8001f52:	d1c0      	bne.n	8001ed6 <_printf_float+0x316>
 8001f54:	e68f      	b.n	8001c76 <_printf_float+0xb6>
 8001f56:	9a06      	ldr	r2, [sp, #24]
 8001f58:	464b      	mov	r3, r9
 8001f5a:	4631      	mov	r1, r6
 8001f5c:	4628      	mov	r0, r5
 8001f5e:	4442      	add	r2, r8
 8001f60:	47b8      	blx	r7
 8001f62:	3001      	adds	r0, #1
 8001f64:	d1c3      	bne.n	8001eee <_printf_float+0x32e>
 8001f66:	e686      	b.n	8001c76 <_printf_float+0xb6>
 8001f68:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001f6c:	f1ba 0f01 	cmp.w	sl, #1
 8001f70:	dc01      	bgt.n	8001f76 <_printf_float+0x3b6>
 8001f72:	07db      	lsls	r3, r3, #31
 8001f74:	d536      	bpl.n	8001fe4 <_printf_float+0x424>
 8001f76:	2301      	movs	r3, #1
 8001f78:	4642      	mov	r2, r8
 8001f7a:	4631      	mov	r1, r6
 8001f7c:	4628      	mov	r0, r5
 8001f7e:	47b8      	blx	r7
 8001f80:	3001      	adds	r0, #1
 8001f82:	f43f ae78 	beq.w	8001c76 <_printf_float+0xb6>
 8001f86:	4631      	mov	r1, r6
 8001f88:	4628      	mov	r0, r5
 8001f8a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001f8e:	47b8      	blx	r7
 8001f90:	3001      	adds	r0, #1
 8001f92:	f43f ae70 	beq.w	8001c76 <_printf_float+0xb6>
 8001f96:	2200      	movs	r2, #0
 8001f98:	2300      	movs	r3, #0
 8001f9a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001f9e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001fa2:	f7fe fd75 	bl	8000a90 <__aeabi_dcmpeq>
 8001fa6:	b9c0      	cbnz	r0, 8001fda <_printf_float+0x41a>
 8001fa8:	4653      	mov	r3, sl
 8001faa:	f108 0201 	add.w	r2, r8, #1
 8001fae:	4631      	mov	r1, r6
 8001fb0:	4628      	mov	r0, r5
 8001fb2:	47b8      	blx	r7
 8001fb4:	3001      	adds	r0, #1
 8001fb6:	d10c      	bne.n	8001fd2 <_printf_float+0x412>
 8001fb8:	e65d      	b.n	8001c76 <_printf_float+0xb6>
 8001fba:	2301      	movs	r3, #1
 8001fbc:	465a      	mov	r2, fp
 8001fbe:	4631      	mov	r1, r6
 8001fc0:	4628      	mov	r0, r5
 8001fc2:	47b8      	blx	r7
 8001fc4:	3001      	adds	r0, #1
 8001fc6:	f43f ae56 	beq.w	8001c76 <_printf_float+0xb6>
 8001fca:	f108 0801 	add.w	r8, r8, #1
 8001fce:	45d0      	cmp	r8, sl
 8001fd0:	dbf3      	blt.n	8001fba <_printf_float+0x3fa>
 8001fd2:	464b      	mov	r3, r9
 8001fd4:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001fd8:	e6df      	b.n	8001d9a <_printf_float+0x1da>
 8001fda:	f04f 0800 	mov.w	r8, #0
 8001fde:	f104 0b1a 	add.w	fp, r4, #26
 8001fe2:	e7f4      	b.n	8001fce <_printf_float+0x40e>
 8001fe4:	2301      	movs	r3, #1
 8001fe6:	4642      	mov	r2, r8
 8001fe8:	e7e1      	b.n	8001fae <_printf_float+0x3ee>
 8001fea:	2301      	movs	r3, #1
 8001fec:	464a      	mov	r2, r9
 8001fee:	4631      	mov	r1, r6
 8001ff0:	4628      	mov	r0, r5
 8001ff2:	47b8      	blx	r7
 8001ff4:	3001      	adds	r0, #1
 8001ff6:	f43f ae3e 	beq.w	8001c76 <_printf_float+0xb6>
 8001ffa:	f108 0801 	add.w	r8, r8, #1
 8001ffe:	68e3      	ldr	r3, [r4, #12]
 8002000:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002002:	1a5b      	subs	r3, r3, r1
 8002004:	4543      	cmp	r3, r8
 8002006:	dcf0      	bgt.n	8001fea <_printf_float+0x42a>
 8002008:	e6fc      	b.n	8001e04 <_printf_float+0x244>
 800200a:	f04f 0800 	mov.w	r8, #0
 800200e:	f104 0919 	add.w	r9, r4, #25
 8002012:	e7f4      	b.n	8001ffe <_printf_float+0x43e>

08002014 <_printf_common>:
 8002014:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002018:	4616      	mov	r6, r2
 800201a:	4698      	mov	r8, r3
 800201c:	688a      	ldr	r2, [r1, #8]
 800201e:	4607      	mov	r7, r0
 8002020:	690b      	ldr	r3, [r1, #16]
 8002022:	460c      	mov	r4, r1
 8002024:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002028:	4293      	cmp	r3, r2
 800202a:	bfb8      	it	lt
 800202c:	4613      	movlt	r3, r2
 800202e:	6033      	str	r3, [r6, #0]
 8002030:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002034:	b10a      	cbz	r2, 800203a <_printf_common+0x26>
 8002036:	3301      	adds	r3, #1
 8002038:	6033      	str	r3, [r6, #0]
 800203a:	6823      	ldr	r3, [r4, #0]
 800203c:	0699      	lsls	r1, r3, #26
 800203e:	bf42      	ittt	mi
 8002040:	6833      	ldrmi	r3, [r6, #0]
 8002042:	3302      	addmi	r3, #2
 8002044:	6033      	strmi	r3, [r6, #0]
 8002046:	6825      	ldr	r5, [r4, #0]
 8002048:	f015 0506 	ands.w	r5, r5, #6
 800204c:	d106      	bne.n	800205c <_printf_common+0x48>
 800204e:	f104 0a19 	add.w	sl, r4, #25
 8002052:	68e3      	ldr	r3, [r4, #12]
 8002054:	6832      	ldr	r2, [r6, #0]
 8002056:	1a9b      	subs	r3, r3, r2
 8002058:	42ab      	cmp	r3, r5
 800205a:	dc2b      	bgt.n	80020b4 <_printf_common+0xa0>
 800205c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002060:	6822      	ldr	r2, [r4, #0]
 8002062:	3b00      	subs	r3, #0
 8002064:	bf18      	it	ne
 8002066:	2301      	movne	r3, #1
 8002068:	0692      	lsls	r2, r2, #26
 800206a:	d430      	bmi.n	80020ce <_printf_common+0xba>
 800206c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002070:	4641      	mov	r1, r8
 8002072:	4638      	mov	r0, r7
 8002074:	47c8      	blx	r9
 8002076:	3001      	adds	r0, #1
 8002078:	d023      	beq.n	80020c2 <_printf_common+0xae>
 800207a:	6823      	ldr	r3, [r4, #0]
 800207c:	341a      	adds	r4, #26
 800207e:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8002082:	f003 0306 	and.w	r3, r3, #6
 8002086:	2b04      	cmp	r3, #4
 8002088:	bf0a      	itet	eq
 800208a:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 800208e:	2500      	movne	r5, #0
 8002090:	6833      	ldreq	r3, [r6, #0]
 8002092:	f04f 0600 	mov.w	r6, #0
 8002096:	bf08      	it	eq
 8002098:	1aed      	subeq	r5, r5, r3
 800209a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800209e:	bf08      	it	eq
 80020a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80020a4:	4293      	cmp	r3, r2
 80020a6:	bfc4      	itt	gt
 80020a8:	1a9b      	subgt	r3, r3, r2
 80020aa:	18ed      	addgt	r5, r5, r3
 80020ac:	42b5      	cmp	r5, r6
 80020ae:	d11a      	bne.n	80020e6 <_printf_common+0xd2>
 80020b0:	2000      	movs	r0, #0
 80020b2:	e008      	b.n	80020c6 <_printf_common+0xb2>
 80020b4:	2301      	movs	r3, #1
 80020b6:	4652      	mov	r2, sl
 80020b8:	4641      	mov	r1, r8
 80020ba:	4638      	mov	r0, r7
 80020bc:	47c8      	blx	r9
 80020be:	3001      	adds	r0, #1
 80020c0:	d103      	bne.n	80020ca <_printf_common+0xb6>
 80020c2:	f04f 30ff 	mov.w	r0, #4294967295
 80020c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80020ca:	3501      	adds	r5, #1
 80020cc:	e7c1      	b.n	8002052 <_printf_common+0x3e>
 80020ce:	18e1      	adds	r1, r4, r3
 80020d0:	1c5a      	adds	r2, r3, #1
 80020d2:	2030      	movs	r0, #48	@ 0x30
 80020d4:	3302      	adds	r3, #2
 80020d6:	4422      	add	r2, r4
 80020d8:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80020dc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80020e0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80020e4:	e7c2      	b.n	800206c <_printf_common+0x58>
 80020e6:	2301      	movs	r3, #1
 80020e8:	4622      	mov	r2, r4
 80020ea:	4641      	mov	r1, r8
 80020ec:	4638      	mov	r0, r7
 80020ee:	47c8      	blx	r9
 80020f0:	3001      	adds	r0, #1
 80020f2:	d0e6      	beq.n	80020c2 <_printf_common+0xae>
 80020f4:	3601      	adds	r6, #1
 80020f6:	e7d9      	b.n	80020ac <_printf_common+0x98>

080020f8 <_printf_i>:
 80020f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80020fc:	7e0f      	ldrb	r7, [r1, #24]
 80020fe:	4691      	mov	r9, r2
 8002100:	4680      	mov	r8, r0
 8002102:	460c      	mov	r4, r1
 8002104:	2f78      	cmp	r7, #120	@ 0x78
 8002106:	469a      	mov	sl, r3
 8002108:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800210a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800210e:	d807      	bhi.n	8002120 <_printf_i+0x28>
 8002110:	2f62      	cmp	r7, #98	@ 0x62
 8002112:	d80a      	bhi.n	800212a <_printf_i+0x32>
 8002114:	2f00      	cmp	r7, #0
 8002116:	f000 80d1 	beq.w	80022bc <_printf_i+0x1c4>
 800211a:	2f58      	cmp	r7, #88	@ 0x58
 800211c:	f000 80b8 	beq.w	8002290 <_printf_i+0x198>
 8002120:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002124:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002128:	e03a      	b.n	80021a0 <_printf_i+0xa8>
 800212a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800212e:	2b15      	cmp	r3, #21
 8002130:	d8f6      	bhi.n	8002120 <_printf_i+0x28>
 8002132:	a101      	add	r1, pc, #4	@ (adr r1, 8002138 <_printf_i+0x40>)
 8002134:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002138:	08002191 	.word	0x08002191
 800213c:	080021a5 	.word	0x080021a5
 8002140:	08002121 	.word	0x08002121
 8002144:	08002121 	.word	0x08002121
 8002148:	08002121 	.word	0x08002121
 800214c:	08002121 	.word	0x08002121
 8002150:	080021a5 	.word	0x080021a5
 8002154:	08002121 	.word	0x08002121
 8002158:	08002121 	.word	0x08002121
 800215c:	08002121 	.word	0x08002121
 8002160:	08002121 	.word	0x08002121
 8002164:	080022a3 	.word	0x080022a3
 8002168:	080021cf 	.word	0x080021cf
 800216c:	0800225d 	.word	0x0800225d
 8002170:	08002121 	.word	0x08002121
 8002174:	08002121 	.word	0x08002121
 8002178:	080022c5 	.word	0x080022c5
 800217c:	08002121 	.word	0x08002121
 8002180:	080021cf 	.word	0x080021cf
 8002184:	08002121 	.word	0x08002121
 8002188:	08002121 	.word	0x08002121
 800218c:	08002265 	.word	0x08002265
 8002190:	6833      	ldr	r3, [r6, #0]
 8002192:	1d1a      	adds	r2, r3, #4
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	6032      	str	r2, [r6, #0]
 8002198:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800219c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80021a0:	2301      	movs	r3, #1
 80021a2:	e09c      	b.n	80022de <_printf_i+0x1e6>
 80021a4:	6833      	ldr	r3, [r6, #0]
 80021a6:	6820      	ldr	r0, [r4, #0]
 80021a8:	1d19      	adds	r1, r3, #4
 80021aa:	6031      	str	r1, [r6, #0]
 80021ac:	0606      	lsls	r6, r0, #24
 80021ae:	d501      	bpl.n	80021b4 <_printf_i+0xbc>
 80021b0:	681d      	ldr	r5, [r3, #0]
 80021b2:	e003      	b.n	80021bc <_printf_i+0xc4>
 80021b4:	0645      	lsls	r5, r0, #25
 80021b6:	d5fb      	bpl.n	80021b0 <_printf_i+0xb8>
 80021b8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80021bc:	2d00      	cmp	r5, #0
 80021be:	da03      	bge.n	80021c8 <_printf_i+0xd0>
 80021c0:	232d      	movs	r3, #45	@ 0x2d
 80021c2:	426d      	negs	r5, r5
 80021c4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80021c8:	4858      	ldr	r0, [pc, #352]	@ (800232c <_printf_i+0x234>)
 80021ca:	230a      	movs	r3, #10
 80021cc:	e011      	b.n	80021f2 <_printf_i+0xfa>
 80021ce:	6821      	ldr	r1, [r4, #0]
 80021d0:	6833      	ldr	r3, [r6, #0]
 80021d2:	0608      	lsls	r0, r1, #24
 80021d4:	f853 5b04 	ldr.w	r5, [r3], #4
 80021d8:	d402      	bmi.n	80021e0 <_printf_i+0xe8>
 80021da:	0649      	lsls	r1, r1, #25
 80021dc:	bf48      	it	mi
 80021de:	b2ad      	uxthmi	r5, r5
 80021e0:	2f6f      	cmp	r7, #111	@ 0x6f
 80021e2:	6033      	str	r3, [r6, #0]
 80021e4:	4851      	ldr	r0, [pc, #324]	@ (800232c <_printf_i+0x234>)
 80021e6:	bf14      	ite	ne
 80021e8:	230a      	movne	r3, #10
 80021ea:	2308      	moveq	r3, #8
 80021ec:	2100      	movs	r1, #0
 80021ee:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80021f2:	6866      	ldr	r6, [r4, #4]
 80021f4:	2e00      	cmp	r6, #0
 80021f6:	60a6      	str	r6, [r4, #8]
 80021f8:	db05      	blt.n	8002206 <_printf_i+0x10e>
 80021fa:	6821      	ldr	r1, [r4, #0]
 80021fc:	432e      	orrs	r6, r5
 80021fe:	f021 0104 	bic.w	r1, r1, #4
 8002202:	6021      	str	r1, [r4, #0]
 8002204:	d04b      	beq.n	800229e <_printf_i+0x1a6>
 8002206:	4616      	mov	r6, r2
 8002208:	fbb5 f1f3 	udiv	r1, r5, r3
 800220c:	fb03 5711 	mls	r7, r3, r1, r5
 8002210:	5dc7      	ldrb	r7, [r0, r7]
 8002212:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002216:	462f      	mov	r7, r5
 8002218:	460d      	mov	r5, r1
 800221a:	42bb      	cmp	r3, r7
 800221c:	d9f4      	bls.n	8002208 <_printf_i+0x110>
 800221e:	2b08      	cmp	r3, #8
 8002220:	d10b      	bne.n	800223a <_printf_i+0x142>
 8002222:	6823      	ldr	r3, [r4, #0]
 8002224:	07df      	lsls	r7, r3, #31
 8002226:	d508      	bpl.n	800223a <_printf_i+0x142>
 8002228:	6923      	ldr	r3, [r4, #16]
 800222a:	6861      	ldr	r1, [r4, #4]
 800222c:	4299      	cmp	r1, r3
 800222e:	bfde      	ittt	le
 8002230:	2330      	movle	r3, #48	@ 0x30
 8002232:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002236:	f106 36ff 	addle.w	r6, r6, #4294967295
 800223a:	1b92      	subs	r2, r2, r6
 800223c:	6122      	str	r2, [r4, #16]
 800223e:	464b      	mov	r3, r9
 8002240:	aa03      	add	r2, sp, #12
 8002242:	4621      	mov	r1, r4
 8002244:	4640      	mov	r0, r8
 8002246:	f8cd a000 	str.w	sl, [sp]
 800224a:	f7ff fee3 	bl	8002014 <_printf_common>
 800224e:	3001      	adds	r0, #1
 8002250:	d14a      	bne.n	80022e8 <_printf_i+0x1f0>
 8002252:	f04f 30ff 	mov.w	r0, #4294967295
 8002256:	b004      	add	sp, #16
 8002258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800225c:	6823      	ldr	r3, [r4, #0]
 800225e:	f043 0320 	orr.w	r3, r3, #32
 8002262:	6023      	str	r3, [r4, #0]
 8002264:	2778      	movs	r7, #120	@ 0x78
 8002266:	4832      	ldr	r0, [pc, #200]	@ (8002330 <_printf_i+0x238>)
 8002268:	6823      	ldr	r3, [r4, #0]
 800226a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800226e:	061f      	lsls	r7, r3, #24
 8002270:	6831      	ldr	r1, [r6, #0]
 8002272:	f851 5b04 	ldr.w	r5, [r1], #4
 8002276:	d402      	bmi.n	800227e <_printf_i+0x186>
 8002278:	065f      	lsls	r7, r3, #25
 800227a:	bf48      	it	mi
 800227c:	b2ad      	uxthmi	r5, r5
 800227e:	6031      	str	r1, [r6, #0]
 8002280:	07d9      	lsls	r1, r3, #31
 8002282:	bf44      	itt	mi
 8002284:	f043 0320 	orrmi.w	r3, r3, #32
 8002288:	6023      	strmi	r3, [r4, #0]
 800228a:	b11d      	cbz	r5, 8002294 <_printf_i+0x19c>
 800228c:	2310      	movs	r3, #16
 800228e:	e7ad      	b.n	80021ec <_printf_i+0xf4>
 8002290:	4826      	ldr	r0, [pc, #152]	@ (800232c <_printf_i+0x234>)
 8002292:	e7e9      	b.n	8002268 <_printf_i+0x170>
 8002294:	6823      	ldr	r3, [r4, #0]
 8002296:	f023 0320 	bic.w	r3, r3, #32
 800229a:	6023      	str	r3, [r4, #0]
 800229c:	e7f6      	b.n	800228c <_printf_i+0x194>
 800229e:	4616      	mov	r6, r2
 80022a0:	e7bd      	b.n	800221e <_printf_i+0x126>
 80022a2:	6833      	ldr	r3, [r6, #0]
 80022a4:	6825      	ldr	r5, [r4, #0]
 80022a6:	1d18      	adds	r0, r3, #4
 80022a8:	6961      	ldr	r1, [r4, #20]
 80022aa:	6030      	str	r0, [r6, #0]
 80022ac:	062e      	lsls	r6, r5, #24
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	d501      	bpl.n	80022b6 <_printf_i+0x1be>
 80022b2:	6019      	str	r1, [r3, #0]
 80022b4:	e002      	b.n	80022bc <_printf_i+0x1c4>
 80022b6:	0668      	lsls	r0, r5, #25
 80022b8:	d5fb      	bpl.n	80022b2 <_printf_i+0x1ba>
 80022ba:	8019      	strh	r1, [r3, #0]
 80022bc:	2300      	movs	r3, #0
 80022be:	4616      	mov	r6, r2
 80022c0:	6123      	str	r3, [r4, #16]
 80022c2:	e7bc      	b.n	800223e <_printf_i+0x146>
 80022c4:	6833      	ldr	r3, [r6, #0]
 80022c6:	2100      	movs	r1, #0
 80022c8:	1d1a      	adds	r2, r3, #4
 80022ca:	6032      	str	r2, [r6, #0]
 80022cc:	681e      	ldr	r6, [r3, #0]
 80022ce:	6862      	ldr	r2, [r4, #4]
 80022d0:	4630      	mov	r0, r6
 80022d2:	f000 f9e4 	bl	800269e <memchr>
 80022d6:	b108      	cbz	r0, 80022dc <_printf_i+0x1e4>
 80022d8:	1b80      	subs	r0, r0, r6
 80022da:	6060      	str	r0, [r4, #4]
 80022dc:	6863      	ldr	r3, [r4, #4]
 80022de:	6123      	str	r3, [r4, #16]
 80022e0:	2300      	movs	r3, #0
 80022e2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80022e6:	e7aa      	b.n	800223e <_printf_i+0x146>
 80022e8:	6923      	ldr	r3, [r4, #16]
 80022ea:	4632      	mov	r2, r6
 80022ec:	4649      	mov	r1, r9
 80022ee:	4640      	mov	r0, r8
 80022f0:	47d0      	blx	sl
 80022f2:	3001      	adds	r0, #1
 80022f4:	d0ad      	beq.n	8002252 <_printf_i+0x15a>
 80022f6:	6823      	ldr	r3, [r4, #0]
 80022f8:	079b      	lsls	r3, r3, #30
 80022fa:	d413      	bmi.n	8002324 <_printf_i+0x22c>
 80022fc:	68e0      	ldr	r0, [r4, #12]
 80022fe:	9b03      	ldr	r3, [sp, #12]
 8002300:	4298      	cmp	r0, r3
 8002302:	bfb8      	it	lt
 8002304:	4618      	movlt	r0, r3
 8002306:	e7a6      	b.n	8002256 <_printf_i+0x15e>
 8002308:	2301      	movs	r3, #1
 800230a:	4632      	mov	r2, r6
 800230c:	4649      	mov	r1, r9
 800230e:	4640      	mov	r0, r8
 8002310:	47d0      	blx	sl
 8002312:	3001      	adds	r0, #1
 8002314:	d09d      	beq.n	8002252 <_printf_i+0x15a>
 8002316:	3501      	adds	r5, #1
 8002318:	68e3      	ldr	r3, [r4, #12]
 800231a:	9903      	ldr	r1, [sp, #12]
 800231c:	1a5b      	subs	r3, r3, r1
 800231e:	42ab      	cmp	r3, r5
 8002320:	dcf2      	bgt.n	8002308 <_printf_i+0x210>
 8002322:	e7eb      	b.n	80022fc <_printf_i+0x204>
 8002324:	2500      	movs	r5, #0
 8002326:	f104 0619 	add.w	r6, r4, #25
 800232a:	e7f5      	b.n	8002318 <_printf_i+0x220>
 800232c:	080047a8 	.word	0x080047a8
 8002330:	080047b9 	.word	0x080047b9

08002334 <std>:
 8002334:	2300      	movs	r3, #0
 8002336:	b510      	push	{r4, lr}
 8002338:	4604      	mov	r4, r0
 800233a:	6083      	str	r3, [r0, #8]
 800233c:	8181      	strh	r1, [r0, #12]
 800233e:	4619      	mov	r1, r3
 8002340:	6643      	str	r3, [r0, #100]	@ 0x64
 8002342:	81c2      	strh	r2, [r0, #14]
 8002344:	2208      	movs	r2, #8
 8002346:	6183      	str	r3, [r0, #24]
 8002348:	e9c0 3300 	strd	r3, r3, [r0]
 800234c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002350:	305c      	adds	r0, #92	@ 0x5c
 8002352:	f000 f916 	bl	8002582 <memset>
 8002356:	4b0d      	ldr	r3, [pc, #52]	@ (800238c <std+0x58>)
 8002358:	6224      	str	r4, [r4, #32]
 800235a:	6263      	str	r3, [r4, #36]	@ 0x24
 800235c:	4b0c      	ldr	r3, [pc, #48]	@ (8002390 <std+0x5c>)
 800235e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002360:	4b0c      	ldr	r3, [pc, #48]	@ (8002394 <std+0x60>)
 8002362:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002364:	4b0c      	ldr	r3, [pc, #48]	@ (8002398 <std+0x64>)
 8002366:	6323      	str	r3, [r4, #48]	@ 0x30
 8002368:	4b0c      	ldr	r3, [pc, #48]	@ (800239c <std+0x68>)
 800236a:	429c      	cmp	r4, r3
 800236c:	d006      	beq.n	800237c <std+0x48>
 800236e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002372:	4294      	cmp	r4, r2
 8002374:	d002      	beq.n	800237c <std+0x48>
 8002376:	33d0      	adds	r3, #208	@ 0xd0
 8002378:	429c      	cmp	r4, r3
 800237a:	d105      	bne.n	8002388 <std+0x54>
 800237c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002380:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002384:	f000 b988 	b.w	8002698 <__retarget_lock_init_recursive>
 8002388:	bd10      	pop	{r4, pc}
 800238a:	bf00      	nop
 800238c:	080024fd 	.word	0x080024fd
 8002390:	0800251f 	.word	0x0800251f
 8002394:	08002557 	.word	0x08002557
 8002398:	0800257b 	.word	0x0800257b
 800239c:	20000218 	.word	0x20000218

080023a0 <stdio_exit_handler>:
 80023a0:	4a02      	ldr	r2, [pc, #8]	@ (80023ac <stdio_exit_handler+0xc>)
 80023a2:	4903      	ldr	r1, [pc, #12]	@ (80023b0 <stdio_exit_handler+0x10>)
 80023a4:	4803      	ldr	r0, [pc, #12]	@ (80023b4 <stdio_exit_handler+0x14>)
 80023a6:	f000 b869 	b.w	800247c <_fwalk_sglue>
 80023aa:	bf00      	nop
 80023ac:	20000000 	.word	0x20000000
 80023b0:	08004039 	.word	0x08004039
 80023b4:	20000010 	.word	0x20000010

080023b8 <cleanup_stdio>:
 80023b8:	6841      	ldr	r1, [r0, #4]
 80023ba:	4b0c      	ldr	r3, [pc, #48]	@ (80023ec <cleanup_stdio+0x34>)
 80023bc:	4299      	cmp	r1, r3
 80023be:	b510      	push	{r4, lr}
 80023c0:	4604      	mov	r4, r0
 80023c2:	d001      	beq.n	80023c8 <cleanup_stdio+0x10>
 80023c4:	f001 fe38 	bl	8004038 <_fflush_r>
 80023c8:	68a1      	ldr	r1, [r4, #8]
 80023ca:	4b09      	ldr	r3, [pc, #36]	@ (80023f0 <cleanup_stdio+0x38>)
 80023cc:	4299      	cmp	r1, r3
 80023ce:	d002      	beq.n	80023d6 <cleanup_stdio+0x1e>
 80023d0:	4620      	mov	r0, r4
 80023d2:	f001 fe31 	bl	8004038 <_fflush_r>
 80023d6:	68e1      	ldr	r1, [r4, #12]
 80023d8:	4b06      	ldr	r3, [pc, #24]	@ (80023f4 <cleanup_stdio+0x3c>)
 80023da:	4299      	cmp	r1, r3
 80023dc:	d004      	beq.n	80023e8 <cleanup_stdio+0x30>
 80023de:	4620      	mov	r0, r4
 80023e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023e4:	f001 be28 	b.w	8004038 <_fflush_r>
 80023e8:	bd10      	pop	{r4, pc}
 80023ea:	bf00      	nop
 80023ec:	20000218 	.word	0x20000218
 80023f0:	20000280 	.word	0x20000280
 80023f4:	200002e8 	.word	0x200002e8

080023f8 <global_stdio_init.part.0>:
 80023f8:	b510      	push	{r4, lr}
 80023fa:	4b0b      	ldr	r3, [pc, #44]	@ (8002428 <global_stdio_init.part.0+0x30>)
 80023fc:	2104      	movs	r1, #4
 80023fe:	4c0b      	ldr	r4, [pc, #44]	@ (800242c <global_stdio_init.part.0+0x34>)
 8002400:	4a0b      	ldr	r2, [pc, #44]	@ (8002430 <global_stdio_init.part.0+0x38>)
 8002402:	4620      	mov	r0, r4
 8002404:	601a      	str	r2, [r3, #0]
 8002406:	2200      	movs	r2, #0
 8002408:	f7ff ff94 	bl	8002334 <std>
 800240c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002410:	2201      	movs	r2, #1
 8002412:	2109      	movs	r1, #9
 8002414:	f7ff ff8e 	bl	8002334 <std>
 8002418:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800241c:	2202      	movs	r2, #2
 800241e:	2112      	movs	r1, #18
 8002420:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002424:	f7ff bf86 	b.w	8002334 <std>
 8002428:	20000350 	.word	0x20000350
 800242c:	20000218 	.word	0x20000218
 8002430:	080023a1 	.word	0x080023a1

08002434 <__sfp_lock_acquire>:
 8002434:	4801      	ldr	r0, [pc, #4]	@ (800243c <__sfp_lock_acquire+0x8>)
 8002436:	f000 b930 	b.w	800269a <__retarget_lock_acquire_recursive>
 800243a:	bf00      	nop
 800243c:	20000359 	.word	0x20000359

08002440 <__sfp_lock_release>:
 8002440:	4801      	ldr	r0, [pc, #4]	@ (8002448 <__sfp_lock_release+0x8>)
 8002442:	f000 b92b 	b.w	800269c <__retarget_lock_release_recursive>
 8002446:	bf00      	nop
 8002448:	20000359 	.word	0x20000359

0800244c <__sinit>:
 800244c:	b510      	push	{r4, lr}
 800244e:	4604      	mov	r4, r0
 8002450:	f7ff fff0 	bl	8002434 <__sfp_lock_acquire>
 8002454:	6a23      	ldr	r3, [r4, #32]
 8002456:	b11b      	cbz	r3, 8002460 <__sinit+0x14>
 8002458:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800245c:	f7ff bff0 	b.w	8002440 <__sfp_lock_release>
 8002460:	4b04      	ldr	r3, [pc, #16]	@ (8002474 <__sinit+0x28>)
 8002462:	6223      	str	r3, [r4, #32]
 8002464:	4b04      	ldr	r3, [pc, #16]	@ (8002478 <__sinit+0x2c>)
 8002466:	681b      	ldr	r3, [r3, #0]
 8002468:	2b00      	cmp	r3, #0
 800246a:	d1f5      	bne.n	8002458 <__sinit+0xc>
 800246c:	f7ff ffc4 	bl	80023f8 <global_stdio_init.part.0>
 8002470:	e7f2      	b.n	8002458 <__sinit+0xc>
 8002472:	bf00      	nop
 8002474:	080023b9 	.word	0x080023b9
 8002478:	20000350 	.word	0x20000350

0800247c <_fwalk_sglue>:
 800247c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002480:	4607      	mov	r7, r0
 8002482:	4688      	mov	r8, r1
 8002484:	4614      	mov	r4, r2
 8002486:	2600      	movs	r6, #0
 8002488:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800248c:	f1b9 0901 	subs.w	r9, r9, #1
 8002490:	d505      	bpl.n	800249e <_fwalk_sglue+0x22>
 8002492:	6824      	ldr	r4, [r4, #0]
 8002494:	2c00      	cmp	r4, #0
 8002496:	d1f7      	bne.n	8002488 <_fwalk_sglue+0xc>
 8002498:	4630      	mov	r0, r6
 800249a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800249e:	89ab      	ldrh	r3, [r5, #12]
 80024a0:	2b01      	cmp	r3, #1
 80024a2:	d907      	bls.n	80024b4 <_fwalk_sglue+0x38>
 80024a4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80024a8:	3301      	adds	r3, #1
 80024aa:	d003      	beq.n	80024b4 <_fwalk_sglue+0x38>
 80024ac:	4629      	mov	r1, r5
 80024ae:	4638      	mov	r0, r7
 80024b0:	47c0      	blx	r8
 80024b2:	4306      	orrs	r6, r0
 80024b4:	3568      	adds	r5, #104	@ 0x68
 80024b6:	e7e9      	b.n	800248c <_fwalk_sglue+0x10>

080024b8 <siprintf>:
 80024b8:	b40e      	push	{r1, r2, r3}
 80024ba:	b510      	push	{r4, lr}
 80024bc:	b09d      	sub	sp, #116	@ 0x74
 80024be:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80024c2:	2400      	movs	r4, #0
 80024c4:	ab1f      	add	r3, sp, #124	@ 0x7c
 80024c6:	9002      	str	r0, [sp, #8]
 80024c8:	9006      	str	r0, [sp, #24]
 80024ca:	9107      	str	r1, [sp, #28]
 80024cc:	9104      	str	r1, [sp, #16]
 80024ce:	4809      	ldr	r0, [pc, #36]	@ (80024f4 <siprintf+0x3c>)
 80024d0:	4909      	ldr	r1, [pc, #36]	@ (80024f8 <siprintf+0x40>)
 80024d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80024d6:	9105      	str	r1, [sp, #20]
 80024d8:	a902      	add	r1, sp, #8
 80024da:	6800      	ldr	r0, [r0, #0]
 80024dc:	9301      	str	r3, [sp, #4]
 80024de:	941b      	str	r4, [sp, #108]	@ 0x6c
 80024e0:	f001 fc2a 	bl	8003d38 <_svfiprintf_r>
 80024e4:	9b02      	ldr	r3, [sp, #8]
 80024e6:	701c      	strb	r4, [r3, #0]
 80024e8:	b01d      	add	sp, #116	@ 0x74
 80024ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80024ee:	b003      	add	sp, #12
 80024f0:	4770      	bx	lr
 80024f2:	bf00      	nop
 80024f4:	2000000c 	.word	0x2000000c
 80024f8:	ffff0208 	.word	0xffff0208

080024fc <__sread>:
 80024fc:	b510      	push	{r4, lr}
 80024fe:	460c      	mov	r4, r1
 8002500:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002504:	f000 f87a 	bl	80025fc <_read_r>
 8002508:	2800      	cmp	r0, #0
 800250a:	bfab      	itete	ge
 800250c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800250e:	89a3      	ldrhlt	r3, [r4, #12]
 8002510:	181b      	addge	r3, r3, r0
 8002512:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8002516:	bfac      	ite	ge
 8002518:	6563      	strge	r3, [r4, #84]	@ 0x54
 800251a:	81a3      	strhlt	r3, [r4, #12]
 800251c:	bd10      	pop	{r4, pc}

0800251e <__swrite>:
 800251e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002522:	461f      	mov	r7, r3
 8002524:	898b      	ldrh	r3, [r1, #12]
 8002526:	4605      	mov	r5, r0
 8002528:	460c      	mov	r4, r1
 800252a:	05db      	lsls	r3, r3, #23
 800252c:	4616      	mov	r6, r2
 800252e:	d505      	bpl.n	800253c <__swrite+0x1e>
 8002530:	2302      	movs	r3, #2
 8002532:	2200      	movs	r2, #0
 8002534:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002538:	f000 f84e 	bl	80025d8 <_lseek_r>
 800253c:	89a3      	ldrh	r3, [r4, #12]
 800253e:	4632      	mov	r2, r6
 8002540:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002544:	4628      	mov	r0, r5
 8002546:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800254a:	81a3      	strh	r3, [r4, #12]
 800254c:	463b      	mov	r3, r7
 800254e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002552:	f000 b865 	b.w	8002620 <_write_r>

08002556 <__sseek>:
 8002556:	b510      	push	{r4, lr}
 8002558:	460c      	mov	r4, r1
 800255a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800255e:	f000 f83b 	bl	80025d8 <_lseek_r>
 8002562:	1c43      	adds	r3, r0, #1
 8002564:	89a3      	ldrh	r3, [r4, #12]
 8002566:	bf15      	itete	ne
 8002568:	6560      	strne	r0, [r4, #84]	@ 0x54
 800256a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800256e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002572:	81a3      	strheq	r3, [r4, #12]
 8002574:	bf18      	it	ne
 8002576:	81a3      	strhne	r3, [r4, #12]
 8002578:	bd10      	pop	{r4, pc}

0800257a <__sclose>:
 800257a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800257e:	f000 b81b 	b.w	80025b8 <_close_r>

08002582 <memset>:
 8002582:	4402      	add	r2, r0
 8002584:	4603      	mov	r3, r0
 8002586:	4293      	cmp	r3, r2
 8002588:	d100      	bne.n	800258c <memset+0xa>
 800258a:	4770      	bx	lr
 800258c:	f803 1b01 	strb.w	r1, [r3], #1
 8002590:	e7f9      	b.n	8002586 <memset+0x4>

08002592 <strcat>:
 8002592:	4602      	mov	r2, r0
 8002594:	b510      	push	{r4, lr}
 8002596:	7814      	ldrb	r4, [r2, #0]
 8002598:	4613      	mov	r3, r2
 800259a:	3201      	adds	r2, #1
 800259c:	2c00      	cmp	r4, #0
 800259e:	d1fa      	bne.n	8002596 <strcat+0x4>
 80025a0:	3b01      	subs	r3, #1
 80025a2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80025a6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80025aa:	2a00      	cmp	r2, #0
 80025ac:	d1f9      	bne.n	80025a2 <strcat+0x10>
 80025ae:	bd10      	pop	{r4, pc}

080025b0 <_localeconv_r>:
 80025b0:	4800      	ldr	r0, [pc, #0]	@ (80025b4 <_localeconv_r+0x4>)
 80025b2:	4770      	bx	lr
 80025b4:	2000014c 	.word	0x2000014c

080025b8 <_close_r>:
 80025b8:	b538      	push	{r3, r4, r5, lr}
 80025ba:	2300      	movs	r3, #0
 80025bc:	4d05      	ldr	r5, [pc, #20]	@ (80025d4 <_close_r+0x1c>)
 80025be:	4604      	mov	r4, r0
 80025c0:	4608      	mov	r0, r1
 80025c2:	602b      	str	r3, [r5, #0]
 80025c4:	f7ff f9b7 	bl	8001936 <_close>
 80025c8:	1c43      	adds	r3, r0, #1
 80025ca:	d102      	bne.n	80025d2 <_close_r+0x1a>
 80025cc:	682b      	ldr	r3, [r5, #0]
 80025ce:	b103      	cbz	r3, 80025d2 <_close_r+0x1a>
 80025d0:	6023      	str	r3, [r4, #0]
 80025d2:	bd38      	pop	{r3, r4, r5, pc}
 80025d4:	20000354 	.word	0x20000354

080025d8 <_lseek_r>:
 80025d8:	b538      	push	{r3, r4, r5, lr}
 80025da:	4604      	mov	r4, r0
 80025dc:	4d06      	ldr	r5, [pc, #24]	@ (80025f8 <_lseek_r+0x20>)
 80025de:	4608      	mov	r0, r1
 80025e0:	4611      	mov	r1, r2
 80025e2:	2200      	movs	r2, #0
 80025e4:	602a      	str	r2, [r5, #0]
 80025e6:	461a      	mov	r2, r3
 80025e8:	f7ff f9cc 	bl	8001984 <_lseek>
 80025ec:	1c43      	adds	r3, r0, #1
 80025ee:	d102      	bne.n	80025f6 <_lseek_r+0x1e>
 80025f0:	682b      	ldr	r3, [r5, #0]
 80025f2:	b103      	cbz	r3, 80025f6 <_lseek_r+0x1e>
 80025f4:	6023      	str	r3, [r4, #0]
 80025f6:	bd38      	pop	{r3, r4, r5, pc}
 80025f8:	20000354 	.word	0x20000354

080025fc <_read_r>:
 80025fc:	b538      	push	{r3, r4, r5, lr}
 80025fe:	4604      	mov	r4, r0
 8002600:	4d06      	ldr	r5, [pc, #24]	@ (800261c <_read_r+0x20>)
 8002602:	4608      	mov	r0, r1
 8002604:	4611      	mov	r1, r2
 8002606:	2200      	movs	r2, #0
 8002608:	602a      	str	r2, [r5, #0]
 800260a:	461a      	mov	r2, r3
 800260c:	f7ff f95a 	bl	80018c4 <_read>
 8002610:	1c43      	adds	r3, r0, #1
 8002612:	d102      	bne.n	800261a <_read_r+0x1e>
 8002614:	682b      	ldr	r3, [r5, #0]
 8002616:	b103      	cbz	r3, 800261a <_read_r+0x1e>
 8002618:	6023      	str	r3, [r4, #0]
 800261a:	bd38      	pop	{r3, r4, r5, pc}
 800261c:	20000354 	.word	0x20000354

08002620 <_write_r>:
 8002620:	b538      	push	{r3, r4, r5, lr}
 8002622:	4604      	mov	r4, r0
 8002624:	4d06      	ldr	r5, [pc, #24]	@ (8002640 <_write_r+0x20>)
 8002626:	4608      	mov	r0, r1
 8002628:	4611      	mov	r1, r2
 800262a:	2200      	movs	r2, #0
 800262c:	602a      	str	r2, [r5, #0]
 800262e:	461a      	mov	r2, r3
 8002630:	f7ff f965 	bl	80018fe <_write>
 8002634:	1c43      	adds	r3, r0, #1
 8002636:	d102      	bne.n	800263e <_write_r+0x1e>
 8002638:	682b      	ldr	r3, [r5, #0]
 800263a:	b103      	cbz	r3, 800263e <_write_r+0x1e>
 800263c:	6023      	str	r3, [r4, #0]
 800263e:	bd38      	pop	{r3, r4, r5, pc}
 8002640:	20000354 	.word	0x20000354

08002644 <__errno>:
 8002644:	4b01      	ldr	r3, [pc, #4]	@ (800264c <__errno+0x8>)
 8002646:	6818      	ldr	r0, [r3, #0]
 8002648:	4770      	bx	lr
 800264a:	bf00      	nop
 800264c:	2000000c 	.word	0x2000000c

08002650 <__libc_init_array>:
 8002650:	b570      	push	{r4, r5, r6, lr}
 8002652:	4d0d      	ldr	r5, [pc, #52]	@ (8002688 <__libc_init_array+0x38>)
 8002654:	2600      	movs	r6, #0
 8002656:	4c0d      	ldr	r4, [pc, #52]	@ (800268c <__libc_init_array+0x3c>)
 8002658:	1b64      	subs	r4, r4, r5
 800265a:	10a4      	asrs	r4, r4, #2
 800265c:	42a6      	cmp	r6, r4
 800265e:	d109      	bne.n	8002674 <__libc_init_array+0x24>
 8002660:	4d0b      	ldr	r5, [pc, #44]	@ (8002690 <__libc_init_array+0x40>)
 8002662:	2600      	movs	r6, #0
 8002664:	4c0b      	ldr	r4, [pc, #44]	@ (8002694 <__libc_init_array+0x44>)
 8002666:	f002 f885 	bl	8004774 <_init>
 800266a:	1b64      	subs	r4, r4, r5
 800266c:	10a4      	asrs	r4, r4, #2
 800266e:	42a6      	cmp	r6, r4
 8002670:	d105      	bne.n	800267e <__libc_init_array+0x2e>
 8002672:	bd70      	pop	{r4, r5, r6, pc}
 8002674:	f855 3b04 	ldr.w	r3, [r5], #4
 8002678:	3601      	adds	r6, #1
 800267a:	4798      	blx	r3
 800267c:	e7ee      	b.n	800265c <__libc_init_array+0xc>
 800267e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002682:	3601      	adds	r6, #1
 8002684:	4798      	blx	r3
 8002686:	e7f2      	b.n	800266e <__libc_init_array+0x1e>
 8002688:	08004b14 	.word	0x08004b14
 800268c:	08004b14 	.word	0x08004b14
 8002690:	08004b14 	.word	0x08004b14
 8002694:	08004b18 	.word	0x08004b18

08002698 <__retarget_lock_init_recursive>:
 8002698:	4770      	bx	lr

0800269a <__retarget_lock_acquire_recursive>:
 800269a:	4770      	bx	lr

0800269c <__retarget_lock_release_recursive>:
 800269c:	4770      	bx	lr

0800269e <memchr>:
 800269e:	b2c9      	uxtb	r1, r1
 80026a0:	4603      	mov	r3, r0
 80026a2:	4402      	add	r2, r0
 80026a4:	b510      	push	{r4, lr}
 80026a6:	4293      	cmp	r3, r2
 80026a8:	4618      	mov	r0, r3
 80026aa:	d101      	bne.n	80026b0 <memchr+0x12>
 80026ac:	2000      	movs	r0, #0
 80026ae:	e003      	b.n	80026b8 <memchr+0x1a>
 80026b0:	7804      	ldrb	r4, [r0, #0]
 80026b2:	3301      	adds	r3, #1
 80026b4:	428c      	cmp	r4, r1
 80026b6:	d1f6      	bne.n	80026a6 <memchr+0x8>
 80026b8:	bd10      	pop	{r4, pc}

080026ba <quorem>:
 80026ba:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026be:	6903      	ldr	r3, [r0, #16]
 80026c0:	4607      	mov	r7, r0
 80026c2:	690c      	ldr	r4, [r1, #16]
 80026c4:	42a3      	cmp	r3, r4
 80026c6:	f2c0 8083 	blt.w	80027d0 <quorem+0x116>
 80026ca:	3c01      	subs	r4, #1
 80026cc:	f100 0514 	add.w	r5, r0, #20
 80026d0:	f101 0814 	add.w	r8, r1, #20
 80026d4:	00a3      	lsls	r3, r4, #2
 80026d6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80026da:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80026de:	9300      	str	r3, [sp, #0]
 80026e0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80026e4:	9301      	str	r3, [sp, #4]
 80026e6:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80026ea:	3301      	adds	r3, #1
 80026ec:	429a      	cmp	r2, r3
 80026ee:	fbb2 f6f3 	udiv	r6, r2, r3
 80026f2:	d331      	bcc.n	8002758 <quorem+0x9e>
 80026f4:	f04f 0a00 	mov.w	sl, #0
 80026f8:	46c4      	mov	ip, r8
 80026fa:	46ae      	mov	lr, r5
 80026fc:	46d3      	mov	fp, sl
 80026fe:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002702:	b298      	uxth	r0, r3
 8002704:	45e1      	cmp	r9, ip
 8002706:	ea4f 4313 	mov.w	r3, r3, lsr #16
 800270a:	fb06 a000 	mla	r0, r6, r0, sl
 800270e:	ea4f 4210 	mov.w	r2, r0, lsr #16
 8002712:	b280      	uxth	r0, r0
 8002714:	fb06 2303 	mla	r3, r6, r3, r2
 8002718:	f8de 2000 	ldr.w	r2, [lr]
 800271c:	b292      	uxth	r2, r2
 800271e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002722:	eba2 0200 	sub.w	r2, r2, r0
 8002726:	b29b      	uxth	r3, r3
 8002728:	f8de 0000 	ldr.w	r0, [lr]
 800272c:	445a      	add	r2, fp
 800272e:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002732:	b292      	uxth	r2, r2
 8002734:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002738:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800273c:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002740:	f84e 2b04 	str.w	r2, [lr], #4
 8002744:	d2db      	bcs.n	80026fe <quorem+0x44>
 8002746:	9b00      	ldr	r3, [sp, #0]
 8002748:	58eb      	ldr	r3, [r5, r3]
 800274a:	b92b      	cbnz	r3, 8002758 <quorem+0x9e>
 800274c:	9b01      	ldr	r3, [sp, #4]
 800274e:	3b04      	subs	r3, #4
 8002750:	429d      	cmp	r5, r3
 8002752:	461a      	mov	r2, r3
 8002754:	d330      	bcc.n	80027b8 <quorem+0xfe>
 8002756:	613c      	str	r4, [r7, #16]
 8002758:	4638      	mov	r0, r7
 800275a:	f001 f985 	bl	8003a68 <__mcmp>
 800275e:	2800      	cmp	r0, #0
 8002760:	db26      	blt.n	80027b0 <quorem+0xf6>
 8002762:	4629      	mov	r1, r5
 8002764:	2000      	movs	r0, #0
 8002766:	f858 2b04 	ldr.w	r2, [r8], #4
 800276a:	f8d1 c000 	ldr.w	ip, [r1]
 800276e:	fa1f fe82 	uxth.w	lr, r2
 8002772:	45c1      	cmp	r9, r8
 8002774:	fa1f f38c 	uxth.w	r3, ip
 8002778:	ea4f 4212 	mov.w	r2, r2, lsr #16
 800277c:	eba3 030e 	sub.w	r3, r3, lr
 8002780:	4403      	add	r3, r0
 8002782:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002786:	b29b      	uxth	r3, r3
 8002788:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800278c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002790:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002794:	f841 3b04 	str.w	r3, [r1], #4
 8002798:	d2e5      	bcs.n	8002766 <quorem+0xac>
 800279a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800279e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80027a2:	b922      	cbnz	r2, 80027ae <quorem+0xf4>
 80027a4:	3b04      	subs	r3, #4
 80027a6:	429d      	cmp	r5, r3
 80027a8:	461a      	mov	r2, r3
 80027aa:	d30b      	bcc.n	80027c4 <quorem+0x10a>
 80027ac:	613c      	str	r4, [r7, #16]
 80027ae:	3601      	adds	r6, #1
 80027b0:	4630      	mov	r0, r6
 80027b2:	b003      	add	sp, #12
 80027b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027b8:	6812      	ldr	r2, [r2, #0]
 80027ba:	3b04      	subs	r3, #4
 80027bc:	2a00      	cmp	r2, #0
 80027be:	d1ca      	bne.n	8002756 <quorem+0x9c>
 80027c0:	3c01      	subs	r4, #1
 80027c2:	e7c5      	b.n	8002750 <quorem+0x96>
 80027c4:	6812      	ldr	r2, [r2, #0]
 80027c6:	3b04      	subs	r3, #4
 80027c8:	2a00      	cmp	r2, #0
 80027ca:	d1ef      	bne.n	80027ac <quorem+0xf2>
 80027cc:	3c01      	subs	r4, #1
 80027ce:	e7ea      	b.n	80027a6 <quorem+0xec>
 80027d0:	2000      	movs	r0, #0
 80027d2:	e7ee      	b.n	80027b2 <quorem+0xf8>
 80027d4:	0000      	movs	r0, r0
	...

080027d8 <_dtoa_r>:
 80027d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027dc:	69c7      	ldr	r7, [r0, #28]
 80027de:	b097      	sub	sp, #92	@ 0x5c
 80027e0:	4681      	mov	r9, r0
 80027e2:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 80027e4:	9107      	str	r1, [sp, #28]
 80027e6:	920c      	str	r2, [sp, #48]	@ 0x30
 80027e8:	9311      	str	r3, [sp, #68]	@ 0x44
 80027ea:	ec55 4b10 	vmov	r4, r5, d0
 80027ee:	ed8d 0b04 	vstr	d0, [sp, #16]
 80027f2:	b97f      	cbnz	r7, 8002814 <_dtoa_r+0x3c>
 80027f4:	2010      	movs	r0, #16
 80027f6:	f000 fe0b 	bl	8003410 <malloc>
 80027fa:	4602      	mov	r2, r0
 80027fc:	f8c9 001c 	str.w	r0, [r9, #28]
 8002800:	b920      	cbnz	r0, 800280c <_dtoa_r+0x34>
 8002802:	4ba9      	ldr	r3, [pc, #676]	@ (8002aa8 <_dtoa_r+0x2d0>)
 8002804:	21ef      	movs	r1, #239	@ 0xef
 8002806:	48a9      	ldr	r0, [pc, #676]	@ (8002aac <_dtoa_r+0x2d4>)
 8002808:	f001 fc76 	bl	80040f8 <__assert_func>
 800280c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002810:	6007      	str	r7, [r0, #0]
 8002812:	60c7      	str	r7, [r0, #12]
 8002814:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002818:	6819      	ldr	r1, [r3, #0]
 800281a:	b159      	cbz	r1, 8002834 <_dtoa_r+0x5c>
 800281c:	685a      	ldr	r2, [r3, #4]
 800281e:	2301      	movs	r3, #1
 8002820:	4648      	mov	r0, r9
 8002822:	4093      	lsls	r3, r2
 8002824:	604a      	str	r2, [r1, #4]
 8002826:	608b      	str	r3, [r1, #8]
 8002828:	f000 fee8 	bl	80035fc <_Bfree>
 800282c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002830:	2200      	movs	r2, #0
 8002832:	601a      	str	r2, [r3, #0]
 8002834:	1e2b      	subs	r3, r5, #0
 8002836:	bfb7      	itett	lt
 8002838:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800283c:	2300      	movge	r3, #0
 800283e:	2201      	movlt	r2, #1
 8002840:	9305      	strlt	r3, [sp, #20]
 8002842:	bfa8      	it	ge
 8002844:	6033      	strge	r3, [r6, #0]
 8002846:	9f05      	ldr	r7, [sp, #20]
 8002848:	4b99      	ldr	r3, [pc, #612]	@ (8002ab0 <_dtoa_r+0x2d8>)
 800284a:	bfb8      	it	lt
 800284c:	6032      	strlt	r2, [r6, #0]
 800284e:	43bb      	bics	r3, r7
 8002850:	d112      	bne.n	8002878 <_dtoa_r+0xa0>
 8002852:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002856:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002858:	6013      	str	r3, [r2, #0]
 800285a:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800285e:	4323      	orrs	r3, r4
 8002860:	f000 855a 	beq.w	8003318 <_dtoa_r+0xb40>
 8002864:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002866:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 8002ac4 <_dtoa_r+0x2ec>
 800286a:	2b00      	cmp	r3, #0
 800286c:	f000 855c 	beq.w	8003328 <_dtoa_r+0xb50>
 8002870:	f10a 0303 	add.w	r3, sl, #3
 8002874:	f000 bd56 	b.w	8003324 <_dtoa_r+0xb4c>
 8002878:	ed9d 7b04 	vldr	d7, [sp, #16]
 800287c:	2200      	movs	r2, #0
 800287e:	2300      	movs	r3, #0
 8002880:	ec51 0b17 	vmov	r0, r1, d7
 8002884:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 8002888:	f7fe f902 	bl	8000a90 <__aeabi_dcmpeq>
 800288c:	4680      	mov	r8, r0
 800288e:	b158      	cbz	r0, 80028a8 <_dtoa_r+0xd0>
 8002890:	2301      	movs	r3, #1
 8002892:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002894:	6013      	str	r3, [r2, #0]
 8002896:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002898:	b113      	cbz	r3, 80028a0 <_dtoa_r+0xc8>
 800289a:	4b86      	ldr	r3, [pc, #536]	@ (8002ab4 <_dtoa_r+0x2dc>)
 800289c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800289e:	6013      	str	r3, [r2, #0]
 80028a0:	f8df a224 	ldr.w	sl, [pc, #548]	@ 8002ac8 <_dtoa_r+0x2f0>
 80028a4:	f000 bd40 	b.w	8003328 <_dtoa_r+0xb50>
 80028a8:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80028ac:	aa14      	add	r2, sp, #80	@ 0x50
 80028ae:	a915      	add	r1, sp, #84	@ 0x54
 80028b0:	4648      	mov	r0, r9
 80028b2:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 80028b6:	f001 f98b 	bl	8003bd0 <__d2b>
 80028ba:	9002      	str	r0, [sp, #8]
 80028bc:	2e00      	cmp	r6, #0
 80028be:	d076      	beq.n	80029ae <_dtoa_r+0x1d6>
 80028c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80028c2:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80028c6:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 80028ca:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80028ce:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80028d2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80028d6:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80028da:	4619      	mov	r1, r3
 80028dc:	2200      	movs	r2, #0
 80028de:	4b76      	ldr	r3, [pc, #472]	@ (8002ab8 <_dtoa_r+0x2e0>)
 80028e0:	f7fd fcb6 	bl	8000250 <__aeabi_dsub>
 80028e4:	a36a      	add	r3, pc, #424	@ (adr r3, 8002a90 <_dtoa_r+0x2b8>)
 80028e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028ea:	f7fd fe69 	bl	80005c0 <__aeabi_dmul>
 80028ee:	a36a      	add	r3, pc, #424	@ (adr r3, 8002a98 <_dtoa_r+0x2c0>)
 80028f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028f4:	f7fd fcae 	bl	8000254 <__adddf3>
 80028f8:	4604      	mov	r4, r0
 80028fa:	460d      	mov	r5, r1
 80028fc:	4630      	mov	r0, r6
 80028fe:	f7fd fdf5 	bl	80004ec <__aeabi_i2d>
 8002902:	a367      	add	r3, pc, #412	@ (adr r3, 8002aa0 <_dtoa_r+0x2c8>)
 8002904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002908:	f7fd fe5a 	bl	80005c0 <__aeabi_dmul>
 800290c:	4602      	mov	r2, r0
 800290e:	460b      	mov	r3, r1
 8002910:	4620      	mov	r0, r4
 8002912:	4629      	mov	r1, r5
 8002914:	f7fd fc9e 	bl	8000254 <__adddf3>
 8002918:	4604      	mov	r4, r0
 800291a:	460d      	mov	r5, r1
 800291c:	f7fe f900 	bl	8000b20 <__aeabi_d2iz>
 8002920:	2200      	movs	r2, #0
 8002922:	4607      	mov	r7, r0
 8002924:	2300      	movs	r3, #0
 8002926:	4620      	mov	r0, r4
 8002928:	4629      	mov	r1, r5
 800292a:	f7fe f8bb 	bl	8000aa4 <__aeabi_dcmplt>
 800292e:	b140      	cbz	r0, 8002942 <_dtoa_r+0x16a>
 8002930:	4638      	mov	r0, r7
 8002932:	f7fd fddb 	bl	80004ec <__aeabi_i2d>
 8002936:	4622      	mov	r2, r4
 8002938:	462b      	mov	r3, r5
 800293a:	f7fe f8a9 	bl	8000a90 <__aeabi_dcmpeq>
 800293e:	b900      	cbnz	r0, 8002942 <_dtoa_r+0x16a>
 8002940:	3f01      	subs	r7, #1
 8002942:	2f16      	cmp	r7, #22
 8002944:	d852      	bhi.n	80029ec <_dtoa_r+0x214>
 8002946:	4b5d      	ldr	r3, [pc, #372]	@ (8002abc <_dtoa_r+0x2e4>)
 8002948:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800294c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002950:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002954:	f7fe f8a6 	bl	8000aa4 <__aeabi_dcmplt>
 8002958:	2800      	cmp	r0, #0
 800295a:	d049      	beq.n	80029f0 <_dtoa_r+0x218>
 800295c:	3f01      	subs	r7, #1
 800295e:	2300      	movs	r3, #0
 8002960:	9310      	str	r3, [sp, #64]	@ 0x40
 8002962:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002964:	1b9b      	subs	r3, r3, r6
 8002966:	1e5a      	subs	r2, r3, #1
 8002968:	bf4c      	ite	mi
 800296a:	f1c3 0301 	rsbmi	r3, r3, #1
 800296e:	2300      	movpl	r3, #0
 8002970:	9206      	str	r2, [sp, #24]
 8002972:	bf45      	ittet	mi
 8002974:	9300      	strmi	r3, [sp, #0]
 8002976:	2300      	movmi	r3, #0
 8002978:	9300      	strpl	r3, [sp, #0]
 800297a:	9306      	strmi	r3, [sp, #24]
 800297c:	2f00      	cmp	r7, #0
 800297e:	db39      	blt.n	80029f4 <_dtoa_r+0x21c>
 8002980:	9b06      	ldr	r3, [sp, #24]
 8002982:	970d      	str	r7, [sp, #52]	@ 0x34
 8002984:	443b      	add	r3, r7
 8002986:	9306      	str	r3, [sp, #24]
 8002988:	2300      	movs	r3, #0
 800298a:	9308      	str	r3, [sp, #32]
 800298c:	9b07      	ldr	r3, [sp, #28]
 800298e:	2b09      	cmp	r3, #9
 8002990:	d863      	bhi.n	8002a5a <_dtoa_r+0x282>
 8002992:	2b05      	cmp	r3, #5
 8002994:	bfc5      	ittet	gt
 8002996:	3b04      	subgt	r3, #4
 8002998:	2400      	movgt	r4, #0
 800299a:	2401      	movle	r4, #1
 800299c:	9307      	strgt	r3, [sp, #28]
 800299e:	9b07      	ldr	r3, [sp, #28]
 80029a0:	3b02      	subs	r3, #2
 80029a2:	2b03      	cmp	r3, #3
 80029a4:	d865      	bhi.n	8002a72 <_dtoa_r+0x29a>
 80029a6:	e8df f003 	tbb	[pc, r3]
 80029aa:	5654      	.short	0x5654
 80029ac:	2d39      	.short	0x2d39
 80029ae:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 80029b2:	441e      	add	r6, r3
 80029b4:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80029b8:	2b20      	cmp	r3, #32
 80029ba:	bfc9      	itett	gt
 80029bc:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80029c0:	f1c3 0320 	rsble	r3, r3, #32
 80029c4:	409f      	lslgt	r7, r3
 80029c6:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80029ca:	bfd8      	it	le
 80029cc:	fa04 f003 	lslle.w	r0, r4, r3
 80029d0:	f106 36ff 	add.w	r6, r6, #4294967295
 80029d4:	bfc4      	itt	gt
 80029d6:	fa24 f303 	lsrgt.w	r3, r4, r3
 80029da:	ea47 0003 	orrgt.w	r0, r7, r3
 80029de:	f7fd fd75 	bl	80004cc <__aeabi_ui2d>
 80029e2:	2201      	movs	r2, #1
 80029e4:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80029e8:	9212      	str	r2, [sp, #72]	@ 0x48
 80029ea:	e776      	b.n	80028da <_dtoa_r+0x102>
 80029ec:	2301      	movs	r3, #1
 80029ee:	e7b7      	b.n	8002960 <_dtoa_r+0x188>
 80029f0:	9010      	str	r0, [sp, #64]	@ 0x40
 80029f2:	e7b6      	b.n	8002962 <_dtoa_r+0x18a>
 80029f4:	9b00      	ldr	r3, [sp, #0]
 80029f6:	1bdb      	subs	r3, r3, r7
 80029f8:	9300      	str	r3, [sp, #0]
 80029fa:	427b      	negs	r3, r7
 80029fc:	9308      	str	r3, [sp, #32]
 80029fe:	2300      	movs	r3, #0
 8002a00:	930d      	str	r3, [sp, #52]	@ 0x34
 8002a02:	e7c3      	b.n	800298c <_dtoa_r+0x1b4>
 8002a04:	2301      	movs	r3, #1
 8002a06:	9309      	str	r3, [sp, #36]	@ 0x24
 8002a08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002a0a:	eb07 0b03 	add.w	fp, r7, r3
 8002a0e:	f10b 0301 	add.w	r3, fp, #1
 8002a12:	2b01      	cmp	r3, #1
 8002a14:	9303      	str	r3, [sp, #12]
 8002a16:	bfb8      	it	lt
 8002a18:	2301      	movlt	r3, #1
 8002a1a:	e006      	b.n	8002a2a <_dtoa_r+0x252>
 8002a1c:	2301      	movs	r3, #1
 8002a1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8002a20:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002a22:	2b00      	cmp	r3, #0
 8002a24:	dd28      	ble.n	8002a78 <_dtoa_r+0x2a0>
 8002a26:	469b      	mov	fp, r3
 8002a28:	9303      	str	r3, [sp, #12]
 8002a2a:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8002a2e:	2100      	movs	r1, #0
 8002a30:	2204      	movs	r2, #4
 8002a32:	f102 0514 	add.w	r5, r2, #20
 8002a36:	429d      	cmp	r5, r3
 8002a38:	d926      	bls.n	8002a88 <_dtoa_r+0x2b0>
 8002a3a:	6041      	str	r1, [r0, #4]
 8002a3c:	4648      	mov	r0, r9
 8002a3e:	f000 fd9d 	bl	800357c <_Balloc>
 8002a42:	4682      	mov	sl, r0
 8002a44:	2800      	cmp	r0, #0
 8002a46:	d141      	bne.n	8002acc <_dtoa_r+0x2f4>
 8002a48:	4b1d      	ldr	r3, [pc, #116]	@ (8002ac0 <_dtoa_r+0x2e8>)
 8002a4a:	4602      	mov	r2, r0
 8002a4c:	f240 11af 	movw	r1, #431	@ 0x1af
 8002a50:	e6d9      	b.n	8002806 <_dtoa_r+0x2e>
 8002a52:	2300      	movs	r3, #0
 8002a54:	e7e3      	b.n	8002a1e <_dtoa_r+0x246>
 8002a56:	2300      	movs	r3, #0
 8002a58:	e7d5      	b.n	8002a06 <_dtoa_r+0x22e>
 8002a5a:	2401      	movs	r4, #1
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	9409      	str	r4, [sp, #36]	@ 0x24
 8002a60:	9307      	str	r3, [sp, #28]
 8002a62:	f04f 3bff 	mov.w	fp, #4294967295
 8002a66:	2200      	movs	r2, #0
 8002a68:	2312      	movs	r3, #18
 8002a6a:	f8cd b00c 	str.w	fp, [sp, #12]
 8002a6e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002a70:	e7db      	b.n	8002a2a <_dtoa_r+0x252>
 8002a72:	2301      	movs	r3, #1
 8002a74:	9309      	str	r3, [sp, #36]	@ 0x24
 8002a76:	e7f4      	b.n	8002a62 <_dtoa_r+0x28a>
 8002a78:	f04f 0b01 	mov.w	fp, #1
 8002a7c:	465b      	mov	r3, fp
 8002a7e:	f8cd b00c 	str.w	fp, [sp, #12]
 8002a82:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8002a86:	e7d0      	b.n	8002a2a <_dtoa_r+0x252>
 8002a88:	3101      	adds	r1, #1
 8002a8a:	0052      	lsls	r2, r2, #1
 8002a8c:	e7d1      	b.n	8002a32 <_dtoa_r+0x25a>
 8002a8e:	bf00      	nop
 8002a90:	636f4361 	.word	0x636f4361
 8002a94:	3fd287a7 	.word	0x3fd287a7
 8002a98:	8b60c8b3 	.word	0x8b60c8b3
 8002a9c:	3fc68a28 	.word	0x3fc68a28
 8002aa0:	509f79fb 	.word	0x509f79fb
 8002aa4:	3fd34413 	.word	0x3fd34413
 8002aa8:	080047d7 	.word	0x080047d7
 8002aac:	080047ee 	.word	0x080047ee
 8002ab0:	7ff00000 	.word	0x7ff00000
 8002ab4:	080047a7 	.word	0x080047a7
 8002ab8:	3ff80000 	.word	0x3ff80000
 8002abc:	08004940 	.word	0x08004940
 8002ac0:	08004846 	.word	0x08004846
 8002ac4:	080047d3 	.word	0x080047d3
 8002ac8:	080047a6 	.word	0x080047a6
 8002acc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002ad0:	6018      	str	r0, [r3, #0]
 8002ad2:	9b03      	ldr	r3, [sp, #12]
 8002ad4:	2b0e      	cmp	r3, #14
 8002ad6:	f200 80a1 	bhi.w	8002c1c <_dtoa_r+0x444>
 8002ada:	2c00      	cmp	r4, #0
 8002adc:	f000 809e 	beq.w	8002c1c <_dtoa_r+0x444>
 8002ae0:	2f00      	cmp	r7, #0
 8002ae2:	dd33      	ble.n	8002b4c <_dtoa_r+0x374>
 8002ae4:	f007 020f 	and.w	r2, r7, #15
 8002ae8:	4b9b      	ldr	r3, [pc, #620]	@ (8002d58 <_dtoa_r+0x580>)
 8002aea:	05f8      	lsls	r0, r7, #23
 8002aec:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002af0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002af4:	ed93 7b00 	vldr	d7, [r3]
 8002af8:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8002afc:	d516      	bpl.n	8002b2c <_dtoa_r+0x354>
 8002afe:	4b97      	ldr	r3, [pc, #604]	@ (8002d5c <_dtoa_r+0x584>)
 8002b00:	f004 040f 	and.w	r4, r4, #15
 8002b04:	2603      	movs	r6, #3
 8002b06:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002b0a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002b0e:	f7fd fe81 	bl	8000814 <__aeabi_ddiv>
 8002b12:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002b16:	4d91      	ldr	r5, [pc, #580]	@ (8002d5c <_dtoa_r+0x584>)
 8002b18:	b954      	cbnz	r4, 8002b30 <_dtoa_r+0x358>
 8002b1a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002b1e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b22:	f7fd fe77 	bl	8000814 <__aeabi_ddiv>
 8002b26:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002b2a:	e028      	b.n	8002b7e <_dtoa_r+0x3a6>
 8002b2c:	2602      	movs	r6, #2
 8002b2e:	e7f2      	b.n	8002b16 <_dtoa_r+0x33e>
 8002b30:	07e1      	lsls	r1, r4, #31
 8002b32:	d508      	bpl.n	8002b46 <_dtoa_r+0x36e>
 8002b34:	3601      	adds	r6, #1
 8002b36:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002b3a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002b3e:	f7fd fd3f 	bl	80005c0 <__aeabi_dmul>
 8002b42:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002b46:	1064      	asrs	r4, r4, #1
 8002b48:	3508      	adds	r5, #8
 8002b4a:	e7e5      	b.n	8002b18 <_dtoa_r+0x340>
 8002b4c:	f000 80af 	beq.w	8002cae <_dtoa_r+0x4d6>
 8002b50:	427c      	negs	r4, r7
 8002b52:	4b81      	ldr	r3, [pc, #516]	@ (8002d58 <_dtoa_r+0x580>)
 8002b54:	4d81      	ldr	r5, [pc, #516]	@ (8002d5c <_dtoa_r+0x584>)
 8002b56:	2602      	movs	r6, #2
 8002b58:	f004 020f 	and.w	r2, r4, #15
 8002b5c:	1124      	asrs	r4, r4, #4
 8002b5e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002b62:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002b66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b6a:	f7fd fd29 	bl	80005c0 <__aeabi_dmul>
 8002b6e:	2300      	movs	r3, #0
 8002b70:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002b74:	2c00      	cmp	r4, #0
 8002b76:	f040 808f 	bne.w	8002c98 <_dtoa_r+0x4c0>
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	d1d3      	bne.n	8002b26 <_dtoa_r+0x34e>
 8002b7e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8002b80:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8002b84:	2b00      	cmp	r3, #0
 8002b86:	f000 8094 	beq.w	8002cb2 <_dtoa_r+0x4da>
 8002b8a:	2200      	movs	r2, #0
 8002b8c:	4b74      	ldr	r3, [pc, #464]	@ (8002d60 <_dtoa_r+0x588>)
 8002b8e:	4620      	mov	r0, r4
 8002b90:	4629      	mov	r1, r5
 8002b92:	f7fd ff87 	bl	8000aa4 <__aeabi_dcmplt>
 8002b96:	2800      	cmp	r0, #0
 8002b98:	f000 808b 	beq.w	8002cb2 <_dtoa_r+0x4da>
 8002b9c:	9b03      	ldr	r3, [sp, #12]
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	f000 8087 	beq.w	8002cb2 <_dtoa_r+0x4da>
 8002ba4:	f1bb 0f00 	cmp.w	fp, #0
 8002ba8:	dd34      	ble.n	8002c14 <_dtoa_r+0x43c>
 8002baa:	4620      	mov	r0, r4
 8002bac:	f107 38ff 	add.w	r8, r7, #4294967295
 8002bb0:	3601      	adds	r6, #1
 8002bb2:	465c      	mov	r4, fp
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	4b6b      	ldr	r3, [pc, #428]	@ (8002d64 <_dtoa_r+0x58c>)
 8002bb8:	4629      	mov	r1, r5
 8002bba:	f7fd fd01 	bl	80005c0 <__aeabi_dmul>
 8002bbe:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002bc2:	4630      	mov	r0, r6
 8002bc4:	f7fd fc92 	bl	80004ec <__aeabi_i2d>
 8002bc8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002bcc:	f7fd fcf8 	bl	80005c0 <__aeabi_dmul>
 8002bd0:	2200      	movs	r2, #0
 8002bd2:	4b65      	ldr	r3, [pc, #404]	@ (8002d68 <_dtoa_r+0x590>)
 8002bd4:	f7fd fb3e 	bl	8000254 <__adddf3>
 8002bd8:	4605      	mov	r5, r0
 8002bda:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002bde:	2c00      	cmp	r4, #0
 8002be0:	d16a      	bne.n	8002cb8 <_dtoa_r+0x4e0>
 8002be2:	2200      	movs	r2, #0
 8002be4:	4b61      	ldr	r3, [pc, #388]	@ (8002d6c <_dtoa_r+0x594>)
 8002be6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002bea:	f7fd fb31 	bl	8000250 <__aeabi_dsub>
 8002bee:	4602      	mov	r2, r0
 8002bf0:	460b      	mov	r3, r1
 8002bf2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002bf6:	462a      	mov	r2, r5
 8002bf8:	4633      	mov	r3, r6
 8002bfa:	f7fd ff71 	bl	8000ae0 <__aeabi_dcmpgt>
 8002bfe:	2800      	cmp	r0, #0
 8002c00:	f040 8298 	bne.w	8003134 <_dtoa_r+0x95c>
 8002c04:	462a      	mov	r2, r5
 8002c06:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002c0a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002c0e:	f7fd ff49 	bl	8000aa4 <__aeabi_dcmplt>
 8002c12:	bb38      	cbnz	r0, 8002c64 <_dtoa_r+0x48c>
 8002c14:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8002c18:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002c1c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002c1e:	2b00      	cmp	r3, #0
 8002c20:	f2c0 8157 	blt.w	8002ed2 <_dtoa_r+0x6fa>
 8002c24:	2f0e      	cmp	r7, #14
 8002c26:	f300 8154 	bgt.w	8002ed2 <_dtoa_r+0x6fa>
 8002c2a:	4b4b      	ldr	r3, [pc, #300]	@ (8002d58 <_dtoa_r+0x580>)
 8002c2c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002c30:	ed93 7b00 	vldr	d7, [r3]
 8002c34:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	ed8d 7b00 	vstr	d7, [sp]
 8002c3c:	f280 80e5 	bge.w	8002e0a <_dtoa_r+0x632>
 8002c40:	9b03      	ldr	r3, [sp, #12]
 8002c42:	2b00      	cmp	r3, #0
 8002c44:	f300 80e1 	bgt.w	8002e0a <_dtoa_r+0x632>
 8002c48:	d10c      	bne.n	8002c64 <_dtoa_r+0x48c>
 8002c4a:	2200      	movs	r2, #0
 8002c4c:	4b47      	ldr	r3, [pc, #284]	@ (8002d6c <_dtoa_r+0x594>)
 8002c4e:	ec51 0b17 	vmov	r0, r1, d7
 8002c52:	f7fd fcb5 	bl	80005c0 <__aeabi_dmul>
 8002c56:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c5a:	f7fd ff37 	bl	8000acc <__aeabi_dcmpge>
 8002c5e:	2800      	cmp	r0, #0
 8002c60:	f000 8266 	beq.w	8003130 <_dtoa_r+0x958>
 8002c64:	2400      	movs	r4, #0
 8002c66:	4625      	mov	r5, r4
 8002c68:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002c6a:	4656      	mov	r6, sl
 8002c6c:	ea6f 0803 	mvn.w	r8, r3
 8002c70:	2700      	movs	r7, #0
 8002c72:	4621      	mov	r1, r4
 8002c74:	4648      	mov	r0, r9
 8002c76:	f000 fcc1 	bl	80035fc <_Bfree>
 8002c7a:	2d00      	cmp	r5, #0
 8002c7c:	f000 80bd 	beq.w	8002dfa <_dtoa_r+0x622>
 8002c80:	b12f      	cbz	r7, 8002c8e <_dtoa_r+0x4b6>
 8002c82:	42af      	cmp	r7, r5
 8002c84:	d003      	beq.n	8002c8e <_dtoa_r+0x4b6>
 8002c86:	4639      	mov	r1, r7
 8002c88:	4648      	mov	r0, r9
 8002c8a:	f000 fcb7 	bl	80035fc <_Bfree>
 8002c8e:	4629      	mov	r1, r5
 8002c90:	4648      	mov	r0, r9
 8002c92:	f000 fcb3 	bl	80035fc <_Bfree>
 8002c96:	e0b0      	b.n	8002dfa <_dtoa_r+0x622>
 8002c98:	07e2      	lsls	r2, r4, #31
 8002c9a:	d505      	bpl.n	8002ca8 <_dtoa_r+0x4d0>
 8002c9c:	3601      	adds	r6, #1
 8002c9e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002ca2:	f7fd fc8d 	bl	80005c0 <__aeabi_dmul>
 8002ca6:	2301      	movs	r3, #1
 8002ca8:	1064      	asrs	r4, r4, #1
 8002caa:	3508      	adds	r5, #8
 8002cac:	e762      	b.n	8002b74 <_dtoa_r+0x39c>
 8002cae:	2602      	movs	r6, #2
 8002cb0:	e765      	b.n	8002b7e <_dtoa_r+0x3a6>
 8002cb2:	46b8      	mov	r8, r7
 8002cb4:	9c03      	ldr	r4, [sp, #12]
 8002cb6:	e784      	b.n	8002bc2 <_dtoa_r+0x3ea>
 8002cb8:	4b27      	ldr	r3, [pc, #156]	@ (8002d58 <_dtoa_r+0x580>)
 8002cba:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002cbc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002cc0:	4454      	add	r4, sl
 8002cc2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002cc6:	2900      	cmp	r1, #0
 8002cc8:	d054      	beq.n	8002d74 <_dtoa_r+0x59c>
 8002cca:	2000      	movs	r0, #0
 8002ccc:	4928      	ldr	r1, [pc, #160]	@ (8002d70 <_dtoa_r+0x598>)
 8002cce:	f7fd fda1 	bl	8000814 <__aeabi_ddiv>
 8002cd2:	4633      	mov	r3, r6
 8002cd4:	4656      	mov	r6, sl
 8002cd6:	462a      	mov	r2, r5
 8002cd8:	f7fd faba 	bl	8000250 <__aeabi_dsub>
 8002cdc:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002ce0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002ce4:	f7fd ff1c 	bl	8000b20 <__aeabi_d2iz>
 8002ce8:	4605      	mov	r5, r0
 8002cea:	f7fd fbff 	bl	80004ec <__aeabi_i2d>
 8002cee:	4602      	mov	r2, r0
 8002cf0:	460b      	mov	r3, r1
 8002cf2:	3530      	adds	r5, #48	@ 0x30
 8002cf4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002cf8:	f7fd faaa 	bl	8000250 <__aeabi_dsub>
 8002cfc:	4602      	mov	r2, r0
 8002cfe:	460b      	mov	r3, r1
 8002d00:	f806 5b01 	strb.w	r5, [r6], #1
 8002d04:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002d08:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002d0c:	f7fd feca 	bl	8000aa4 <__aeabi_dcmplt>
 8002d10:	2800      	cmp	r0, #0
 8002d12:	d172      	bne.n	8002dfa <_dtoa_r+0x622>
 8002d14:	2000      	movs	r0, #0
 8002d16:	4912      	ldr	r1, [pc, #72]	@ (8002d60 <_dtoa_r+0x588>)
 8002d18:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002d1c:	f7fd fa98 	bl	8000250 <__aeabi_dsub>
 8002d20:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002d24:	f7fd febe 	bl	8000aa4 <__aeabi_dcmplt>
 8002d28:	2800      	cmp	r0, #0
 8002d2a:	f040 80b4 	bne.w	8002e96 <_dtoa_r+0x6be>
 8002d2e:	42a6      	cmp	r6, r4
 8002d30:	f43f af70 	beq.w	8002c14 <_dtoa_r+0x43c>
 8002d34:	2200      	movs	r2, #0
 8002d36:	4b0b      	ldr	r3, [pc, #44]	@ (8002d64 <_dtoa_r+0x58c>)
 8002d38:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002d3c:	f7fd fc40 	bl	80005c0 <__aeabi_dmul>
 8002d40:	2200      	movs	r2, #0
 8002d42:	4b08      	ldr	r3, [pc, #32]	@ (8002d64 <_dtoa_r+0x58c>)
 8002d44:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002d48:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002d4c:	f7fd fc38 	bl	80005c0 <__aeabi_dmul>
 8002d50:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002d54:	e7c4      	b.n	8002ce0 <_dtoa_r+0x508>
 8002d56:	bf00      	nop
 8002d58:	08004940 	.word	0x08004940
 8002d5c:	08004918 	.word	0x08004918
 8002d60:	3ff00000 	.word	0x3ff00000
 8002d64:	40240000 	.word	0x40240000
 8002d68:	401c0000 	.word	0x401c0000
 8002d6c:	40140000 	.word	0x40140000
 8002d70:	3fe00000 	.word	0x3fe00000
 8002d74:	4631      	mov	r1, r6
 8002d76:	4656      	mov	r6, sl
 8002d78:	4628      	mov	r0, r5
 8002d7a:	f7fd fc21 	bl	80005c0 <__aeabi_dmul>
 8002d7e:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002d80:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002d84:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002d88:	f7fd feca 	bl	8000b20 <__aeabi_d2iz>
 8002d8c:	4605      	mov	r5, r0
 8002d8e:	f7fd fbad 	bl	80004ec <__aeabi_i2d>
 8002d92:	4602      	mov	r2, r0
 8002d94:	3530      	adds	r5, #48	@ 0x30
 8002d96:	460b      	mov	r3, r1
 8002d98:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002d9c:	f7fd fa58 	bl	8000250 <__aeabi_dsub>
 8002da0:	f806 5b01 	strb.w	r5, [r6], #1
 8002da4:	4602      	mov	r2, r0
 8002da6:	460b      	mov	r3, r1
 8002da8:	42a6      	cmp	r6, r4
 8002daa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002dae:	f04f 0200 	mov.w	r2, #0
 8002db2:	d124      	bne.n	8002dfe <_dtoa_r+0x626>
 8002db4:	4baf      	ldr	r3, [pc, #700]	@ (8003074 <_dtoa_r+0x89c>)
 8002db6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002dba:	f7fd fa4b 	bl	8000254 <__adddf3>
 8002dbe:	4602      	mov	r2, r0
 8002dc0:	460b      	mov	r3, r1
 8002dc2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002dc6:	f7fd fe8b 	bl	8000ae0 <__aeabi_dcmpgt>
 8002dca:	2800      	cmp	r0, #0
 8002dcc:	d163      	bne.n	8002e96 <_dtoa_r+0x6be>
 8002dce:	2000      	movs	r0, #0
 8002dd0:	49a8      	ldr	r1, [pc, #672]	@ (8003074 <_dtoa_r+0x89c>)
 8002dd2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002dd6:	f7fd fa3b 	bl	8000250 <__aeabi_dsub>
 8002dda:	4602      	mov	r2, r0
 8002ddc:	460b      	mov	r3, r1
 8002dde:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002de2:	f7fd fe5f 	bl	8000aa4 <__aeabi_dcmplt>
 8002de6:	2800      	cmp	r0, #0
 8002de8:	f43f af14 	beq.w	8002c14 <_dtoa_r+0x43c>
 8002dec:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002dee:	1e73      	subs	r3, r6, #1
 8002df0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002df2:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002df6:	2b30      	cmp	r3, #48	@ 0x30
 8002df8:	d0f8      	beq.n	8002dec <_dtoa_r+0x614>
 8002dfa:	4647      	mov	r7, r8
 8002dfc:	e03b      	b.n	8002e76 <_dtoa_r+0x69e>
 8002dfe:	4b9e      	ldr	r3, [pc, #632]	@ (8003078 <_dtoa_r+0x8a0>)
 8002e00:	f7fd fbde 	bl	80005c0 <__aeabi_dmul>
 8002e04:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002e08:	e7bc      	b.n	8002d84 <_dtoa_r+0x5ac>
 8002e0a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8002e0e:	4656      	mov	r6, sl
 8002e10:	4620      	mov	r0, r4
 8002e12:	4629      	mov	r1, r5
 8002e14:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002e18:	f7fd fcfc 	bl	8000814 <__aeabi_ddiv>
 8002e1c:	f7fd fe80 	bl	8000b20 <__aeabi_d2iz>
 8002e20:	4680      	mov	r8, r0
 8002e22:	f7fd fb63 	bl	80004ec <__aeabi_i2d>
 8002e26:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002e2a:	f7fd fbc9 	bl	80005c0 <__aeabi_dmul>
 8002e2e:	4602      	mov	r2, r0
 8002e30:	4620      	mov	r0, r4
 8002e32:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002e36:	460b      	mov	r3, r1
 8002e38:	4629      	mov	r1, r5
 8002e3a:	f7fd fa09 	bl	8000250 <__aeabi_dsub>
 8002e3e:	9d03      	ldr	r5, [sp, #12]
 8002e40:	f806 4b01 	strb.w	r4, [r6], #1
 8002e44:	eba6 040a 	sub.w	r4, r6, sl
 8002e48:	4602      	mov	r2, r0
 8002e4a:	460b      	mov	r3, r1
 8002e4c:	42a5      	cmp	r5, r4
 8002e4e:	d133      	bne.n	8002eb8 <_dtoa_r+0x6e0>
 8002e50:	f7fd fa00 	bl	8000254 <__adddf3>
 8002e54:	4604      	mov	r4, r0
 8002e56:	460d      	mov	r5, r1
 8002e58:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002e5c:	f7fd fe40 	bl	8000ae0 <__aeabi_dcmpgt>
 8002e60:	b9c0      	cbnz	r0, 8002e94 <_dtoa_r+0x6bc>
 8002e62:	4620      	mov	r0, r4
 8002e64:	4629      	mov	r1, r5
 8002e66:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002e6a:	f7fd fe11 	bl	8000a90 <__aeabi_dcmpeq>
 8002e6e:	b110      	cbz	r0, 8002e76 <_dtoa_r+0x69e>
 8002e70:	f018 0f01 	tst.w	r8, #1
 8002e74:	d10e      	bne.n	8002e94 <_dtoa_r+0x6bc>
 8002e76:	9902      	ldr	r1, [sp, #8]
 8002e78:	4648      	mov	r0, r9
 8002e7a:	f000 fbbf 	bl	80035fc <_Bfree>
 8002e7e:	2300      	movs	r3, #0
 8002e80:	3701      	adds	r7, #1
 8002e82:	7033      	strb	r3, [r6, #0]
 8002e84:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8002e86:	601f      	str	r7, [r3, #0]
 8002e88:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	f000 824c 	beq.w	8003328 <_dtoa_r+0xb50>
 8002e90:	601e      	str	r6, [r3, #0]
 8002e92:	e249      	b.n	8003328 <_dtoa_r+0xb50>
 8002e94:	46b8      	mov	r8, r7
 8002e96:	4633      	mov	r3, r6
 8002e98:	461e      	mov	r6, r3
 8002e9a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002e9e:	2a39      	cmp	r2, #57	@ 0x39
 8002ea0:	d106      	bne.n	8002eb0 <_dtoa_r+0x6d8>
 8002ea2:	459a      	cmp	sl, r3
 8002ea4:	d1f8      	bne.n	8002e98 <_dtoa_r+0x6c0>
 8002ea6:	2230      	movs	r2, #48	@ 0x30
 8002ea8:	f108 0801 	add.w	r8, r8, #1
 8002eac:	f88a 2000 	strb.w	r2, [sl]
 8002eb0:	781a      	ldrb	r2, [r3, #0]
 8002eb2:	3201      	adds	r2, #1
 8002eb4:	701a      	strb	r2, [r3, #0]
 8002eb6:	e7a0      	b.n	8002dfa <_dtoa_r+0x622>
 8002eb8:	2200      	movs	r2, #0
 8002eba:	4b6f      	ldr	r3, [pc, #444]	@ (8003078 <_dtoa_r+0x8a0>)
 8002ebc:	f7fd fb80 	bl	80005c0 <__aeabi_dmul>
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	2300      	movs	r3, #0
 8002ec4:	4604      	mov	r4, r0
 8002ec6:	460d      	mov	r5, r1
 8002ec8:	f7fd fde2 	bl	8000a90 <__aeabi_dcmpeq>
 8002ecc:	2800      	cmp	r0, #0
 8002ece:	d09f      	beq.n	8002e10 <_dtoa_r+0x638>
 8002ed0:	e7d1      	b.n	8002e76 <_dtoa_r+0x69e>
 8002ed2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002ed4:	2a00      	cmp	r2, #0
 8002ed6:	f000 80ea 	beq.w	80030ae <_dtoa_r+0x8d6>
 8002eda:	9a07      	ldr	r2, [sp, #28]
 8002edc:	2a01      	cmp	r2, #1
 8002ede:	f300 80cd 	bgt.w	800307c <_dtoa_r+0x8a4>
 8002ee2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002ee4:	2a00      	cmp	r2, #0
 8002ee6:	f000 80c1 	beq.w	800306c <_dtoa_r+0x894>
 8002eea:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002eee:	9c08      	ldr	r4, [sp, #32]
 8002ef0:	9e00      	ldr	r6, [sp, #0]
 8002ef2:	9a00      	ldr	r2, [sp, #0]
 8002ef4:	2101      	movs	r1, #1
 8002ef6:	4648      	mov	r0, r9
 8002ef8:	441a      	add	r2, r3
 8002efa:	9200      	str	r2, [sp, #0]
 8002efc:	9a06      	ldr	r2, [sp, #24]
 8002efe:	441a      	add	r2, r3
 8002f00:	9206      	str	r2, [sp, #24]
 8002f02:	f000 fc31 	bl	8003768 <__i2b>
 8002f06:	4605      	mov	r5, r0
 8002f08:	b166      	cbz	r6, 8002f24 <_dtoa_r+0x74c>
 8002f0a:	9b06      	ldr	r3, [sp, #24]
 8002f0c:	2b00      	cmp	r3, #0
 8002f0e:	dd09      	ble.n	8002f24 <_dtoa_r+0x74c>
 8002f10:	42b3      	cmp	r3, r6
 8002f12:	9a00      	ldr	r2, [sp, #0]
 8002f14:	bfa8      	it	ge
 8002f16:	4633      	movge	r3, r6
 8002f18:	1ad2      	subs	r2, r2, r3
 8002f1a:	1af6      	subs	r6, r6, r3
 8002f1c:	9200      	str	r2, [sp, #0]
 8002f1e:	9a06      	ldr	r2, [sp, #24]
 8002f20:	1ad3      	subs	r3, r2, r3
 8002f22:	9306      	str	r3, [sp, #24]
 8002f24:	9b08      	ldr	r3, [sp, #32]
 8002f26:	b30b      	cbz	r3, 8002f6c <_dtoa_r+0x794>
 8002f28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	f000 80c6 	beq.w	80030bc <_dtoa_r+0x8e4>
 8002f30:	2c00      	cmp	r4, #0
 8002f32:	f000 80c0 	beq.w	80030b6 <_dtoa_r+0x8de>
 8002f36:	4629      	mov	r1, r5
 8002f38:	4622      	mov	r2, r4
 8002f3a:	4648      	mov	r0, r9
 8002f3c:	f000 fcce 	bl	80038dc <__pow5mult>
 8002f40:	9a02      	ldr	r2, [sp, #8]
 8002f42:	4601      	mov	r1, r0
 8002f44:	4605      	mov	r5, r0
 8002f46:	4648      	mov	r0, r9
 8002f48:	f000 fc24 	bl	8003794 <__multiply>
 8002f4c:	9902      	ldr	r1, [sp, #8]
 8002f4e:	4680      	mov	r8, r0
 8002f50:	4648      	mov	r0, r9
 8002f52:	f000 fb53 	bl	80035fc <_Bfree>
 8002f56:	9b08      	ldr	r3, [sp, #32]
 8002f58:	1b1b      	subs	r3, r3, r4
 8002f5a:	9308      	str	r3, [sp, #32]
 8002f5c:	f000 80b1 	beq.w	80030c2 <_dtoa_r+0x8ea>
 8002f60:	9a08      	ldr	r2, [sp, #32]
 8002f62:	4641      	mov	r1, r8
 8002f64:	4648      	mov	r0, r9
 8002f66:	f000 fcb9 	bl	80038dc <__pow5mult>
 8002f6a:	9002      	str	r0, [sp, #8]
 8002f6c:	2101      	movs	r1, #1
 8002f6e:	4648      	mov	r0, r9
 8002f70:	f000 fbfa 	bl	8003768 <__i2b>
 8002f74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002f76:	4604      	mov	r4, r0
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	f000 81d9 	beq.w	8003330 <_dtoa_r+0xb58>
 8002f7e:	461a      	mov	r2, r3
 8002f80:	4601      	mov	r1, r0
 8002f82:	4648      	mov	r0, r9
 8002f84:	f000 fcaa 	bl	80038dc <__pow5mult>
 8002f88:	9b07      	ldr	r3, [sp, #28]
 8002f8a:	4604      	mov	r4, r0
 8002f8c:	2b01      	cmp	r3, #1
 8002f8e:	f300 809f 	bgt.w	80030d0 <_dtoa_r+0x8f8>
 8002f92:	9b04      	ldr	r3, [sp, #16]
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	f040 8097 	bne.w	80030c8 <_dtoa_r+0x8f0>
 8002f9a:	9b05      	ldr	r3, [sp, #20]
 8002f9c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002fa0:	2b00      	cmp	r3, #0
 8002fa2:	f040 8093 	bne.w	80030cc <_dtoa_r+0x8f4>
 8002fa6:	9b05      	ldr	r3, [sp, #20]
 8002fa8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002fac:	0d1b      	lsrs	r3, r3, #20
 8002fae:	051b      	lsls	r3, r3, #20
 8002fb0:	b133      	cbz	r3, 8002fc0 <_dtoa_r+0x7e8>
 8002fb2:	9b00      	ldr	r3, [sp, #0]
 8002fb4:	3301      	adds	r3, #1
 8002fb6:	9300      	str	r3, [sp, #0]
 8002fb8:	9b06      	ldr	r3, [sp, #24]
 8002fba:	3301      	adds	r3, #1
 8002fbc:	9306      	str	r3, [sp, #24]
 8002fbe:	2301      	movs	r3, #1
 8002fc0:	9308      	str	r3, [sp, #32]
 8002fc2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	f000 81b9 	beq.w	800333c <_dtoa_r+0xb64>
 8002fca:	6923      	ldr	r3, [r4, #16]
 8002fcc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002fd0:	6918      	ldr	r0, [r3, #16]
 8002fd2:	f000 fb7d 	bl	80036d0 <__hi0bits>
 8002fd6:	f1c0 0020 	rsb	r0, r0, #32
 8002fda:	9b06      	ldr	r3, [sp, #24]
 8002fdc:	4418      	add	r0, r3
 8002fde:	f010 001f 	ands.w	r0, r0, #31
 8002fe2:	f000 8082 	beq.w	80030ea <_dtoa_r+0x912>
 8002fe6:	f1c0 0320 	rsb	r3, r0, #32
 8002fea:	2b04      	cmp	r3, #4
 8002fec:	dd73      	ble.n	80030d6 <_dtoa_r+0x8fe>
 8002fee:	f1c0 001c 	rsb	r0, r0, #28
 8002ff2:	9b00      	ldr	r3, [sp, #0]
 8002ff4:	4403      	add	r3, r0
 8002ff6:	4406      	add	r6, r0
 8002ff8:	9300      	str	r3, [sp, #0]
 8002ffa:	9b06      	ldr	r3, [sp, #24]
 8002ffc:	4403      	add	r3, r0
 8002ffe:	9306      	str	r3, [sp, #24]
 8003000:	9b00      	ldr	r3, [sp, #0]
 8003002:	2b00      	cmp	r3, #0
 8003004:	dd05      	ble.n	8003012 <_dtoa_r+0x83a>
 8003006:	461a      	mov	r2, r3
 8003008:	9902      	ldr	r1, [sp, #8]
 800300a:	4648      	mov	r0, r9
 800300c:	f000 fcc0 	bl	8003990 <__lshift>
 8003010:	9002      	str	r0, [sp, #8]
 8003012:	9b06      	ldr	r3, [sp, #24]
 8003014:	2b00      	cmp	r3, #0
 8003016:	dd05      	ble.n	8003024 <_dtoa_r+0x84c>
 8003018:	4621      	mov	r1, r4
 800301a:	461a      	mov	r2, r3
 800301c:	4648      	mov	r0, r9
 800301e:	f000 fcb7 	bl	8003990 <__lshift>
 8003022:	4604      	mov	r4, r0
 8003024:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003026:	2b00      	cmp	r3, #0
 8003028:	d061      	beq.n	80030ee <_dtoa_r+0x916>
 800302a:	4621      	mov	r1, r4
 800302c:	9802      	ldr	r0, [sp, #8]
 800302e:	f000 fd1b 	bl	8003a68 <__mcmp>
 8003032:	2800      	cmp	r0, #0
 8003034:	da5b      	bge.n	80030ee <_dtoa_r+0x916>
 8003036:	2300      	movs	r3, #0
 8003038:	220a      	movs	r2, #10
 800303a:	9902      	ldr	r1, [sp, #8]
 800303c:	4648      	mov	r0, r9
 800303e:	f000 faff 	bl	8003640 <__multadd>
 8003042:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003044:	f107 38ff 	add.w	r8, r7, #4294967295
 8003048:	9002      	str	r0, [sp, #8]
 800304a:	2b00      	cmp	r3, #0
 800304c:	f000 8178 	beq.w	8003340 <_dtoa_r+0xb68>
 8003050:	4629      	mov	r1, r5
 8003052:	2300      	movs	r3, #0
 8003054:	220a      	movs	r2, #10
 8003056:	4648      	mov	r0, r9
 8003058:	f000 faf2 	bl	8003640 <__multadd>
 800305c:	f1bb 0f00 	cmp.w	fp, #0
 8003060:	4605      	mov	r5, r0
 8003062:	dc6f      	bgt.n	8003144 <_dtoa_r+0x96c>
 8003064:	9b07      	ldr	r3, [sp, #28]
 8003066:	2b02      	cmp	r3, #2
 8003068:	dc49      	bgt.n	80030fe <_dtoa_r+0x926>
 800306a:	e06b      	b.n	8003144 <_dtoa_r+0x96c>
 800306c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800306e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003072:	e73c      	b.n	8002eee <_dtoa_r+0x716>
 8003074:	3fe00000 	.word	0x3fe00000
 8003078:	40240000 	.word	0x40240000
 800307c:	9b03      	ldr	r3, [sp, #12]
 800307e:	1e5c      	subs	r4, r3, #1
 8003080:	9b08      	ldr	r3, [sp, #32]
 8003082:	42a3      	cmp	r3, r4
 8003084:	db09      	blt.n	800309a <_dtoa_r+0x8c2>
 8003086:	1b1c      	subs	r4, r3, r4
 8003088:	9b03      	ldr	r3, [sp, #12]
 800308a:	2b00      	cmp	r3, #0
 800308c:	f6bf af30 	bge.w	8002ef0 <_dtoa_r+0x718>
 8003090:	9b00      	ldr	r3, [sp, #0]
 8003092:	9a03      	ldr	r2, [sp, #12]
 8003094:	1a9e      	subs	r6, r3, r2
 8003096:	2300      	movs	r3, #0
 8003098:	e72b      	b.n	8002ef2 <_dtoa_r+0x71a>
 800309a:	9b08      	ldr	r3, [sp, #32]
 800309c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800309e:	1ae3      	subs	r3, r4, r3
 80030a0:	9408      	str	r4, [sp, #32]
 80030a2:	9e00      	ldr	r6, [sp, #0]
 80030a4:	2400      	movs	r4, #0
 80030a6:	441a      	add	r2, r3
 80030a8:	9b03      	ldr	r3, [sp, #12]
 80030aa:	920d      	str	r2, [sp, #52]	@ 0x34
 80030ac:	e721      	b.n	8002ef2 <_dtoa_r+0x71a>
 80030ae:	9c08      	ldr	r4, [sp, #32]
 80030b0:	9e00      	ldr	r6, [sp, #0]
 80030b2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80030b4:	e728      	b.n	8002f08 <_dtoa_r+0x730>
 80030b6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80030ba:	e751      	b.n	8002f60 <_dtoa_r+0x788>
 80030bc:	9a08      	ldr	r2, [sp, #32]
 80030be:	9902      	ldr	r1, [sp, #8]
 80030c0:	e750      	b.n	8002f64 <_dtoa_r+0x78c>
 80030c2:	f8cd 8008 	str.w	r8, [sp, #8]
 80030c6:	e751      	b.n	8002f6c <_dtoa_r+0x794>
 80030c8:	2300      	movs	r3, #0
 80030ca:	e779      	b.n	8002fc0 <_dtoa_r+0x7e8>
 80030cc:	9b04      	ldr	r3, [sp, #16]
 80030ce:	e777      	b.n	8002fc0 <_dtoa_r+0x7e8>
 80030d0:	2300      	movs	r3, #0
 80030d2:	9308      	str	r3, [sp, #32]
 80030d4:	e779      	b.n	8002fca <_dtoa_r+0x7f2>
 80030d6:	d093      	beq.n	8003000 <_dtoa_r+0x828>
 80030d8:	331c      	adds	r3, #28
 80030da:	9a00      	ldr	r2, [sp, #0]
 80030dc:	441a      	add	r2, r3
 80030de:	441e      	add	r6, r3
 80030e0:	9200      	str	r2, [sp, #0]
 80030e2:	9a06      	ldr	r2, [sp, #24]
 80030e4:	441a      	add	r2, r3
 80030e6:	9206      	str	r2, [sp, #24]
 80030e8:	e78a      	b.n	8003000 <_dtoa_r+0x828>
 80030ea:	4603      	mov	r3, r0
 80030ec:	e7f4      	b.n	80030d8 <_dtoa_r+0x900>
 80030ee:	9b03      	ldr	r3, [sp, #12]
 80030f0:	46b8      	mov	r8, r7
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	dc20      	bgt.n	8003138 <_dtoa_r+0x960>
 80030f6:	469b      	mov	fp, r3
 80030f8:	9b07      	ldr	r3, [sp, #28]
 80030fa:	2b02      	cmp	r3, #2
 80030fc:	dd1e      	ble.n	800313c <_dtoa_r+0x964>
 80030fe:	f1bb 0f00 	cmp.w	fp, #0
 8003102:	f47f adb1 	bne.w	8002c68 <_dtoa_r+0x490>
 8003106:	4621      	mov	r1, r4
 8003108:	465b      	mov	r3, fp
 800310a:	2205      	movs	r2, #5
 800310c:	4648      	mov	r0, r9
 800310e:	f000 fa97 	bl	8003640 <__multadd>
 8003112:	4601      	mov	r1, r0
 8003114:	4604      	mov	r4, r0
 8003116:	9802      	ldr	r0, [sp, #8]
 8003118:	f000 fca6 	bl	8003a68 <__mcmp>
 800311c:	2800      	cmp	r0, #0
 800311e:	f77f ada3 	ble.w	8002c68 <_dtoa_r+0x490>
 8003122:	4656      	mov	r6, sl
 8003124:	2331      	movs	r3, #49	@ 0x31
 8003126:	f108 0801 	add.w	r8, r8, #1
 800312a:	f806 3b01 	strb.w	r3, [r6], #1
 800312e:	e59f      	b.n	8002c70 <_dtoa_r+0x498>
 8003130:	46b8      	mov	r8, r7
 8003132:	9c03      	ldr	r4, [sp, #12]
 8003134:	4625      	mov	r5, r4
 8003136:	e7f4      	b.n	8003122 <_dtoa_r+0x94a>
 8003138:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800313c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800313e:	2b00      	cmp	r3, #0
 8003140:	f000 8102 	beq.w	8003348 <_dtoa_r+0xb70>
 8003144:	2e00      	cmp	r6, #0
 8003146:	dd05      	ble.n	8003154 <_dtoa_r+0x97c>
 8003148:	4629      	mov	r1, r5
 800314a:	4632      	mov	r2, r6
 800314c:	4648      	mov	r0, r9
 800314e:	f000 fc1f 	bl	8003990 <__lshift>
 8003152:	4605      	mov	r5, r0
 8003154:	9b08      	ldr	r3, [sp, #32]
 8003156:	2b00      	cmp	r3, #0
 8003158:	d05c      	beq.n	8003214 <_dtoa_r+0xa3c>
 800315a:	6869      	ldr	r1, [r5, #4]
 800315c:	4648      	mov	r0, r9
 800315e:	f000 fa0d 	bl	800357c <_Balloc>
 8003162:	4606      	mov	r6, r0
 8003164:	b928      	cbnz	r0, 8003172 <_dtoa_r+0x99a>
 8003166:	4b83      	ldr	r3, [pc, #524]	@ (8003374 <_dtoa_r+0xb9c>)
 8003168:	4602      	mov	r2, r0
 800316a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800316e:	f7ff bb4a 	b.w	8002806 <_dtoa_r+0x2e>
 8003172:	692a      	ldr	r2, [r5, #16]
 8003174:	f105 010c 	add.w	r1, r5, #12
 8003178:	300c      	adds	r0, #12
 800317a:	3202      	adds	r2, #2
 800317c:	0092      	lsls	r2, r2, #2
 800317e:	f000 ffad 	bl	80040dc <memcpy>
 8003182:	2201      	movs	r2, #1
 8003184:	4631      	mov	r1, r6
 8003186:	4648      	mov	r0, r9
 8003188:	f000 fc02 	bl	8003990 <__lshift>
 800318c:	f10a 0301 	add.w	r3, sl, #1
 8003190:	462f      	mov	r7, r5
 8003192:	4605      	mov	r5, r0
 8003194:	9300      	str	r3, [sp, #0]
 8003196:	eb0a 030b 	add.w	r3, sl, fp
 800319a:	9308      	str	r3, [sp, #32]
 800319c:	9b04      	ldr	r3, [sp, #16]
 800319e:	f003 0301 	and.w	r3, r3, #1
 80031a2:	9306      	str	r3, [sp, #24]
 80031a4:	9b00      	ldr	r3, [sp, #0]
 80031a6:	4621      	mov	r1, r4
 80031a8:	9802      	ldr	r0, [sp, #8]
 80031aa:	f103 3bff 	add.w	fp, r3, #4294967295
 80031ae:	f7ff fa84 	bl	80026ba <quorem>
 80031b2:	4603      	mov	r3, r0
 80031b4:	4639      	mov	r1, r7
 80031b6:	9003      	str	r0, [sp, #12]
 80031b8:	3330      	adds	r3, #48	@ 0x30
 80031ba:	9802      	ldr	r0, [sp, #8]
 80031bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80031be:	f000 fc53 	bl	8003a68 <__mcmp>
 80031c2:	462a      	mov	r2, r5
 80031c4:	9004      	str	r0, [sp, #16]
 80031c6:	4621      	mov	r1, r4
 80031c8:	4648      	mov	r0, r9
 80031ca:	f000 fc69 	bl	8003aa0 <__mdiff>
 80031ce:	68c2      	ldr	r2, [r0, #12]
 80031d0:	4606      	mov	r6, r0
 80031d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80031d4:	bb02      	cbnz	r2, 8003218 <_dtoa_r+0xa40>
 80031d6:	4601      	mov	r1, r0
 80031d8:	9802      	ldr	r0, [sp, #8]
 80031da:	f000 fc45 	bl	8003a68 <__mcmp>
 80031de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80031e0:	4602      	mov	r2, r0
 80031e2:	4631      	mov	r1, r6
 80031e4:	4648      	mov	r0, r9
 80031e6:	920c      	str	r2, [sp, #48]	@ 0x30
 80031e8:	9309      	str	r3, [sp, #36]	@ 0x24
 80031ea:	f000 fa07 	bl	80035fc <_Bfree>
 80031ee:	9b07      	ldr	r3, [sp, #28]
 80031f0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80031f2:	9e00      	ldr	r6, [sp, #0]
 80031f4:	ea42 0103 	orr.w	r1, r2, r3
 80031f8:	9b06      	ldr	r3, [sp, #24]
 80031fa:	4319      	orrs	r1, r3
 80031fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80031fe:	d10d      	bne.n	800321c <_dtoa_r+0xa44>
 8003200:	2b39      	cmp	r3, #57	@ 0x39
 8003202:	d027      	beq.n	8003254 <_dtoa_r+0xa7c>
 8003204:	9a04      	ldr	r2, [sp, #16]
 8003206:	2a00      	cmp	r2, #0
 8003208:	dd01      	ble.n	800320e <_dtoa_r+0xa36>
 800320a:	9b03      	ldr	r3, [sp, #12]
 800320c:	3331      	adds	r3, #49	@ 0x31
 800320e:	f88b 3000 	strb.w	r3, [fp]
 8003212:	e52e      	b.n	8002c72 <_dtoa_r+0x49a>
 8003214:	4628      	mov	r0, r5
 8003216:	e7b9      	b.n	800318c <_dtoa_r+0x9b4>
 8003218:	2201      	movs	r2, #1
 800321a:	e7e2      	b.n	80031e2 <_dtoa_r+0xa0a>
 800321c:	9904      	ldr	r1, [sp, #16]
 800321e:	2900      	cmp	r1, #0
 8003220:	db04      	blt.n	800322c <_dtoa_r+0xa54>
 8003222:	9807      	ldr	r0, [sp, #28]
 8003224:	4301      	orrs	r1, r0
 8003226:	9806      	ldr	r0, [sp, #24]
 8003228:	4301      	orrs	r1, r0
 800322a:	d120      	bne.n	800326e <_dtoa_r+0xa96>
 800322c:	2a00      	cmp	r2, #0
 800322e:	ddee      	ble.n	800320e <_dtoa_r+0xa36>
 8003230:	2201      	movs	r2, #1
 8003232:	9902      	ldr	r1, [sp, #8]
 8003234:	4648      	mov	r0, r9
 8003236:	9300      	str	r3, [sp, #0]
 8003238:	f000 fbaa 	bl	8003990 <__lshift>
 800323c:	4621      	mov	r1, r4
 800323e:	9002      	str	r0, [sp, #8]
 8003240:	f000 fc12 	bl	8003a68 <__mcmp>
 8003244:	2800      	cmp	r0, #0
 8003246:	9b00      	ldr	r3, [sp, #0]
 8003248:	dc02      	bgt.n	8003250 <_dtoa_r+0xa78>
 800324a:	d1e0      	bne.n	800320e <_dtoa_r+0xa36>
 800324c:	07da      	lsls	r2, r3, #31
 800324e:	d5de      	bpl.n	800320e <_dtoa_r+0xa36>
 8003250:	2b39      	cmp	r3, #57	@ 0x39
 8003252:	d1da      	bne.n	800320a <_dtoa_r+0xa32>
 8003254:	2339      	movs	r3, #57	@ 0x39
 8003256:	f88b 3000 	strb.w	r3, [fp]
 800325a:	4633      	mov	r3, r6
 800325c:	461e      	mov	r6, r3
 800325e:	3b01      	subs	r3, #1
 8003260:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003264:	2a39      	cmp	r2, #57	@ 0x39
 8003266:	d04f      	beq.n	8003308 <_dtoa_r+0xb30>
 8003268:	3201      	adds	r2, #1
 800326a:	701a      	strb	r2, [r3, #0]
 800326c:	e501      	b.n	8002c72 <_dtoa_r+0x49a>
 800326e:	2a00      	cmp	r2, #0
 8003270:	dd03      	ble.n	800327a <_dtoa_r+0xaa2>
 8003272:	2b39      	cmp	r3, #57	@ 0x39
 8003274:	d0ee      	beq.n	8003254 <_dtoa_r+0xa7c>
 8003276:	3301      	adds	r3, #1
 8003278:	e7c9      	b.n	800320e <_dtoa_r+0xa36>
 800327a:	9a00      	ldr	r2, [sp, #0]
 800327c:	9908      	ldr	r1, [sp, #32]
 800327e:	f802 3c01 	strb.w	r3, [r2, #-1]
 8003282:	428a      	cmp	r2, r1
 8003284:	d029      	beq.n	80032da <_dtoa_r+0xb02>
 8003286:	2300      	movs	r3, #0
 8003288:	220a      	movs	r2, #10
 800328a:	9902      	ldr	r1, [sp, #8]
 800328c:	4648      	mov	r0, r9
 800328e:	f000 f9d7 	bl	8003640 <__multadd>
 8003292:	42af      	cmp	r7, r5
 8003294:	9002      	str	r0, [sp, #8]
 8003296:	f04f 0300 	mov.w	r3, #0
 800329a:	f04f 020a 	mov.w	r2, #10
 800329e:	4639      	mov	r1, r7
 80032a0:	4648      	mov	r0, r9
 80032a2:	d107      	bne.n	80032b4 <_dtoa_r+0xadc>
 80032a4:	f000 f9cc 	bl	8003640 <__multadd>
 80032a8:	4607      	mov	r7, r0
 80032aa:	4605      	mov	r5, r0
 80032ac:	9b00      	ldr	r3, [sp, #0]
 80032ae:	3301      	adds	r3, #1
 80032b0:	9300      	str	r3, [sp, #0]
 80032b2:	e777      	b.n	80031a4 <_dtoa_r+0x9cc>
 80032b4:	f000 f9c4 	bl	8003640 <__multadd>
 80032b8:	4629      	mov	r1, r5
 80032ba:	4607      	mov	r7, r0
 80032bc:	2300      	movs	r3, #0
 80032be:	220a      	movs	r2, #10
 80032c0:	4648      	mov	r0, r9
 80032c2:	f000 f9bd 	bl	8003640 <__multadd>
 80032c6:	4605      	mov	r5, r0
 80032c8:	e7f0      	b.n	80032ac <_dtoa_r+0xad4>
 80032ca:	f1bb 0f00 	cmp.w	fp, #0
 80032ce:	f04f 0700 	mov.w	r7, #0
 80032d2:	bfcc      	ite	gt
 80032d4:	465e      	movgt	r6, fp
 80032d6:	2601      	movle	r6, #1
 80032d8:	4456      	add	r6, sl
 80032da:	2201      	movs	r2, #1
 80032dc:	9902      	ldr	r1, [sp, #8]
 80032de:	4648      	mov	r0, r9
 80032e0:	9300      	str	r3, [sp, #0]
 80032e2:	f000 fb55 	bl	8003990 <__lshift>
 80032e6:	4621      	mov	r1, r4
 80032e8:	9002      	str	r0, [sp, #8]
 80032ea:	f000 fbbd 	bl	8003a68 <__mcmp>
 80032ee:	2800      	cmp	r0, #0
 80032f0:	dcb3      	bgt.n	800325a <_dtoa_r+0xa82>
 80032f2:	d102      	bne.n	80032fa <_dtoa_r+0xb22>
 80032f4:	9b00      	ldr	r3, [sp, #0]
 80032f6:	07db      	lsls	r3, r3, #31
 80032f8:	d4af      	bmi.n	800325a <_dtoa_r+0xa82>
 80032fa:	4633      	mov	r3, r6
 80032fc:	461e      	mov	r6, r3
 80032fe:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003302:	2a30      	cmp	r2, #48	@ 0x30
 8003304:	d0fa      	beq.n	80032fc <_dtoa_r+0xb24>
 8003306:	e4b4      	b.n	8002c72 <_dtoa_r+0x49a>
 8003308:	459a      	cmp	sl, r3
 800330a:	d1a7      	bne.n	800325c <_dtoa_r+0xa84>
 800330c:	2331      	movs	r3, #49	@ 0x31
 800330e:	f108 0801 	add.w	r8, r8, #1
 8003312:	f88a 3000 	strb.w	r3, [sl]
 8003316:	e4ac      	b.n	8002c72 <_dtoa_r+0x49a>
 8003318:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800331a:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8003378 <_dtoa_r+0xba0>
 800331e:	b11b      	cbz	r3, 8003328 <_dtoa_r+0xb50>
 8003320:	f10a 0308 	add.w	r3, sl, #8
 8003324:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8003326:	6013      	str	r3, [r2, #0]
 8003328:	4650      	mov	r0, sl
 800332a:	b017      	add	sp, #92	@ 0x5c
 800332c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003330:	9b07      	ldr	r3, [sp, #28]
 8003332:	2b01      	cmp	r3, #1
 8003334:	f77f ae2d 	ble.w	8002f92 <_dtoa_r+0x7ba>
 8003338:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800333a:	9308      	str	r3, [sp, #32]
 800333c:	2001      	movs	r0, #1
 800333e:	e64c      	b.n	8002fda <_dtoa_r+0x802>
 8003340:	f1bb 0f00 	cmp.w	fp, #0
 8003344:	f77f aed8 	ble.w	80030f8 <_dtoa_r+0x920>
 8003348:	4656      	mov	r6, sl
 800334a:	4621      	mov	r1, r4
 800334c:	9802      	ldr	r0, [sp, #8]
 800334e:	f7ff f9b4 	bl	80026ba <quorem>
 8003352:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8003356:	f806 3b01 	strb.w	r3, [r6], #1
 800335a:	eba6 020a 	sub.w	r2, r6, sl
 800335e:	4593      	cmp	fp, r2
 8003360:	ddb3      	ble.n	80032ca <_dtoa_r+0xaf2>
 8003362:	2300      	movs	r3, #0
 8003364:	220a      	movs	r2, #10
 8003366:	9902      	ldr	r1, [sp, #8]
 8003368:	4648      	mov	r0, r9
 800336a:	f000 f969 	bl	8003640 <__multadd>
 800336e:	9002      	str	r0, [sp, #8]
 8003370:	e7eb      	b.n	800334a <_dtoa_r+0xb72>
 8003372:	bf00      	nop
 8003374:	08004846 	.word	0x08004846
 8003378:	080047ca 	.word	0x080047ca

0800337c <_free_r>:
 800337c:	b538      	push	{r3, r4, r5, lr}
 800337e:	4605      	mov	r5, r0
 8003380:	2900      	cmp	r1, #0
 8003382:	d041      	beq.n	8003408 <_free_r+0x8c>
 8003384:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003388:	1f0c      	subs	r4, r1, #4
 800338a:	2b00      	cmp	r3, #0
 800338c:	bfb8      	it	lt
 800338e:	18e4      	addlt	r4, r4, r3
 8003390:	f000 f8e8 	bl	8003564 <__malloc_lock>
 8003394:	4a1d      	ldr	r2, [pc, #116]	@ (800340c <_free_r+0x90>)
 8003396:	6813      	ldr	r3, [r2, #0]
 8003398:	b933      	cbnz	r3, 80033a8 <_free_r+0x2c>
 800339a:	6063      	str	r3, [r4, #4]
 800339c:	6014      	str	r4, [r2, #0]
 800339e:	4628      	mov	r0, r5
 80033a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80033a4:	f000 b8e4 	b.w	8003570 <__malloc_unlock>
 80033a8:	42a3      	cmp	r3, r4
 80033aa:	d908      	bls.n	80033be <_free_r+0x42>
 80033ac:	6820      	ldr	r0, [r4, #0]
 80033ae:	1821      	adds	r1, r4, r0
 80033b0:	428b      	cmp	r3, r1
 80033b2:	bf01      	itttt	eq
 80033b4:	6819      	ldreq	r1, [r3, #0]
 80033b6:	685b      	ldreq	r3, [r3, #4]
 80033b8:	1809      	addeq	r1, r1, r0
 80033ba:	6021      	streq	r1, [r4, #0]
 80033bc:	e7ed      	b.n	800339a <_free_r+0x1e>
 80033be:	461a      	mov	r2, r3
 80033c0:	685b      	ldr	r3, [r3, #4]
 80033c2:	b10b      	cbz	r3, 80033c8 <_free_r+0x4c>
 80033c4:	42a3      	cmp	r3, r4
 80033c6:	d9fa      	bls.n	80033be <_free_r+0x42>
 80033c8:	6811      	ldr	r1, [r2, #0]
 80033ca:	1850      	adds	r0, r2, r1
 80033cc:	42a0      	cmp	r0, r4
 80033ce:	d10b      	bne.n	80033e8 <_free_r+0x6c>
 80033d0:	6820      	ldr	r0, [r4, #0]
 80033d2:	4401      	add	r1, r0
 80033d4:	1850      	adds	r0, r2, r1
 80033d6:	6011      	str	r1, [r2, #0]
 80033d8:	4283      	cmp	r3, r0
 80033da:	d1e0      	bne.n	800339e <_free_r+0x22>
 80033dc:	6818      	ldr	r0, [r3, #0]
 80033de:	685b      	ldr	r3, [r3, #4]
 80033e0:	4408      	add	r0, r1
 80033e2:	6053      	str	r3, [r2, #4]
 80033e4:	6010      	str	r0, [r2, #0]
 80033e6:	e7da      	b.n	800339e <_free_r+0x22>
 80033e8:	d902      	bls.n	80033f0 <_free_r+0x74>
 80033ea:	230c      	movs	r3, #12
 80033ec:	602b      	str	r3, [r5, #0]
 80033ee:	e7d6      	b.n	800339e <_free_r+0x22>
 80033f0:	6820      	ldr	r0, [r4, #0]
 80033f2:	1821      	adds	r1, r4, r0
 80033f4:	428b      	cmp	r3, r1
 80033f6:	bf02      	ittt	eq
 80033f8:	6819      	ldreq	r1, [r3, #0]
 80033fa:	685b      	ldreq	r3, [r3, #4]
 80033fc:	1809      	addeq	r1, r1, r0
 80033fe:	6063      	str	r3, [r4, #4]
 8003400:	bf08      	it	eq
 8003402:	6021      	streq	r1, [r4, #0]
 8003404:	6054      	str	r4, [r2, #4]
 8003406:	e7ca      	b.n	800339e <_free_r+0x22>
 8003408:	bd38      	pop	{r3, r4, r5, pc}
 800340a:	bf00      	nop
 800340c:	20000360 	.word	0x20000360

08003410 <malloc>:
 8003410:	4b02      	ldr	r3, [pc, #8]	@ (800341c <malloc+0xc>)
 8003412:	4601      	mov	r1, r0
 8003414:	6818      	ldr	r0, [r3, #0]
 8003416:	f000 b825 	b.w	8003464 <_malloc_r>
 800341a:	bf00      	nop
 800341c:	2000000c 	.word	0x2000000c

08003420 <sbrk_aligned>:
 8003420:	b570      	push	{r4, r5, r6, lr}
 8003422:	4e0f      	ldr	r6, [pc, #60]	@ (8003460 <sbrk_aligned+0x40>)
 8003424:	460c      	mov	r4, r1
 8003426:	4605      	mov	r5, r0
 8003428:	6831      	ldr	r1, [r6, #0]
 800342a:	b911      	cbnz	r1, 8003432 <sbrk_aligned+0x12>
 800342c:	f000 fe46 	bl	80040bc <_sbrk_r>
 8003430:	6030      	str	r0, [r6, #0]
 8003432:	4621      	mov	r1, r4
 8003434:	4628      	mov	r0, r5
 8003436:	f000 fe41 	bl	80040bc <_sbrk_r>
 800343a:	1c43      	adds	r3, r0, #1
 800343c:	d103      	bne.n	8003446 <sbrk_aligned+0x26>
 800343e:	f04f 34ff 	mov.w	r4, #4294967295
 8003442:	4620      	mov	r0, r4
 8003444:	bd70      	pop	{r4, r5, r6, pc}
 8003446:	1cc4      	adds	r4, r0, #3
 8003448:	f024 0403 	bic.w	r4, r4, #3
 800344c:	42a0      	cmp	r0, r4
 800344e:	d0f8      	beq.n	8003442 <sbrk_aligned+0x22>
 8003450:	1a21      	subs	r1, r4, r0
 8003452:	4628      	mov	r0, r5
 8003454:	f000 fe32 	bl	80040bc <_sbrk_r>
 8003458:	3001      	adds	r0, #1
 800345a:	d1f2      	bne.n	8003442 <sbrk_aligned+0x22>
 800345c:	e7ef      	b.n	800343e <sbrk_aligned+0x1e>
 800345e:	bf00      	nop
 8003460:	2000035c 	.word	0x2000035c

08003464 <_malloc_r>:
 8003464:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003468:	1ccd      	adds	r5, r1, #3
 800346a:	4606      	mov	r6, r0
 800346c:	f025 0503 	bic.w	r5, r5, #3
 8003470:	3508      	adds	r5, #8
 8003472:	2d0c      	cmp	r5, #12
 8003474:	bf38      	it	cc
 8003476:	250c      	movcc	r5, #12
 8003478:	2d00      	cmp	r5, #0
 800347a:	db01      	blt.n	8003480 <_malloc_r+0x1c>
 800347c:	42a9      	cmp	r1, r5
 800347e:	d904      	bls.n	800348a <_malloc_r+0x26>
 8003480:	230c      	movs	r3, #12
 8003482:	6033      	str	r3, [r6, #0]
 8003484:	2000      	movs	r0, #0
 8003486:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800348a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003560 <_malloc_r+0xfc>
 800348e:	f000 f869 	bl	8003564 <__malloc_lock>
 8003492:	f8d8 3000 	ldr.w	r3, [r8]
 8003496:	461c      	mov	r4, r3
 8003498:	bb44      	cbnz	r4, 80034ec <_malloc_r+0x88>
 800349a:	4629      	mov	r1, r5
 800349c:	4630      	mov	r0, r6
 800349e:	f7ff ffbf 	bl	8003420 <sbrk_aligned>
 80034a2:	1c43      	adds	r3, r0, #1
 80034a4:	4604      	mov	r4, r0
 80034a6:	d158      	bne.n	800355a <_malloc_r+0xf6>
 80034a8:	f8d8 4000 	ldr.w	r4, [r8]
 80034ac:	4627      	mov	r7, r4
 80034ae:	2f00      	cmp	r7, #0
 80034b0:	d143      	bne.n	800353a <_malloc_r+0xd6>
 80034b2:	2c00      	cmp	r4, #0
 80034b4:	d04b      	beq.n	800354e <_malloc_r+0xea>
 80034b6:	6823      	ldr	r3, [r4, #0]
 80034b8:	4639      	mov	r1, r7
 80034ba:	4630      	mov	r0, r6
 80034bc:	eb04 0903 	add.w	r9, r4, r3
 80034c0:	f000 fdfc 	bl	80040bc <_sbrk_r>
 80034c4:	4581      	cmp	r9, r0
 80034c6:	d142      	bne.n	800354e <_malloc_r+0xea>
 80034c8:	6821      	ldr	r1, [r4, #0]
 80034ca:	4630      	mov	r0, r6
 80034cc:	1a6d      	subs	r5, r5, r1
 80034ce:	4629      	mov	r1, r5
 80034d0:	f7ff ffa6 	bl	8003420 <sbrk_aligned>
 80034d4:	3001      	adds	r0, #1
 80034d6:	d03a      	beq.n	800354e <_malloc_r+0xea>
 80034d8:	6823      	ldr	r3, [r4, #0]
 80034da:	442b      	add	r3, r5
 80034dc:	6023      	str	r3, [r4, #0]
 80034de:	f8d8 3000 	ldr.w	r3, [r8]
 80034e2:	685a      	ldr	r2, [r3, #4]
 80034e4:	bb62      	cbnz	r2, 8003540 <_malloc_r+0xdc>
 80034e6:	f8c8 7000 	str.w	r7, [r8]
 80034ea:	e00f      	b.n	800350c <_malloc_r+0xa8>
 80034ec:	6822      	ldr	r2, [r4, #0]
 80034ee:	1b52      	subs	r2, r2, r5
 80034f0:	d420      	bmi.n	8003534 <_malloc_r+0xd0>
 80034f2:	2a0b      	cmp	r2, #11
 80034f4:	d917      	bls.n	8003526 <_malloc_r+0xc2>
 80034f6:	1961      	adds	r1, r4, r5
 80034f8:	42a3      	cmp	r3, r4
 80034fa:	6025      	str	r5, [r4, #0]
 80034fc:	bf18      	it	ne
 80034fe:	6059      	strne	r1, [r3, #4]
 8003500:	6863      	ldr	r3, [r4, #4]
 8003502:	bf08      	it	eq
 8003504:	f8c8 1000 	streq.w	r1, [r8]
 8003508:	5162      	str	r2, [r4, r5]
 800350a:	604b      	str	r3, [r1, #4]
 800350c:	4630      	mov	r0, r6
 800350e:	f000 f82f 	bl	8003570 <__malloc_unlock>
 8003512:	f104 000b 	add.w	r0, r4, #11
 8003516:	1d23      	adds	r3, r4, #4
 8003518:	f020 0007 	bic.w	r0, r0, #7
 800351c:	1ac2      	subs	r2, r0, r3
 800351e:	bf1c      	itt	ne
 8003520:	1a1b      	subne	r3, r3, r0
 8003522:	50a3      	strne	r3, [r4, r2]
 8003524:	e7af      	b.n	8003486 <_malloc_r+0x22>
 8003526:	6862      	ldr	r2, [r4, #4]
 8003528:	42a3      	cmp	r3, r4
 800352a:	bf0c      	ite	eq
 800352c:	f8c8 2000 	streq.w	r2, [r8]
 8003530:	605a      	strne	r2, [r3, #4]
 8003532:	e7eb      	b.n	800350c <_malloc_r+0xa8>
 8003534:	4623      	mov	r3, r4
 8003536:	6864      	ldr	r4, [r4, #4]
 8003538:	e7ae      	b.n	8003498 <_malloc_r+0x34>
 800353a:	463c      	mov	r4, r7
 800353c:	687f      	ldr	r7, [r7, #4]
 800353e:	e7b6      	b.n	80034ae <_malloc_r+0x4a>
 8003540:	461a      	mov	r2, r3
 8003542:	685b      	ldr	r3, [r3, #4]
 8003544:	42a3      	cmp	r3, r4
 8003546:	d1fb      	bne.n	8003540 <_malloc_r+0xdc>
 8003548:	2300      	movs	r3, #0
 800354a:	6053      	str	r3, [r2, #4]
 800354c:	e7de      	b.n	800350c <_malloc_r+0xa8>
 800354e:	230c      	movs	r3, #12
 8003550:	4630      	mov	r0, r6
 8003552:	6033      	str	r3, [r6, #0]
 8003554:	f000 f80c 	bl	8003570 <__malloc_unlock>
 8003558:	e794      	b.n	8003484 <_malloc_r+0x20>
 800355a:	6005      	str	r5, [r0, #0]
 800355c:	e7d6      	b.n	800350c <_malloc_r+0xa8>
 800355e:	bf00      	nop
 8003560:	20000360 	.word	0x20000360

08003564 <__malloc_lock>:
 8003564:	4801      	ldr	r0, [pc, #4]	@ (800356c <__malloc_lock+0x8>)
 8003566:	f7ff b898 	b.w	800269a <__retarget_lock_acquire_recursive>
 800356a:	bf00      	nop
 800356c:	20000358 	.word	0x20000358

08003570 <__malloc_unlock>:
 8003570:	4801      	ldr	r0, [pc, #4]	@ (8003578 <__malloc_unlock+0x8>)
 8003572:	f7ff b893 	b.w	800269c <__retarget_lock_release_recursive>
 8003576:	bf00      	nop
 8003578:	20000358 	.word	0x20000358

0800357c <_Balloc>:
 800357c:	b570      	push	{r4, r5, r6, lr}
 800357e:	69c6      	ldr	r6, [r0, #28]
 8003580:	4604      	mov	r4, r0
 8003582:	460d      	mov	r5, r1
 8003584:	b976      	cbnz	r6, 80035a4 <_Balloc+0x28>
 8003586:	2010      	movs	r0, #16
 8003588:	f7ff ff42 	bl	8003410 <malloc>
 800358c:	4602      	mov	r2, r0
 800358e:	61e0      	str	r0, [r4, #28]
 8003590:	b920      	cbnz	r0, 800359c <_Balloc+0x20>
 8003592:	4b18      	ldr	r3, [pc, #96]	@ (80035f4 <_Balloc+0x78>)
 8003594:	216b      	movs	r1, #107	@ 0x6b
 8003596:	4818      	ldr	r0, [pc, #96]	@ (80035f8 <_Balloc+0x7c>)
 8003598:	f000 fdae 	bl	80040f8 <__assert_func>
 800359c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80035a0:	6006      	str	r6, [r0, #0]
 80035a2:	60c6      	str	r6, [r0, #12]
 80035a4:	69e6      	ldr	r6, [r4, #28]
 80035a6:	68f3      	ldr	r3, [r6, #12]
 80035a8:	b183      	cbz	r3, 80035cc <_Balloc+0x50>
 80035aa:	69e3      	ldr	r3, [r4, #28]
 80035ac:	68db      	ldr	r3, [r3, #12]
 80035ae:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80035b2:	b9b8      	cbnz	r0, 80035e4 <_Balloc+0x68>
 80035b4:	2101      	movs	r1, #1
 80035b6:	4620      	mov	r0, r4
 80035b8:	fa01 f605 	lsl.w	r6, r1, r5
 80035bc:	1d72      	adds	r2, r6, #5
 80035be:	0092      	lsls	r2, r2, #2
 80035c0:	f000 fdb8 	bl	8004134 <_calloc_r>
 80035c4:	b160      	cbz	r0, 80035e0 <_Balloc+0x64>
 80035c6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80035ca:	e00e      	b.n	80035ea <_Balloc+0x6e>
 80035cc:	2221      	movs	r2, #33	@ 0x21
 80035ce:	2104      	movs	r1, #4
 80035d0:	4620      	mov	r0, r4
 80035d2:	f000 fdaf 	bl	8004134 <_calloc_r>
 80035d6:	69e3      	ldr	r3, [r4, #28]
 80035d8:	60f0      	str	r0, [r6, #12]
 80035da:	68db      	ldr	r3, [r3, #12]
 80035dc:	2b00      	cmp	r3, #0
 80035de:	d1e4      	bne.n	80035aa <_Balloc+0x2e>
 80035e0:	2000      	movs	r0, #0
 80035e2:	bd70      	pop	{r4, r5, r6, pc}
 80035e4:	6802      	ldr	r2, [r0, #0]
 80035e6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80035ea:	2300      	movs	r3, #0
 80035ec:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80035f0:	e7f7      	b.n	80035e2 <_Balloc+0x66>
 80035f2:	bf00      	nop
 80035f4:	080047d7 	.word	0x080047d7
 80035f8:	08004857 	.word	0x08004857

080035fc <_Bfree>:
 80035fc:	b570      	push	{r4, r5, r6, lr}
 80035fe:	69c6      	ldr	r6, [r0, #28]
 8003600:	4605      	mov	r5, r0
 8003602:	460c      	mov	r4, r1
 8003604:	b976      	cbnz	r6, 8003624 <_Bfree+0x28>
 8003606:	2010      	movs	r0, #16
 8003608:	f7ff ff02 	bl	8003410 <malloc>
 800360c:	4602      	mov	r2, r0
 800360e:	61e8      	str	r0, [r5, #28]
 8003610:	b920      	cbnz	r0, 800361c <_Bfree+0x20>
 8003612:	4b09      	ldr	r3, [pc, #36]	@ (8003638 <_Bfree+0x3c>)
 8003614:	218f      	movs	r1, #143	@ 0x8f
 8003616:	4809      	ldr	r0, [pc, #36]	@ (800363c <_Bfree+0x40>)
 8003618:	f000 fd6e 	bl	80040f8 <__assert_func>
 800361c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003620:	6006      	str	r6, [r0, #0]
 8003622:	60c6      	str	r6, [r0, #12]
 8003624:	b13c      	cbz	r4, 8003636 <_Bfree+0x3a>
 8003626:	69eb      	ldr	r3, [r5, #28]
 8003628:	6862      	ldr	r2, [r4, #4]
 800362a:	68db      	ldr	r3, [r3, #12]
 800362c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003630:	6021      	str	r1, [r4, #0]
 8003632:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003636:	bd70      	pop	{r4, r5, r6, pc}
 8003638:	080047d7 	.word	0x080047d7
 800363c:	08004857 	.word	0x08004857

08003640 <__multadd>:
 8003640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003644:	f101 0c14 	add.w	ip, r1, #20
 8003648:	4607      	mov	r7, r0
 800364a:	460c      	mov	r4, r1
 800364c:	461e      	mov	r6, r3
 800364e:	690d      	ldr	r5, [r1, #16]
 8003650:	2000      	movs	r0, #0
 8003652:	f8dc 3000 	ldr.w	r3, [ip]
 8003656:	3001      	adds	r0, #1
 8003658:	b299      	uxth	r1, r3
 800365a:	4285      	cmp	r5, r0
 800365c:	fb02 6101 	mla	r1, r2, r1, r6
 8003660:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003664:	ea4f 4311 	mov.w	r3, r1, lsr #16
 8003668:	b289      	uxth	r1, r1
 800366a:	fb02 3306 	mla	r3, r2, r6, r3
 800366e:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003672:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003676:	f84c 1b04 	str.w	r1, [ip], #4
 800367a:	dcea      	bgt.n	8003652 <__multadd+0x12>
 800367c:	b30e      	cbz	r6, 80036c2 <__multadd+0x82>
 800367e:	68a3      	ldr	r3, [r4, #8]
 8003680:	42ab      	cmp	r3, r5
 8003682:	dc19      	bgt.n	80036b8 <__multadd+0x78>
 8003684:	6861      	ldr	r1, [r4, #4]
 8003686:	4638      	mov	r0, r7
 8003688:	3101      	adds	r1, #1
 800368a:	f7ff ff77 	bl	800357c <_Balloc>
 800368e:	4680      	mov	r8, r0
 8003690:	b928      	cbnz	r0, 800369e <__multadd+0x5e>
 8003692:	4602      	mov	r2, r0
 8003694:	4b0c      	ldr	r3, [pc, #48]	@ (80036c8 <__multadd+0x88>)
 8003696:	21ba      	movs	r1, #186	@ 0xba
 8003698:	480c      	ldr	r0, [pc, #48]	@ (80036cc <__multadd+0x8c>)
 800369a:	f000 fd2d 	bl	80040f8 <__assert_func>
 800369e:	6922      	ldr	r2, [r4, #16]
 80036a0:	f104 010c 	add.w	r1, r4, #12
 80036a4:	300c      	adds	r0, #12
 80036a6:	3202      	adds	r2, #2
 80036a8:	0092      	lsls	r2, r2, #2
 80036aa:	f000 fd17 	bl	80040dc <memcpy>
 80036ae:	4621      	mov	r1, r4
 80036b0:	4644      	mov	r4, r8
 80036b2:	4638      	mov	r0, r7
 80036b4:	f7ff ffa2 	bl	80035fc <_Bfree>
 80036b8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80036bc:	3501      	adds	r5, #1
 80036be:	615e      	str	r6, [r3, #20]
 80036c0:	6125      	str	r5, [r4, #16]
 80036c2:	4620      	mov	r0, r4
 80036c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80036c8:	08004846 	.word	0x08004846
 80036cc:	08004857 	.word	0x08004857

080036d0 <__hi0bits>:
 80036d0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80036d4:	4603      	mov	r3, r0
 80036d6:	bf36      	itet	cc
 80036d8:	0403      	lslcc	r3, r0, #16
 80036da:	2000      	movcs	r0, #0
 80036dc:	2010      	movcc	r0, #16
 80036de:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80036e2:	bf3c      	itt	cc
 80036e4:	021b      	lslcc	r3, r3, #8
 80036e6:	3008      	addcc	r0, #8
 80036e8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80036ec:	bf3c      	itt	cc
 80036ee:	011b      	lslcc	r3, r3, #4
 80036f0:	3004      	addcc	r0, #4
 80036f2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80036f6:	bf3c      	itt	cc
 80036f8:	009b      	lslcc	r3, r3, #2
 80036fa:	3002      	addcc	r0, #2
 80036fc:	2b00      	cmp	r3, #0
 80036fe:	db05      	blt.n	800370c <__hi0bits+0x3c>
 8003700:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003704:	f100 0001 	add.w	r0, r0, #1
 8003708:	bf08      	it	eq
 800370a:	2020      	moveq	r0, #32
 800370c:	4770      	bx	lr

0800370e <__lo0bits>:
 800370e:	6803      	ldr	r3, [r0, #0]
 8003710:	4602      	mov	r2, r0
 8003712:	f013 0007 	ands.w	r0, r3, #7
 8003716:	d00b      	beq.n	8003730 <__lo0bits+0x22>
 8003718:	07d9      	lsls	r1, r3, #31
 800371a:	d421      	bmi.n	8003760 <__lo0bits+0x52>
 800371c:	0798      	lsls	r0, r3, #30
 800371e:	bf47      	ittee	mi
 8003720:	085b      	lsrmi	r3, r3, #1
 8003722:	2001      	movmi	r0, #1
 8003724:	089b      	lsrpl	r3, r3, #2
 8003726:	2002      	movpl	r0, #2
 8003728:	bf4c      	ite	mi
 800372a:	6013      	strmi	r3, [r2, #0]
 800372c:	6013      	strpl	r3, [r2, #0]
 800372e:	4770      	bx	lr
 8003730:	b299      	uxth	r1, r3
 8003732:	b909      	cbnz	r1, 8003738 <__lo0bits+0x2a>
 8003734:	0c1b      	lsrs	r3, r3, #16
 8003736:	2010      	movs	r0, #16
 8003738:	b2d9      	uxtb	r1, r3
 800373a:	b909      	cbnz	r1, 8003740 <__lo0bits+0x32>
 800373c:	3008      	adds	r0, #8
 800373e:	0a1b      	lsrs	r3, r3, #8
 8003740:	0719      	lsls	r1, r3, #28
 8003742:	bf04      	itt	eq
 8003744:	091b      	lsreq	r3, r3, #4
 8003746:	3004      	addeq	r0, #4
 8003748:	0799      	lsls	r1, r3, #30
 800374a:	bf04      	itt	eq
 800374c:	089b      	lsreq	r3, r3, #2
 800374e:	3002      	addeq	r0, #2
 8003750:	07d9      	lsls	r1, r3, #31
 8003752:	d403      	bmi.n	800375c <__lo0bits+0x4e>
 8003754:	085b      	lsrs	r3, r3, #1
 8003756:	f100 0001 	add.w	r0, r0, #1
 800375a:	d003      	beq.n	8003764 <__lo0bits+0x56>
 800375c:	6013      	str	r3, [r2, #0]
 800375e:	4770      	bx	lr
 8003760:	2000      	movs	r0, #0
 8003762:	4770      	bx	lr
 8003764:	2020      	movs	r0, #32
 8003766:	4770      	bx	lr

08003768 <__i2b>:
 8003768:	b510      	push	{r4, lr}
 800376a:	460c      	mov	r4, r1
 800376c:	2101      	movs	r1, #1
 800376e:	f7ff ff05 	bl	800357c <_Balloc>
 8003772:	4602      	mov	r2, r0
 8003774:	b928      	cbnz	r0, 8003782 <__i2b+0x1a>
 8003776:	4b05      	ldr	r3, [pc, #20]	@ (800378c <__i2b+0x24>)
 8003778:	f240 1145 	movw	r1, #325	@ 0x145
 800377c:	4804      	ldr	r0, [pc, #16]	@ (8003790 <__i2b+0x28>)
 800377e:	f000 fcbb 	bl	80040f8 <__assert_func>
 8003782:	2301      	movs	r3, #1
 8003784:	6144      	str	r4, [r0, #20]
 8003786:	6103      	str	r3, [r0, #16]
 8003788:	bd10      	pop	{r4, pc}
 800378a:	bf00      	nop
 800378c:	08004846 	.word	0x08004846
 8003790:	08004857 	.word	0x08004857

08003794 <__multiply>:
 8003794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003798:	4617      	mov	r7, r2
 800379a:	690a      	ldr	r2, [r1, #16]
 800379c:	4689      	mov	r9, r1
 800379e:	b085      	sub	sp, #20
 80037a0:	693b      	ldr	r3, [r7, #16]
 80037a2:	429a      	cmp	r2, r3
 80037a4:	bfa2      	ittt	ge
 80037a6:	463b      	movge	r3, r7
 80037a8:	460f      	movge	r7, r1
 80037aa:	4699      	movge	r9, r3
 80037ac:	693d      	ldr	r5, [r7, #16]
 80037ae:	68bb      	ldr	r3, [r7, #8]
 80037b0:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80037b4:	6879      	ldr	r1, [r7, #4]
 80037b6:	eb05 060a 	add.w	r6, r5, sl
 80037ba:	42b3      	cmp	r3, r6
 80037bc:	bfb8      	it	lt
 80037be:	3101      	addlt	r1, #1
 80037c0:	f7ff fedc 	bl	800357c <_Balloc>
 80037c4:	b930      	cbnz	r0, 80037d4 <__multiply+0x40>
 80037c6:	4602      	mov	r2, r0
 80037c8:	4b42      	ldr	r3, [pc, #264]	@ (80038d4 <__multiply+0x140>)
 80037ca:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80037ce:	4842      	ldr	r0, [pc, #264]	@ (80038d8 <__multiply+0x144>)
 80037d0:	f000 fc92 	bl	80040f8 <__assert_func>
 80037d4:	f100 0414 	add.w	r4, r0, #20
 80037d8:	2200      	movs	r2, #0
 80037da:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 80037de:	4623      	mov	r3, r4
 80037e0:	4573      	cmp	r3, lr
 80037e2:	d320      	bcc.n	8003826 <__multiply+0x92>
 80037e4:	f107 0814 	add.w	r8, r7, #20
 80037e8:	f109 0114 	add.w	r1, r9, #20
 80037ec:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 80037f0:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 80037f4:	9302      	str	r3, [sp, #8]
 80037f6:	1beb      	subs	r3, r5, r7
 80037f8:	3715      	adds	r7, #21
 80037fa:	3b15      	subs	r3, #21
 80037fc:	f023 0303 	bic.w	r3, r3, #3
 8003800:	3304      	adds	r3, #4
 8003802:	42bd      	cmp	r5, r7
 8003804:	bf38      	it	cc
 8003806:	2304      	movcc	r3, #4
 8003808:	9301      	str	r3, [sp, #4]
 800380a:	9b02      	ldr	r3, [sp, #8]
 800380c:	9103      	str	r1, [sp, #12]
 800380e:	428b      	cmp	r3, r1
 8003810:	d80c      	bhi.n	800382c <__multiply+0x98>
 8003812:	2e00      	cmp	r6, #0
 8003814:	dd03      	ble.n	800381e <__multiply+0x8a>
 8003816:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800381a:	2b00      	cmp	r3, #0
 800381c:	d057      	beq.n	80038ce <__multiply+0x13a>
 800381e:	6106      	str	r6, [r0, #16]
 8003820:	b005      	add	sp, #20
 8003822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003826:	f843 2b04 	str.w	r2, [r3], #4
 800382a:	e7d9      	b.n	80037e0 <__multiply+0x4c>
 800382c:	f8b1 a000 	ldrh.w	sl, [r1]
 8003830:	f1ba 0f00 	cmp.w	sl, #0
 8003834:	d021      	beq.n	800387a <__multiply+0xe6>
 8003836:	46c4      	mov	ip, r8
 8003838:	46a1      	mov	r9, r4
 800383a:	2700      	movs	r7, #0
 800383c:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003840:	f8d9 3000 	ldr.w	r3, [r9]
 8003844:	fa1f fb82 	uxth.w	fp, r2
 8003848:	4565      	cmp	r5, ip
 800384a:	b29b      	uxth	r3, r3
 800384c:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8003850:	fb0a 330b 	mla	r3, sl, fp, r3
 8003854:	443b      	add	r3, r7
 8003856:	f8d9 7000 	ldr.w	r7, [r9]
 800385a:	ea4f 4717 	mov.w	r7, r7, lsr #16
 800385e:	fb0a 7202 	mla	r2, sl, r2, r7
 8003862:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8003866:	b29b      	uxth	r3, r3
 8003868:	ea4f 4712 	mov.w	r7, r2, lsr #16
 800386c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003870:	f849 3b04 	str.w	r3, [r9], #4
 8003874:	d8e2      	bhi.n	800383c <__multiply+0xa8>
 8003876:	9b01      	ldr	r3, [sp, #4]
 8003878:	50e7      	str	r7, [r4, r3]
 800387a:	9b03      	ldr	r3, [sp, #12]
 800387c:	3104      	adds	r1, #4
 800387e:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003882:	f1b9 0f00 	cmp.w	r9, #0
 8003886:	d020      	beq.n	80038ca <__multiply+0x136>
 8003888:	6823      	ldr	r3, [r4, #0]
 800388a:	4647      	mov	r7, r8
 800388c:	46a4      	mov	ip, r4
 800388e:	f04f 0a00 	mov.w	sl, #0
 8003892:	f8b7 b000 	ldrh.w	fp, [r7]
 8003896:	b29b      	uxth	r3, r3
 8003898:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800389c:	fb09 220b 	mla	r2, r9, fp, r2
 80038a0:	4452      	add	r2, sl
 80038a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80038a6:	f84c 3b04 	str.w	r3, [ip], #4
 80038aa:	f857 3b04 	ldr.w	r3, [r7], #4
 80038ae:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80038b2:	f8bc 3000 	ldrh.w	r3, [ip]
 80038b6:	42bd      	cmp	r5, r7
 80038b8:	fb09 330a 	mla	r3, r9, sl, r3
 80038bc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80038c0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80038c4:	d8e5      	bhi.n	8003892 <__multiply+0xfe>
 80038c6:	9a01      	ldr	r2, [sp, #4]
 80038c8:	50a3      	str	r3, [r4, r2]
 80038ca:	3404      	adds	r4, #4
 80038cc:	e79d      	b.n	800380a <__multiply+0x76>
 80038ce:	3e01      	subs	r6, #1
 80038d0:	e79f      	b.n	8003812 <__multiply+0x7e>
 80038d2:	bf00      	nop
 80038d4:	08004846 	.word	0x08004846
 80038d8:	08004857 	.word	0x08004857

080038dc <__pow5mult>:
 80038dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80038e0:	4615      	mov	r5, r2
 80038e2:	f012 0203 	ands.w	r2, r2, #3
 80038e6:	4607      	mov	r7, r0
 80038e8:	460e      	mov	r6, r1
 80038ea:	d007      	beq.n	80038fc <__pow5mult+0x20>
 80038ec:	3a01      	subs	r2, #1
 80038ee:	4c25      	ldr	r4, [pc, #148]	@ (8003984 <__pow5mult+0xa8>)
 80038f0:	2300      	movs	r3, #0
 80038f2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80038f6:	f7ff fea3 	bl	8003640 <__multadd>
 80038fa:	4606      	mov	r6, r0
 80038fc:	10ad      	asrs	r5, r5, #2
 80038fe:	d03d      	beq.n	800397c <__pow5mult+0xa0>
 8003900:	69fc      	ldr	r4, [r7, #28]
 8003902:	b97c      	cbnz	r4, 8003924 <__pow5mult+0x48>
 8003904:	2010      	movs	r0, #16
 8003906:	f7ff fd83 	bl	8003410 <malloc>
 800390a:	4602      	mov	r2, r0
 800390c:	61f8      	str	r0, [r7, #28]
 800390e:	b928      	cbnz	r0, 800391c <__pow5mult+0x40>
 8003910:	4b1d      	ldr	r3, [pc, #116]	@ (8003988 <__pow5mult+0xac>)
 8003912:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003916:	481d      	ldr	r0, [pc, #116]	@ (800398c <__pow5mult+0xb0>)
 8003918:	f000 fbee 	bl	80040f8 <__assert_func>
 800391c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003920:	6004      	str	r4, [r0, #0]
 8003922:	60c4      	str	r4, [r0, #12]
 8003924:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003928:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800392c:	b94c      	cbnz	r4, 8003942 <__pow5mult+0x66>
 800392e:	f240 2171 	movw	r1, #625	@ 0x271
 8003932:	4638      	mov	r0, r7
 8003934:	f7ff ff18 	bl	8003768 <__i2b>
 8003938:	2300      	movs	r3, #0
 800393a:	4604      	mov	r4, r0
 800393c:	f8c8 0008 	str.w	r0, [r8, #8]
 8003940:	6003      	str	r3, [r0, #0]
 8003942:	f04f 0900 	mov.w	r9, #0
 8003946:	07eb      	lsls	r3, r5, #31
 8003948:	d50a      	bpl.n	8003960 <__pow5mult+0x84>
 800394a:	4631      	mov	r1, r6
 800394c:	4622      	mov	r2, r4
 800394e:	4638      	mov	r0, r7
 8003950:	f7ff ff20 	bl	8003794 <__multiply>
 8003954:	4680      	mov	r8, r0
 8003956:	4631      	mov	r1, r6
 8003958:	4638      	mov	r0, r7
 800395a:	4646      	mov	r6, r8
 800395c:	f7ff fe4e 	bl	80035fc <_Bfree>
 8003960:	106d      	asrs	r5, r5, #1
 8003962:	d00b      	beq.n	800397c <__pow5mult+0xa0>
 8003964:	6820      	ldr	r0, [r4, #0]
 8003966:	b938      	cbnz	r0, 8003978 <__pow5mult+0x9c>
 8003968:	4622      	mov	r2, r4
 800396a:	4621      	mov	r1, r4
 800396c:	4638      	mov	r0, r7
 800396e:	f7ff ff11 	bl	8003794 <__multiply>
 8003972:	6020      	str	r0, [r4, #0]
 8003974:	f8c0 9000 	str.w	r9, [r0]
 8003978:	4604      	mov	r4, r0
 800397a:	e7e4      	b.n	8003946 <__pow5mult+0x6a>
 800397c:	4630      	mov	r0, r6
 800397e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003982:	bf00      	nop
 8003984:	08004908 	.word	0x08004908
 8003988:	080047d7 	.word	0x080047d7
 800398c:	08004857 	.word	0x08004857

08003990 <__lshift>:
 8003990:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003994:	460c      	mov	r4, r1
 8003996:	4607      	mov	r7, r0
 8003998:	4691      	mov	r9, r2
 800399a:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800399e:	6923      	ldr	r3, [r4, #16]
 80039a0:	6849      	ldr	r1, [r1, #4]
 80039a2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80039a6:	68a3      	ldr	r3, [r4, #8]
 80039a8:	f108 0601 	add.w	r6, r8, #1
 80039ac:	42b3      	cmp	r3, r6
 80039ae:	db0b      	blt.n	80039c8 <__lshift+0x38>
 80039b0:	4638      	mov	r0, r7
 80039b2:	f7ff fde3 	bl	800357c <_Balloc>
 80039b6:	4605      	mov	r5, r0
 80039b8:	b948      	cbnz	r0, 80039ce <__lshift+0x3e>
 80039ba:	4602      	mov	r2, r0
 80039bc:	4b28      	ldr	r3, [pc, #160]	@ (8003a60 <__lshift+0xd0>)
 80039be:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80039c2:	4828      	ldr	r0, [pc, #160]	@ (8003a64 <__lshift+0xd4>)
 80039c4:	f000 fb98 	bl	80040f8 <__assert_func>
 80039c8:	3101      	adds	r1, #1
 80039ca:	005b      	lsls	r3, r3, #1
 80039cc:	e7ee      	b.n	80039ac <__lshift+0x1c>
 80039ce:	2300      	movs	r3, #0
 80039d0:	f100 0114 	add.w	r1, r0, #20
 80039d4:	f100 0210 	add.w	r2, r0, #16
 80039d8:	4618      	mov	r0, r3
 80039da:	4553      	cmp	r3, sl
 80039dc:	db33      	blt.n	8003a46 <__lshift+0xb6>
 80039de:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80039e2:	f104 0314 	add.w	r3, r4, #20
 80039e6:	6920      	ldr	r0, [r4, #16]
 80039e8:	f019 091f 	ands.w	r9, r9, #31
 80039ec:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80039f0:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80039f4:	d02b      	beq.n	8003a4e <__lshift+0xbe>
 80039f6:	f1c9 0e20 	rsb	lr, r9, #32
 80039fa:	468a      	mov	sl, r1
 80039fc:	2200      	movs	r2, #0
 80039fe:	6818      	ldr	r0, [r3, #0]
 8003a00:	fa00 f009 	lsl.w	r0, r0, r9
 8003a04:	4310      	orrs	r0, r2
 8003a06:	f84a 0b04 	str.w	r0, [sl], #4
 8003a0a:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a0e:	459c      	cmp	ip, r3
 8003a10:	fa22 f20e 	lsr.w	r2, r2, lr
 8003a14:	d8f3      	bhi.n	80039fe <__lshift+0x6e>
 8003a16:	ebac 0304 	sub.w	r3, ip, r4
 8003a1a:	f104 0015 	add.w	r0, r4, #21
 8003a1e:	3b15      	subs	r3, #21
 8003a20:	f023 0303 	bic.w	r3, r3, #3
 8003a24:	3304      	adds	r3, #4
 8003a26:	4560      	cmp	r0, ip
 8003a28:	bf88      	it	hi
 8003a2a:	2304      	movhi	r3, #4
 8003a2c:	50ca      	str	r2, [r1, r3]
 8003a2e:	b10a      	cbz	r2, 8003a34 <__lshift+0xa4>
 8003a30:	f108 0602 	add.w	r6, r8, #2
 8003a34:	3e01      	subs	r6, #1
 8003a36:	4638      	mov	r0, r7
 8003a38:	4621      	mov	r1, r4
 8003a3a:	612e      	str	r6, [r5, #16]
 8003a3c:	f7ff fdde 	bl	80035fc <_Bfree>
 8003a40:	4628      	mov	r0, r5
 8003a42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a46:	3301      	adds	r3, #1
 8003a48:	f842 0f04 	str.w	r0, [r2, #4]!
 8003a4c:	e7c5      	b.n	80039da <__lshift+0x4a>
 8003a4e:	3904      	subs	r1, #4
 8003a50:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a54:	459c      	cmp	ip, r3
 8003a56:	f841 2f04 	str.w	r2, [r1, #4]!
 8003a5a:	d8f9      	bhi.n	8003a50 <__lshift+0xc0>
 8003a5c:	e7ea      	b.n	8003a34 <__lshift+0xa4>
 8003a5e:	bf00      	nop
 8003a60:	08004846 	.word	0x08004846
 8003a64:	08004857 	.word	0x08004857

08003a68 <__mcmp>:
 8003a68:	4603      	mov	r3, r0
 8003a6a:	690a      	ldr	r2, [r1, #16]
 8003a6c:	6900      	ldr	r0, [r0, #16]
 8003a6e:	1a80      	subs	r0, r0, r2
 8003a70:	b530      	push	{r4, r5, lr}
 8003a72:	d10e      	bne.n	8003a92 <__mcmp+0x2a>
 8003a74:	3314      	adds	r3, #20
 8003a76:	3114      	adds	r1, #20
 8003a78:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003a7c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003a80:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003a84:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003a88:	4295      	cmp	r5, r2
 8003a8a:	d003      	beq.n	8003a94 <__mcmp+0x2c>
 8003a8c:	d205      	bcs.n	8003a9a <__mcmp+0x32>
 8003a8e:	f04f 30ff 	mov.w	r0, #4294967295
 8003a92:	bd30      	pop	{r4, r5, pc}
 8003a94:	42a3      	cmp	r3, r4
 8003a96:	d3f3      	bcc.n	8003a80 <__mcmp+0x18>
 8003a98:	e7fb      	b.n	8003a92 <__mcmp+0x2a>
 8003a9a:	2001      	movs	r0, #1
 8003a9c:	e7f9      	b.n	8003a92 <__mcmp+0x2a>
	...

08003aa0 <__mdiff>:
 8003aa0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003aa4:	4689      	mov	r9, r1
 8003aa6:	4606      	mov	r6, r0
 8003aa8:	4611      	mov	r1, r2
 8003aaa:	4614      	mov	r4, r2
 8003aac:	4648      	mov	r0, r9
 8003aae:	f7ff ffdb 	bl	8003a68 <__mcmp>
 8003ab2:	1e05      	subs	r5, r0, #0
 8003ab4:	d112      	bne.n	8003adc <__mdiff+0x3c>
 8003ab6:	4629      	mov	r1, r5
 8003ab8:	4630      	mov	r0, r6
 8003aba:	f7ff fd5f 	bl	800357c <_Balloc>
 8003abe:	4602      	mov	r2, r0
 8003ac0:	b928      	cbnz	r0, 8003ace <__mdiff+0x2e>
 8003ac2:	4b41      	ldr	r3, [pc, #260]	@ (8003bc8 <__mdiff+0x128>)
 8003ac4:	f240 2137 	movw	r1, #567	@ 0x237
 8003ac8:	4840      	ldr	r0, [pc, #256]	@ (8003bcc <__mdiff+0x12c>)
 8003aca:	f000 fb15 	bl	80040f8 <__assert_func>
 8003ace:	2301      	movs	r3, #1
 8003ad0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003ad4:	4610      	mov	r0, r2
 8003ad6:	b003      	add	sp, #12
 8003ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003adc:	bfbc      	itt	lt
 8003ade:	464b      	movlt	r3, r9
 8003ae0:	46a1      	movlt	r9, r4
 8003ae2:	4630      	mov	r0, r6
 8003ae4:	bfb8      	it	lt
 8003ae6:	2501      	movlt	r5, #1
 8003ae8:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003aec:	bfb4      	ite	lt
 8003aee:	461c      	movlt	r4, r3
 8003af0:	2500      	movge	r5, #0
 8003af2:	f7ff fd43 	bl	800357c <_Balloc>
 8003af6:	4602      	mov	r2, r0
 8003af8:	b918      	cbnz	r0, 8003b02 <__mdiff+0x62>
 8003afa:	4b33      	ldr	r3, [pc, #204]	@ (8003bc8 <__mdiff+0x128>)
 8003afc:	f240 2145 	movw	r1, #581	@ 0x245
 8003b00:	e7e2      	b.n	8003ac8 <__mdiff+0x28>
 8003b02:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003b06:	f104 0e14 	add.w	lr, r4, #20
 8003b0a:	6926      	ldr	r6, [r4, #16]
 8003b0c:	f100 0b14 	add.w	fp, r0, #20
 8003b10:	60c5      	str	r5, [r0, #12]
 8003b12:	f109 0514 	add.w	r5, r9, #20
 8003b16:	f109 0310 	add.w	r3, r9, #16
 8003b1a:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003b1e:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003b22:	46d9      	mov	r9, fp
 8003b24:	f04f 0c00 	mov.w	ip, #0
 8003b28:	9301      	str	r3, [sp, #4]
 8003b2a:	9b01      	ldr	r3, [sp, #4]
 8003b2c:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003b30:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003b34:	4576      	cmp	r6, lr
 8003b36:	9301      	str	r3, [sp, #4]
 8003b38:	fa1f f38a 	uxth.w	r3, sl
 8003b3c:	4619      	mov	r1, r3
 8003b3e:	b283      	uxth	r3, r0
 8003b40:	ea4f 4010 	mov.w	r0, r0, lsr #16
 8003b44:	eba1 0303 	sub.w	r3, r1, r3
 8003b48:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003b4c:	4463      	add	r3, ip
 8003b4e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003b52:	b29b      	uxth	r3, r3
 8003b54:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003b58:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003b5c:	f849 3b04 	str.w	r3, [r9], #4
 8003b60:	d8e3      	bhi.n	8003b2a <__mdiff+0x8a>
 8003b62:	1b33      	subs	r3, r6, r4
 8003b64:	3415      	adds	r4, #21
 8003b66:	3b15      	subs	r3, #21
 8003b68:	f023 0303 	bic.w	r3, r3, #3
 8003b6c:	3304      	adds	r3, #4
 8003b6e:	42a6      	cmp	r6, r4
 8003b70:	bf38      	it	cc
 8003b72:	2304      	movcc	r3, #4
 8003b74:	441d      	add	r5, r3
 8003b76:	445b      	add	r3, fp
 8003b78:	462c      	mov	r4, r5
 8003b7a:	461e      	mov	r6, r3
 8003b7c:	4544      	cmp	r4, r8
 8003b7e:	d30e      	bcc.n	8003b9e <__mdiff+0xfe>
 8003b80:	f108 0103 	add.w	r1, r8, #3
 8003b84:	1b49      	subs	r1, r1, r5
 8003b86:	3d03      	subs	r5, #3
 8003b88:	f021 0103 	bic.w	r1, r1, #3
 8003b8c:	45a8      	cmp	r8, r5
 8003b8e:	bf38      	it	cc
 8003b90:	2100      	movcc	r1, #0
 8003b92:	440b      	add	r3, r1
 8003b94:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003b98:	b199      	cbz	r1, 8003bc2 <__mdiff+0x122>
 8003b9a:	6117      	str	r7, [r2, #16]
 8003b9c:	e79a      	b.n	8003ad4 <__mdiff+0x34>
 8003b9e:	f854 1b04 	ldr.w	r1, [r4], #4
 8003ba2:	46e6      	mov	lr, ip
 8003ba4:	fa1f fc81 	uxth.w	ip, r1
 8003ba8:	0c08      	lsrs	r0, r1, #16
 8003baa:	4471      	add	r1, lr
 8003bac:	44f4      	add	ip, lr
 8003bae:	b289      	uxth	r1, r1
 8003bb0:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003bb4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003bb8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003bbc:	f846 1b04 	str.w	r1, [r6], #4
 8003bc0:	e7dc      	b.n	8003b7c <__mdiff+0xdc>
 8003bc2:	3f01      	subs	r7, #1
 8003bc4:	e7e6      	b.n	8003b94 <__mdiff+0xf4>
 8003bc6:	bf00      	nop
 8003bc8:	08004846 	.word	0x08004846
 8003bcc:	08004857 	.word	0x08004857

08003bd0 <__d2b>:
 8003bd0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003bd4:	460f      	mov	r7, r1
 8003bd6:	2101      	movs	r1, #1
 8003bd8:	4616      	mov	r6, r2
 8003bda:	ec59 8b10 	vmov	r8, r9, d0
 8003bde:	f7ff fccd 	bl	800357c <_Balloc>
 8003be2:	4604      	mov	r4, r0
 8003be4:	b930      	cbnz	r0, 8003bf4 <__d2b+0x24>
 8003be6:	4602      	mov	r2, r0
 8003be8:	4b23      	ldr	r3, [pc, #140]	@ (8003c78 <__d2b+0xa8>)
 8003bea:	f240 310f 	movw	r1, #783	@ 0x30f
 8003bee:	4823      	ldr	r0, [pc, #140]	@ (8003c7c <__d2b+0xac>)
 8003bf0:	f000 fa82 	bl	80040f8 <__assert_func>
 8003bf4:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003bf8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003bfc:	b10d      	cbz	r5, 8003c02 <__d2b+0x32>
 8003bfe:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003c02:	9301      	str	r3, [sp, #4]
 8003c04:	f1b8 0300 	subs.w	r3, r8, #0
 8003c08:	d023      	beq.n	8003c52 <__d2b+0x82>
 8003c0a:	4668      	mov	r0, sp
 8003c0c:	9300      	str	r3, [sp, #0]
 8003c0e:	f7ff fd7e 	bl	800370e <__lo0bits>
 8003c12:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003c16:	b1d0      	cbz	r0, 8003c4e <__d2b+0x7e>
 8003c18:	f1c0 0320 	rsb	r3, r0, #32
 8003c1c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c20:	40c2      	lsrs	r2, r0
 8003c22:	430b      	orrs	r3, r1
 8003c24:	9201      	str	r2, [sp, #4]
 8003c26:	6163      	str	r3, [r4, #20]
 8003c28:	9b01      	ldr	r3, [sp, #4]
 8003c2a:	2b00      	cmp	r3, #0
 8003c2c:	61a3      	str	r3, [r4, #24]
 8003c2e:	bf0c      	ite	eq
 8003c30:	2201      	moveq	r2, #1
 8003c32:	2202      	movne	r2, #2
 8003c34:	6122      	str	r2, [r4, #16]
 8003c36:	b1a5      	cbz	r5, 8003c62 <__d2b+0x92>
 8003c38:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003c3c:	4405      	add	r5, r0
 8003c3e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003c42:	603d      	str	r5, [r7, #0]
 8003c44:	6030      	str	r0, [r6, #0]
 8003c46:	4620      	mov	r0, r4
 8003c48:	b003      	add	sp, #12
 8003c4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003c4e:	6161      	str	r1, [r4, #20]
 8003c50:	e7ea      	b.n	8003c28 <__d2b+0x58>
 8003c52:	a801      	add	r0, sp, #4
 8003c54:	f7ff fd5b 	bl	800370e <__lo0bits>
 8003c58:	9b01      	ldr	r3, [sp, #4]
 8003c5a:	3020      	adds	r0, #32
 8003c5c:	2201      	movs	r2, #1
 8003c5e:	6163      	str	r3, [r4, #20]
 8003c60:	e7e8      	b.n	8003c34 <__d2b+0x64>
 8003c62:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003c66:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003c6a:	6038      	str	r0, [r7, #0]
 8003c6c:	6918      	ldr	r0, [r3, #16]
 8003c6e:	f7ff fd2f 	bl	80036d0 <__hi0bits>
 8003c72:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003c76:	e7e5      	b.n	8003c44 <__d2b+0x74>
 8003c78:	08004846 	.word	0x08004846
 8003c7c:	08004857 	.word	0x08004857

08003c80 <__ssputs_r>:
 8003c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c84:	461f      	mov	r7, r3
 8003c86:	688e      	ldr	r6, [r1, #8]
 8003c88:	4682      	mov	sl, r0
 8003c8a:	460c      	mov	r4, r1
 8003c8c:	42be      	cmp	r6, r7
 8003c8e:	4690      	mov	r8, r2
 8003c90:	680b      	ldr	r3, [r1, #0]
 8003c92:	d82d      	bhi.n	8003cf0 <__ssputs_r+0x70>
 8003c94:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003c98:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003c9c:	d026      	beq.n	8003cec <__ssputs_r+0x6c>
 8003c9e:	6965      	ldr	r5, [r4, #20]
 8003ca0:	6909      	ldr	r1, [r1, #16]
 8003ca2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003ca6:	eba3 0901 	sub.w	r9, r3, r1
 8003caa:	1c7b      	adds	r3, r7, #1
 8003cac:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003cb0:	444b      	add	r3, r9
 8003cb2:	106d      	asrs	r5, r5, #1
 8003cb4:	429d      	cmp	r5, r3
 8003cb6:	bf38      	it	cc
 8003cb8:	461d      	movcc	r5, r3
 8003cba:	0553      	lsls	r3, r2, #21
 8003cbc:	d527      	bpl.n	8003d0e <__ssputs_r+0x8e>
 8003cbe:	4629      	mov	r1, r5
 8003cc0:	f7ff fbd0 	bl	8003464 <_malloc_r>
 8003cc4:	4606      	mov	r6, r0
 8003cc6:	b360      	cbz	r0, 8003d22 <__ssputs_r+0xa2>
 8003cc8:	464a      	mov	r2, r9
 8003cca:	6921      	ldr	r1, [r4, #16]
 8003ccc:	f000 fa06 	bl	80040dc <memcpy>
 8003cd0:	89a3      	ldrh	r3, [r4, #12]
 8003cd2:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003cd6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003cda:	81a3      	strh	r3, [r4, #12]
 8003cdc:	6126      	str	r6, [r4, #16]
 8003cde:	444e      	add	r6, r9
 8003ce0:	6165      	str	r5, [r4, #20]
 8003ce2:	eba5 0509 	sub.w	r5, r5, r9
 8003ce6:	6026      	str	r6, [r4, #0]
 8003ce8:	463e      	mov	r6, r7
 8003cea:	60a5      	str	r5, [r4, #8]
 8003cec:	42be      	cmp	r6, r7
 8003cee:	d900      	bls.n	8003cf2 <__ssputs_r+0x72>
 8003cf0:	463e      	mov	r6, r7
 8003cf2:	4632      	mov	r2, r6
 8003cf4:	4641      	mov	r1, r8
 8003cf6:	6820      	ldr	r0, [r4, #0]
 8003cf8:	f000 f9c6 	bl	8004088 <memmove>
 8003cfc:	68a3      	ldr	r3, [r4, #8]
 8003cfe:	2000      	movs	r0, #0
 8003d00:	1b9b      	subs	r3, r3, r6
 8003d02:	60a3      	str	r3, [r4, #8]
 8003d04:	6823      	ldr	r3, [r4, #0]
 8003d06:	4433      	add	r3, r6
 8003d08:	6023      	str	r3, [r4, #0]
 8003d0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d0e:	462a      	mov	r2, r5
 8003d10:	f000 fa36 	bl	8004180 <_realloc_r>
 8003d14:	4606      	mov	r6, r0
 8003d16:	2800      	cmp	r0, #0
 8003d18:	d1e0      	bne.n	8003cdc <__ssputs_r+0x5c>
 8003d1a:	6921      	ldr	r1, [r4, #16]
 8003d1c:	4650      	mov	r0, sl
 8003d1e:	f7ff fb2d 	bl	800337c <_free_r>
 8003d22:	230c      	movs	r3, #12
 8003d24:	f04f 30ff 	mov.w	r0, #4294967295
 8003d28:	f8ca 3000 	str.w	r3, [sl]
 8003d2c:	89a3      	ldrh	r3, [r4, #12]
 8003d2e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003d32:	81a3      	strh	r3, [r4, #12]
 8003d34:	e7e9      	b.n	8003d0a <__ssputs_r+0x8a>
	...

08003d38 <_svfiprintf_r>:
 8003d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d3c:	4698      	mov	r8, r3
 8003d3e:	898b      	ldrh	r3, [r1, #12]
 8003d40:	b09d      	sub	sp, #116	@ 0x74
 8003d42:	4607      	mov	r7, r0
 8003d44:	061b      	lsls	r3, r3, #24
 8003d46:	460d      	mov	r5, r1
 8003d48:	4614      	mov	r4, r2
 8003d4a:	d510      	bpl.n	8003d6e <_svfiprintf_r+0x36>
 8003d4c:	690b      	ldr	r3, [r1, #16]
 8003d4e:	b973      	cbnz	r3, 8003d6e <_svfiprintf_r+0x36>
 8003d50:	2140      	movs	r1, #64	@ 0x40
 8003d52:	f7ff fb87 	bl	8003464 <_malloc_r>
 8003d56:	6028      	str	r0, [r5, #0]
 8003d58:	6128      	str	r0, [r5, #16]
 8003d5a:	b930      	cbnz	r0, 8003d6a <_svfiprintf_r+0x32>
 8003d5c:	230c      	movs	r3, #12
 8003d5e:	603b      	str	r3, [r7, #0]
 8003d60:	f04f 30ff 	mov.w	r0, #4294967295
 8003d64:	b01d      	add	sp, #116	@ 0x74
 8003d66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d6a:	2340      	movs	r3, #64	@ 0x40
 8003d6c:	616b      	str	r3, [r5, #20]
 8003d6e:	2300      	movs	r3, #0
 8003d70:	f8cd 800c 	str.w	r8, [sp, #12]
 8003d74:	f04f 0901 	mov.w	r9, #1
 8003d78:	f8df 81a0 	ldr.w	r8, [pc, #416]	@ 8003f1c <_svfiprintf_r+0x1e4>
 8003d7c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003d7e:	2320      	movs	r3, #32
 8003d80:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003d84:	2330      	movs	r3, #48	@ 0x30
 8003d86:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003d8a:	4623      	mov	r3, r4
 8003d8c:	469a      	mov	sl, r3
 8003d8e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003d92:	b10a      	cbz	r2, 8003d98 <_svfiprintf_r+0x60>
 8003d94:	2a25      	cmp	r2, #37	@ 0x25
 8003d96:	d1f9      	bne.n	8003d8c <_svfiprintf_r+0x54>
 8003d98:	ebba 0b04 	subs.w	fp, sl, r4
 8003d9c:	d00b      	beq.n	8003db6 <_svfiprintf_r+0x7e>
 8003d9e:	465b      	mov	r3, fp
 8003da0:	4622      	mov	r2, r4
 8003da2:	4629      	mov	r1, r5
 8003da4:	4638      	mov	r0, r7
 8003da6:	f7ff ff6b 	bl	8003c80 <__ssputs_r>
 8003daa:	3001      	adds	r0, #1
 8003dac:	f000 80a7 	beq.w	8003efe <_svfiprintf_r+0x1c6>
 8003db0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003db2:	445a      	add	r2, fp
 8003db4:	9209      	str	r2, [sp, #36]	@ 0x24
 8003db6:	f89a 3000 	ldrb.w	r3, [sl]
 8003dba:	2b00      	cmp	r3, #0
 8003dbc:	f000 809f 	beq.w	8003efe <_svfiprintf_r+0x1c6>
 8003dc0:	2300      	movs	r3, #0
 8003dc2:	f04f 32ff 	mov.w	r2, #4294967295
 8003dc6:	f10a 0a01 	add.w	sl, sl, #1
 8003dca:	9304      	str	r3, [sp, #16]
 8003dcc:	9307      	str	r3, [sp, #28]
 8003dce:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003dd2:	931a      	str	r3, [sp, #104]	@ 0x68
 8003dd4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003dd8:	4654      	mov	r4, sl
 8003dda:	2205      	movs	r2, #5
 8003ddc:	484f      	ldr	r0, [pc, #316]	@ (8003f1c <_svfiprintf_r+0x1e4>)
 8003dde:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003de2:	f7fe fc5c 	bl	800269e <memchr>
 8003de6:	9a04      	ldr	r2, [sp, #16]
 8003de8:	b9d8      	cbnz	r0, 8003e22 <_svfiprintf_r+0xea>
 8003dea:	06d0      	lsls	r0, r2, #27
 8003dec:	bf44      	itt	mi
 8003dee:	2320      	movmi	r3, #32
 8003df0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003df4:	0711      	lsls	r1, r2, #28
 8003df6:	bf44      	itt	mi
 8003df8:	232b      	movmi	r3, #43	@ 0x2b
 8003dfa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003dfe:	f89a 3000 	ldrb.w	r3, [sl]
 8003e02:	2b2a      	cmp	r3, #42	@ 0x2a
 8003e04:	d015      	beq.n	8003e32 <_svfiprintf_r+0xfa>
 8003e06:	9a07      	ldr	r2, [sp, #28]
 8003e08:	4654      	mov	r4, sl
 8003e0a:	2000      	movs	r0, #0
 8003e0c:	f04f 0c0a 	mov.w	ip, #10
 8003e10:	4621      	mov	r1, r4
 8003e12:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003e16:	3b30      	subs	r3, #48	@ 0x30
 8003e18:	2b09      	cmp	r3, #9
 8003e1a:	d94b      	bls.n	8003eb4 <_svfiprintf_r+0x17c>
 8003e1c:	b1b0      	cbz	r0, 8003e4c <_svfiprintf_r+0x114>
 8003e1e:	9207      	str	r2, [sp, #28]
 8003e20:	e014      	b.n	8003e4c <_svfiprintf_r+0x114>
 8003e22:	eba0 0308 	sub.w	r3, r0, r8
 8003e26:	46a2      	mov	sl, r4
 8003e28:	fa09 f303 	lsl.w	r3, r9, r3
 8003e2c:	4313      	orrs	r3, r2
 8003e2e:	9304      	str	r3, [sp, #16]
 8003e30:	e7d2      	b.n	8003dd8 <_svfiprintf_r+0xa0>
 8003e32:	9b03      	ldr	r3, [sp, #12]
 8003e34:	1d19      	adds	r1, r3, #4
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	9103      	str	r1, [sp, #12]
 8003e3c:	bfbb      	ittet	lt
 8003e3e:	425b      	neglt	r3, r3
 8003e40:	f042 0202 	orrlt.w	r2, r2, #2
 8003e44:	9307      	strge	r3, [sp, #28]
 8003e46:	9307      	strlt	r3, [sp, #28]
 8003e48:	bfb8      	it	lt
 8003e4a:	9204      	strlt	r2, [sp, #16]
 8003e4c:	7823      	ldrb	r3, [r4, #0]
 8003e4e:	2b2e      	cmp	r3, #46	@ 0x2e
 8003e50:	d10a      	bne.n	8003e68 <_svfiprintf_r+0x130>
 8003e52:	7863      	ldrb	r3, [r4, #1]
 8003e54:	2b2a      	cmp	r3, #42	@ 0x2a
 8003e56:	d132      	bne.n	8003ebe <_svfiprintf_r+0x186>
 8003e58:	9b03      	ldr	r3, [sp, #12]
 8003e5a:	3402      	adds	r4, #2
 8003e5c:	1d1a      	adds	r2, r3, #4
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003e64:	9203      	str	r2, [sp, #12]
 8003e66:	9305      	str	r3, [sp, #20]
 8003e68:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003f2c <_svfiprintf_r+0x1f4>
 8003e6c:	2203      	movs	r2, #3
 8003e6e:	7821      	ldrb	r1, [r4, #0]
 8003e70:	4650      	mov	r0, sl
 8003e72:	f7fe fc14 	bl	800269e <memchr>
 8003e76:	b138      	cbz	r0, 8003e88 <_svfiprintf_r+0x150>
 8003e78:	eba0 000a 	sub.w	r0, r0, sl
 8003e7c:	2240      	movs	r2, #64	@ 0x40
 8003e7e:	9b04      	ldr	r3, [sp, #16]
 8003e80:	3401      	adds	r4, #1
 8003e82:	4082      	lsls	r2, r0
 8003e84:	4313      	orrs	r3, r2
 8003e86:	9304      	str	r3, [sp, #16]
 8003e88:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e8c:	2206      	movs	r2, #6
 8003e8e:	4824      	ldr	r0, [pc, #144]	@ (8003f20 <_svfiprintf_r+0x1e8>)
 8003e90:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003e94:	f7fe fc03 	bl	800269e <memchr>
 8003e98:	2800      	cmp	r0, #0
 8003e9a:	d036      	beq.n	8003f0a <_svfiprintf_r+0x1d2>
 8003e9c:	4b21      	ldr	r3, [pc, #132]	@ (8003f24 <_svfiprintf_r+0x1ec>)
 8003e9e:	bb1b      	cbnz	r3, 8003ee8 <_svfiprintf_r+0x1b0>
 8003ea0:	9b03      	ldr	r3, [sp, #12]
 8003ea2:	3307      	adds	r3, #7
 8003ea4:	f023 0307 	bic.w	r3, r3, #7
 8003ea8:	3308      	adds	r3, #8
 8003eaa:	9303      	str	r3, [sp, #12]
 8003eac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003eae:	4433      	add	r3, r6
 8003eb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8003eb2:	e76a      	b.n	8003d8a <_svfiprintf_r+0x52>
 8003eb4:	fb0c 3202 	mla	r2, ip, r2, r3
 8003eb8:	460c      	mov	r4, r1
 8003eba:	2001      	movs	r0, #1
 8003ebc:	e7a8      	b.n	8003e10 <_svfiprintf_r+0xd8>
 8003ebe:	2300      	movs	r3, #0
 8003ec0:	3401      	adds	r4, #1
 8003ec2:	f04f 0c0a 	mov.w	ip, #10
 8003ec6:	4619      	mov	r1, r3
 8003ec8:	9305      	str	r3, [sp, #20]
 8003eca:	4620      	mov	r0, r4
 8003ecc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003ed0:	3a30      	subs	r2, #48	@ 0x30
 8003ed2:	2a09      	cmp	r2, #9
 8003ed4:	d903      	bls.n	8003ede <_svfiprintf_r+0x1a6>
 8003ed6:	2b00      	cmp	r3, #0
 8003ed8:	d0c6      	beq.n	8003e68 <_svfiprintf_r+0x130>
 8003eda:	9105      	str	r1, [sp, #20]
 8003edc:	e7c4      	b.n	8003e68 <_svfiprintf_r+0x130>
 8003ede:	fb0c 2101 	mla	r1, ip, r1, r2
 8003ee2:	4604      	mov	r4, r0
 8003ee4:	2301      	movs	r3, #1
 8003ee6:	e7f0      	b.n	8003eca <_svfiprintf_r+0x192>
 8003ee8:	ab03      	add	r3, sp, #12
 8003eea:	462a      	mov	r2, r5
 8003eec:	a904      	add	r1, sp, #16
 8003eee:	4638      	mov	r0, r7
 8003ef0:	9300      	str	r3, [sp, #0]
 8003ef2:	4b0d      	ldr	r3, [pc, #52]	@ (8003f28 <_svfiprintf_r+0x1f0>)
 8003ef4:	f7fd fe64 	bl	8001bc0 <_printf_float>
 8003ef8:	1c42      	adds	r2, r0, #1
 8003efa:	4606      	mov	r6, r0
 8003efc:	d1d6      	bne.n	8003eac <_svfiprintf_r+0x174>
 8003efe:	89ab      	ldrh	r3, [r5, #12]
 8003f00:	065b      	lsls	r3, r3, #25
 8003f02:	f53f af2d 	bmi.w	8003d60 <_svfiprintf_r+0x28>
 8003f06:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003f08:	e72c      	b.n	8003d64 <_svfiprintf_r+0x2c>
 8003f0a:	ab03      	add	r3, sp, #12
 8003f0c:	462a      	mov	r2, r5
 8003f0e:	a904      	add	r1, sp, #16
 8003f10:	4638      	mov	r0, r7
 8003f12:	9300      	str	r3, [sp, #0]
 8003f14:	4b04      	ldr	r3, [pc, #16]	@ (8003f28 <_svfiprintf_r+0x1f0>)
 8003f16:	f7fe f8ef 	bl	80020f8 <_printf_i>
 8003f1a:	e7ed      	b.n	8003ef8 <_svfiprintf_r+0x1c0>
 8003f1c:	080048b0 	.word	0x080048b0
 8003f20:	080048ba 	.word	0x080048ba
 8003f24:	08001bc1 	.word	0x08001bc1
 8003f28:	08003c81 	.word	0x08003c81
 8003f2c:	080048b6 	.word	0x080048b6

08003f30 <__sflush_r>:
 8003f30:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003f34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f38:	0716      	lsls	r6, r2, #28
 8003f3a:	4605      	mov	r5, r0
 8003f3c:	460c      	mov	r4, r1
 8003f3e:	d454      	bmi.n	8003fea <__sflush_r+0xba>
 8003f40:	684b      	ldr	r3, [r1, #4]
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	dc02      	bgt.n	8003f4c <__sflush_r+0x1c>
 8003f46:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	dd48      	ble.n	8003fde <__sflush_r+0xae>
 8003f4c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003f4e:	2e00      	cmp	r6, #0
 8003f50:	d045      	beq.n	8003fde <__sflush_r+0xae>
 8003f52:	2300      	movs	r3, #0
 8003f54:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003f58:	682f      	ldr	r7, [r5, #0]
 8003f5a:	6a21      	ldr	r1, [r4, #32]
 8003f5c:	602b      	str	r3, [r5, #0]
 8003f5e:	d030      	beq.n	8003fc2 <__sflush_r+0x92>
 8003f60:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003f62:	89a3      	ldrh	r3, [r4, #12]
 8003f64:	0759      	lsls	r1, r3, #29
 8003f66:	d505      	bpl.n	8003f74 <__sflush_r+0x44>
 8003f68:	6863      	ldr	r3, [r4, #4]
 8003f6a:	1ad2      	subs	r2, r2, r3
 8003f6c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003f6e:	b10b      	cbz	r3, 8003f74 <__sflush_r+0x44>
 8003f70:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003f72:	1ad2      	subs	r2, r2, r3
 8003f74:	2300      	movs	r3, #0
 8003f76:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003f78:	6a21      	ldr	r1, [r4, #32]
 8003f7a:	4628      	mov	r0, r5
 8003f7c:	47b0      	blx	r6
 8003f7e:	1c43      	adds	r3, r0, #1
 8003f80:	89a3      	ldrh	r3, [r4, #12]
 8003f82:	d106      	bne.n	8003f92 <__sflush_r+0x62>
 8003f84:	6829      	ldr	r1, [r5, #0]
 8003f86:	291d      	cmp	r1, #29
 8003f88:	d82b      	bhi.n	8003fe2 <__sflush_r+0xb2>
 8003f8a:	4a2a      	ldr	r2, [pc, #168]	@ (8004034 <__sflush_r+0x104>)
 8003f8c:	40ca      	lsrs	r2, r1
 8003f8e:	07d6      	lsls	r6, r2, #31
 8003f90:	d527      	bpl.n	8003fe2 <__sflush_r+0xb2>
 8003f92:	2200      	movs	r2, #0
 8003f94:	04d9      	lsls	r1, r3, #19
 8003f96:	6062      	str	r2, [r4, #4]
 8003f98:	6922      	ldr	r2, [r4, #16]
 8003f9a:	6022      	str	r2, [r4, #0]
 8003f9c:	d504      	bpl.n	8003fa8 <__sflush_r+0x78>
 8003f9e:	1c42      	adds	r2, r0, #1
 8003fa0:	d101      	bne.n	8003fa6 <__sflush_r+0x76>
 8003fa2:	682b      	ldr	r3, [r5, #0]
 8003fa4:	b903      	cbnz	r3, 8003fa8 <__sflush_r+0x78>
 8003fa6:	6560      	str	r0, [r4, #84]	@ 0x54
 8003fa8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003faa:	602f      	str	r7, [r5, #0]
 8003fac:	b1b9      	cbz	r1, 8003fde <__sflush_r+0xae>
 8003fae:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003fb2:	4299      	cmp	r1, r3
 8003fb4:	d002      	beq.n	8003fbc <__sflush_r+0x8c>
 8003fb6:	4628      	mov	r0, r5
 8003fb8:	f7ff f9e0 	bl	800337c <_free_r>
 8003fbc:	2300      	movs	r3, #0
 8003fbe:	6363      	str	r3, [r4, #52]	@ 0x34
 8003fc0:	e00d      	b.n	8003fde <__sflush_r+0xae>
 8003fc2:	2301      	movs	r3, #1
 8003fc4:	4628      	mov	r0, r5
 8003fc6:	47b0      	blx	r6
 8003fc8:	4602      	mov	r2, r0
 8003fca:	1c50      	adds	r0, r2, #1
 8003fcc:	d1c9      	bne.n	8003f62 <__sflush_r+0x32>
 8003fce:	682b      	ldr	r3, [r5, #0]
 8003fd0:	2b00      	cmp	r3, #0
 8003fd2:	d0c6      	beq.n	8003f62 <__sflush_r+0x32>
 8003fd4:	2b1d      	cmp	r3, #29
 8003fd6:	d001      	beq.n	8003fdc <__sflush_r+0xac>
 8003fd8:	2b16      	cmp	r3, #22
 8003fda:	d11d      	bne.n	8004018 <__sflush_r+0xe8>
 8003fdc:	602f      	str	r7, [r5, #0]
 8003fde:	2000      	movs	r0, #0
 8003fe0:	e021      	b.n	8004026 <__sflush_r+0xf6>
 8003fe2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003fe6:	b21b      	sxth	r3, r3
 8003fe8:	e01a      	b.n	8004020 <__sflush_r+0xf0>
 8003fea:	690f      	ldr	r7, [r1, #16]
 8003fec:	2f00      	cmp	r7, #0
 8003fee:	d0f6      	beq.n	8003fde <__sflush_r+0xae>
 8003ff0:	0793      	lsls	r3, r2, #30
 8003ff2:	680e      	ldr	r6, [r1, #0]
 8003ff4:	600f      	str	r7, [r1, #0]
 8003ff6:	bf0c      	ite	eq
 8003ff8:	694b      	ldreq	r3, [r1, #20]
 8003ffa:	2300      	movne	r3, #0
 8003ffc:	eba6 0807 	sub.w	r8, r6, r7
 8004000:	608b      	str	r3, [r1, #8]
 8004002:	f1b8 0f00 	cmp.w	r8, #0
 8004006:	ddea      	ble.n	8003fde <__sflush_r+0xae>
 8004008:	4643      	mov	r3, r8
 800400a:	463a      	mov	r2, r7
 800400c:	6a21      	ldr	r1, [r4, #32]
 800400e:	4628      	mov	r0, r5
 8004010:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8004012:	47b0      	blx	r6
 8004014:	2800      	cmp	r0, #0
 8004016:	dc08      	bgt.n	800402a <__sflush_r+0xfa>
 8004018:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800401c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004020:	f04f 30ff 	mov.w	r0, #4294967295
 8004024:	81a3      	strh	r3, [r4, #12]
 8004026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800402a:	4407      	add	r7, r0
 800402c:	eba8 0800 	sub.w	r8, r8, r0
 8004030:	e7e7      	b.n	8004002 <__sflush_r+0xd2>
 8004032:	bf00      	nop
 8004034:	20400001 	.word	0x20400001

08004038 <_fflush_r>:
 8004038:	b538      	push	{r3, r4, r5, lr}
 800403a:	690b      	ldr	r3, [r1, #16]
 800403c:	4605      	mov	r5, r0
 800403e:	460c      	mov	r4, r1
 8004040:	b913      	cbnz	r3, 8004048 <_fflush_r+0x10>
 8004042:	2500      	movs	r5, #0
 8004044:	4628      	mov	r0, r5
 8004046:	bd38      	pop	{r3, r4, r5, pc}
 8004048:	b118      	cbz	r0, 8004052 <_fflush_r+0x1a>
 800404a:	6a03      	ldr	r3, [r0, #32]
 800404c:	b90b      	cbnz	r3, 8004052 <_fflush_r+0x1a>
 800404e:	f7fe f9fd 	bl	800244c <__sinit>
 8004052:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004056:	2b00      	cmp	r3, #0
 8004058:	d0f3      	beq.n	8004042 <_fflush_r+0xa>
 800405a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800405c:	07d0      	lsls	r0, r2, #31
 800405e:	d404      	bmi.n	800406a <_fflush_r+0x32>
 8004060:	0599      	lsls	r1, r3, #22
 8004062:	d402      	bmi.n	800406a <_fflush_r+0x32>
 8004064:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004066:	f7fe fb18 	bl	800269a <__retarget_lock_acquire_recursive>
 800406a:	4628      	mov	r0, r5
 800406c:	4621      	mov	r1, r4
 800406e:	f7ff ff5f 	bl	8003f30 <__sflush_r>
 8004072:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004074:	4605      	mov	r5, r0
 8004076:	07da      	lsls	r2, r3, #31
 8004078:	d4e4      	bmi.n	8004044 <_fflush_r+0xc>
 800407a:	89a3      	ldrh	r3, [r4, #12]
 800407c:	059b      	lsls	r3, r3, #22
 800407e:	d4e1      	bmi.n	8004044 <_fflush_r+0xc>
 8004080:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004082:	f7fe fb0b 	bl	800269c <__retarget_lock_release_recursive>
 8004086:	e7dd      	b.n	8004044 <_fflush_r+0xc>

08004088 <memmove>:
 8004088:	4288      	cmp	r0, r1
 800408a:	b510      	push	{r4, lr}
 800408c:	eb01 0402 	add.w	r4, r1, r2
 8004090:	d902      	bls.n	8004098 <memmove+0x10>
 8004092:	4284      	cmp	r4, r0
 8004094:	4623      	mov	r3, r4
 8004096:	d807      	bhi.n	80040a8 <memmove+0x20>
 8004098:	1e43      	subs	r3, r0, #1
 800409a:	42a1      	cmp	r1, r4
 800409c:	d008      	beq.n	80040b0 <memmove+0x28>
 800409e:	f811 2b01 	ldrb.w	r2, [r1], #1
 80040a2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80040a6:	e7f8      	b.n	800409a <memmove+0x12>
 80040a8:	4402      	add	r2, r0
 80040aa:	4601      	mov	r1, r0
 80040ac:	428a      	cmp	r2, r1
 80040ae:	d100      	bne.n	80040b2 <memmove+0x2a>
 80040b0:	bd10      	pop	{r4, pc}
 80040b2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80040b6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80040ba:	e7f7      	b.n	80040ac <memmove+0x24>

080040bc <_sbrk_r>:
 80040bc:	b538      	push	{r3, r4, r5, lr}
 80040be:	2300      	movs	r3, #0
 80040c0:	4d05      	ldr	r5, [pc, #20]	@ (80040d8 <_sbrk_r+0x1c>)
 80040c2:	4604      	mov	r4, r0
 80040c4:	4608      	mov	r0, r1
 80040c6:	602b      	str	r3, [r5, #0]
 80040c8:	f7fd fc6a 	bl	80019a0 <_sbrk>
 80040cc:	1c43      	adds	r3, r0, #1
 80040ce:	d102      	bne.n	80040d6 <_sbrk_r+0x1a>
 80040d0:	682b      	ldr	r3, [r5, #0]
 80040d2:	b103      	cbz	r3, 80040d6 <_sbrk_r+0x1a>
 80040d4:	6023      	str	r3, [r4, #0]
 80040d6:	bd38      	pop	{r3, r4, r5, pc}
 80040d8:	20000354 	.word	0x20000354

080040dc <memcpy>:
 80040dc:	440a      	add	r2, r1
 80040de:	1e43      	subs	r3, r0, #1
 80040e0:	4291      	cmp	r1, r2
 80040e2:	d100      	bne.n	80040e6 <memcpy+0xa>
 80040e4:	4770      	bx	lr
 80040e6:	b510      	push	{r4, lr}
 80040e8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80040ec:	4291      	cmp	r1, r2
 80040ee:	f803 4f01 	strb.w	r4, [r3, #1]!
 80040f2:	d1f9      	bne.n	80040e8 <memcpy+0xc>
 80040f4:	bd10      	pop	{r4, pc}
	...

080040f8 <__assert_func>:
 80040f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80040fa:	4614      	mov	r4, r2
 80040fc:	461a      	mov	r2, r3
 80040fe:	4b09      	ldr	r3, [pc, #36]	@ (8004124 <__assert_func+0x2c>)
 8004100:	4605      	mov	r5, r0
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	68d8      	ldr	r0, [r3, #12]
 8004106:	b14c      	cbz	r4, 800411c <__assert_func+0x24>
 8004108:	4b07      	ldr	r3, [pc, #28]	@ (8004128 <__assert_func+0x30>)
 800410a:	9100      	str	r1, [sp, #0]
 800410c:	4907      	ldr	r1, [pc, #28]	@ (800412c <__assert_func+0x34>)
 800410e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004112:	462b      	mov	r3, r5
 8004114:	f000 f870 	bl	80041f8 <fiprintf>
 8004118:	f000 f880 	bl	800421c <abort>
 800411c:	4b04      	ldr	r3, [pc, #16]	@ (8004130 <__assert_func+0x38>)
 800411e:	461c      	mov	r4, r3
 8004120:	e7f3      	b.n	800410a <__assert_func+0x12>
 8004122:	bf00      	nop
 8004124:	2000000c 	.word	0x2000000c
 8004128:	080048cb 	.word	0x080048cb
 800412c:	080048d8 	.word	0x080048d8
 8004130:	08004906 	.word	0x08004906

08004134 <_calloc_r>:
 8004134:	b570      	push	{r4, r5, r6, lr}
 8004136:	fba1 5402 	umull	r5, r4, r1, r2
 800413a:	b934      	cbnz	r4, 800414a <_calloc_r+0x16>
 800413c:	4629      	mov	r1, r5
 800413e:	f7ff f991 	bl	8003464 <_malloc_r>
 8004142:	4606      	mov	r6, r0
 8004144:	b928      	cbnz	r0, 8004152 <_calloc_r+0x1e>
 8004146:	4630      	mov	r0, r6
 8004148:	bd70      	pop	{r4, r5, r6, pc}
 800414a:	220c      	movs	r2, #12
 800414c:	2600      	movs	r6, #0
 800414e:	6002      	str	r2, [r0, #0]
 8004150:	e7f9      	b.n	8004146 <_calloc_r+0x12>
 8004152:	462a      	mov	r2, r5
 8004154:	4621      	mov	r1, r4
 8004156:	f7fe fa14 	bl	8002582 <memset>
 800415a:	e7f4      	b.n	8004146 <_calloc_r+0x12>

0800415c <__ascii_mbtowc>:
 800415c:	b082      	sub	sp, #8
 800415e:	b901      	cbnz	r1, 8004162 <__ascii_mbtowc+0x6>
 8004160:	a901      	add	r1, sp, #4
 8004162:	b142      	cbz	r2, 8004176 <__ascii_mbtowc+0x1a>
 8004164:	b14b      	cbz	r3, 800417a <__ascii_mbtowc+0x1e>
 8004166:	7813      	ldrb	r3, [r2, #0]
 8004168:	600b      	str	r3, [r1, #0]
 800416a:	7812      	ldrb	r2, [r2, #0]
 800416c:	1e10      	subs	r0, r2, #0
 800416e:	bf18      	it	ne
 8004170:	2001      	movne	r0, #1
 8004172:	b002      	add	sp, #8
 8004174:	4770      	bx	lr
 8004176:	4610      	mov	r0, r2
 8004178:	e7fb      	b.n	8004172 <__ascii_mbtowc+0x16>
 800417a:	f06f 0001 	mvn.w	r0, #1
 800417e:	e7f8      	b.n	8004172 <__ascii_mbtowc+0x16>

08004180 <_realloc_r>:
 8004180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004184:	4607      	mov	r7, r0
 8004186:	4614      	mov	r4, r2
 8004188:	460d      	mov	r5, r1
 800418a:	b921      	cbnz	r1, 8004196 <_realloc_r+0x16>
 800418c:	4611      	mov	r1, r2
 800418e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004192:	f7ff b967 	b.w	8003464 <_malloc_r>
 8004196:	b92a      	cbnz	r2, 80041a4 <_realloc_r+0x24>
 8004198:	4625      	mov	r5, r4
 800419a:	f7ff f8ef 	bl	800337c <_free_r>
 800419e:	4628      	mov	r0, r5
 80041a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041a4:	f000 f841 	bl	800422a <_malloc_usable_size_r>
 80041a8:	4284      	cmp	r4, r0
 80041aa:	4606      	mov	r6, r0
 80041ac:	d802      	bhi.n	80041b4 <_realloc_r+0x34>
 80041ae:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80041b2:	d8f4      	bhi.n	800419e <_realloc_r+0x1e>
 80041b4:	4621      	mov	r1, r4
 80041b6:	4638      	mov	r0, r7
 80041b8:	f7ff f954 	bl	8003464 <_malloc_r>
 80041bc:	4680      	mov	r8, r0
 80041be:	b908      	cbnz	r0, 80041c4 <_realloc_r+0x44>
 80041c0:	4645      	mov	r5, r8
 80041c2:	e7ec      	b.n	800419e <_realloc_r+0x1e>
 80041c4:	42b4      	cmp	r4, r6
 80041c6:	4622      	mov	r2, r4
 80041c8:	4629      	mov	r1, r5
 80041ca:	bf28      	it	cs
 80041cc:	4632      	movcs	r2, r6
 80041ce:	f7ff ff85 	bl	80040dc <memcpy>
 80041d2:	4629      	mov	r1, r5
 80041d4:	4638      	mov	r0, r7
 80041d6:	f7ff f8d1 	bl	800337c <_free_r>
 80041da:	e7f1      	b.n	80041c0 <_realloc_r+0x40>

080041dc <__ascii_wctomb>:
 80041dc:	4603      	mov	r3, r0
 80041de:	4608      	mov	r0, r1
 80041e0:	b141      	cbz	r1, 80041f4 <__ascii_wctomb+0x18>
 80041e2:	2aff      	cmp	r2, #255	@ 0xff
 80041e4:	d904      	bls.n	80041f0 <__ascii_wctomb+0x14>
 80041e6:	228a      	movs	r2, #138	@ 0x8a
 80041e8:	f04f 30ff 	mov.w	r0, #4294967295
 80041ec:	601a      	str	r2, [r3, #0]
 80041ee:	4770      	bx	lr
 80041f0:	2001      	movs	r0, #1
 80041f2:	700a      	strb	r2, [r1, #0]
 80041f4:	4770      	bx	lr
	...

080041f8 <fiprintf>:
 80041f8:	b40e      	push	{r1, r2, r3}
 80041fa:	b503      	push	{r0, r1, lr}
 80041fc:	ab03      	add	r3, sp, #12
 80041fe:	4601      	mov	r1, r0
 8004200:	4805      	ldr	r0, [pc, #20]	@ (8004218 <fiprintf+0x20>)
 8004202:	f853 2b04 	ldr.w	r2, [r3], #4
 8004206:	6800      	ldr	r0, [r0, #0]
 8004208:	9301      	str	r3, [sp, #4]
 800420a:	f000 f83f 	bl	800428c <_vfiprintf_r>
 800420e:	b002      	add	sp, #8
 8004210:	f85d eb04 	ldr.w	lr, [sp], #4
 8004214:	b003      	add	sp, #12
 8004216:	4770      	bx	lr
 8004218:	2000000c 	.word	0x2000000c

0800421c <abort>:
 800421c:	2006      	movs	r0, #6
 800421e:	b508      	push	{r3, lr}
 8004220:	f000 fa08 	bl	8004634 <raise>
 8004224:	2001      	movs	r0, #1
 8004226:	f7fd fb42 	bl	80018ae <_exit>

0800422a <_malloc_usable_size_r>:
 800422a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800422e:	1f18      	subs	r0, r3, #4
 8004230:	2b00      	cmp	r3, #0
 8004232:	bfbc      	itt	lt
 8004234:	580b      	ldrlt	r3, [r1, r0]
 8004236:	18c0      	addlt	r0, r0, r3
 8004238:	4770      	bx	lr

0800423a <__sfputc_r>:
 800423a:	6893      	ldr	r3, [r2, #8]
 800423c:	3b01      	subs	r3, #1
 800423e:	2b00      	cmp	r3, #0
 8004240:	b410      	push	{r4}
 8004242:	6093      	str	r3, [r2, #8]
 8004244:	da08      	bge.n	8004258 <__sfputc_r+0x1e>
 8004246:	6994      	ldr	r4, [r2, #24]
 8004248:	42a3      	cmp	r3, r4
 800424a:	db01      	blt.n	8004250 <__sfputc_r+0x16>
 800424c:	290a      	cmp	r1, #10
 800424e:	d103      	bne.n	8004258 <__sfputc_r+0x1e>
 8004250:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004254:	f000 b932 	b.w	80044bc <__swbuf_r>
 8004258:	6813      	ldr	r3, [r2, #0]
 800425a:	1c58      	adds	r0, r3, #1
 800425c:	6010      	str	r0, [r2, #0]
 800425e:	4608      	mov	r0, r1
 8004260:	7019      	strb	r1, [r3, #0]
 8004262:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004266:	4770      	bx	lr

08004268 <__sfputs_r>:
 8004268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800426a:	4606      	mov	r6, r0
 800426c:	460f      	mov	r7, r1
 800426e:	4614      	mov	r4, r2
 8004270:	18d5      	adds	r5, r2, r3
 8004272:	42ac      	cmp	r4, r5
 8004274:	d101      	bne.n	800427a <__sfputs_r+0x12>
 8004276:	2000      	movs	r0, #0
 8004278:	e007      	b.n	800428a <__sfputs_r+0x22>
 800427a:	463a      	mov	r2, r7
 800427c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004280:	4630      	mov	r0, r6
 8004282:	f7ff ffda 	bl	800423a <__sfputc_r>
 8004286:	1c43      	adds	r3, r0, #1
 8004288:	d1f3      	bne.n	8004272 <__sfputs_r+0xa>
 800428a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800428c <_vfiprintf_r>:
 800428c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004290:	460d      	mov	r5, r1
 8004292:	b09d      	sub	sp, #116	@ 0x74
 8004294:	4614      	mov	r4, r2
 8004296:	4698      	mov	r8, r3
 8004298:	4606      	mov	r6, r0
 800429a:	b118      	cbz	r0, 80042a4 <_vfiprintf_r+0x18>
 800429c:	6a03      	ldr	r3, [r0, #32]
 800429e:	b90b      	cbnz	r3, 80042a4 <_vfiprintf_r+0x18>
 80042a0:	f7fe f8d4 	bl	800244c <__sinit>
 80042a4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80042a6:	07d9      	lsls	r1, r3, #31
 80042a8:	d405      	bmi.n	80042b6 <_vfiprintf_r+0x2a>
 80042aa:	89ab      	ldrh	r3, [r5, #12]
 80042ac:	059a      	lsls	r2, r3, #22
 80042ae:	d402      	bmi.n	80042b6 <_vfiprintf_r+0x2a>
 80042b0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80042b2:	f7fe f9f2 	bl	800269a <__retarget_lock_acquire_recursive>
 80042b6:	89ab      	ldrh	r3, [r5, #12]
 80042b8:	071b      	lsls	r3, r3, #28
 80042ba:	d501      	bpl.n	80042c0 <_vfiprintf_r+0x34>
 80042bc:	692b      	ldr	r3, [r5, #16]
 80042be:	b99b      	cbnz	r3, 80042e8 <_vfiprintf_r+0x5c>
 80042c0:	4629      	mov	r1, r5
 80042c2:	4630      	mov	r0, r6
 80042c4:	f000 f938 	bl	8004538 <__swsetup_r>
 80042c8:	b170      	cbz	r0, 80042e8 <_vfiprintf_r+0x5c>
 80042ca:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80042cc:	07dc      	lsls	r4, r3, #31
 80042ce:	d504      	bpl.n	80042da <_vfiprintf_r+0x4e>
 80042d0:	f04f 30ff 	mov.w	r0, #4294967295
 80042d4:	b01d      	add	sp, #116	@ 0x74
 80042d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042da:	89ab      	ldrh	r3, [r5, #12]
 80042dc:	0598      	lsls	r0, r3, #22
 80042de:	d4f7      	bmi.n	80042d0 <_vfiprintf_r+0x44>
 80042e0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80042e2:	f7fe f9db 	bl	800269c <__retarget_lock_release_recursive>
 80042e6:	e7f3      	b.n	80042d0 <_vfiprintf_r+0x44>
 80042e8:	2300      	movs	r3, #0
 80042ea:	f8cd 800c 	str.w	r8, [sp, #12]
 80042ee:	f04f 0901 	mov.w	r9, #1
 80042f2:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 80044a8 <_vfiprintf_r+0x21c>
 80042f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80042f8:	2320      	movs	r3, #32
 80042fa:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80042fe:	2330      	movs	r3, #48	@ 0x30
 8004300:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004304:	4623      	mov	r3, r4
 8004306:	469a      	mov	sl, r3
 8004308:	f813 2b01 	ldrb.w	r2, [r3], #1
 800430c:	b10a      	cbz	r2, 8004312 <_vfiprintf_r+0x86>
 800430e:	2a25      	cmp	r2, #37	@ 0x25
 8004310:	d1f9      	bne.n	8004306 <_vfiprintf_r+0x7a>
 8004312:	ebba 0b04 	subs.w	fp, sl, r4
 8004316:	d00b      	beq.n	8004330 <_vfiprintf_r+0xa4>
 8004318:	465b      	mov	r3, fp
 800431a:	4622      	mov	r2, r4
 800431c:	4629      	mov	r1, r5
 800431e:	4630      	mov	r0, r6
 8004320:	f7ff ffa2 	bl	8004268 <__sfputs_r>
 8004324:	3001      	adds	r0, #1
 8004326:	f000 80a7 	beq.w	8004478 <_vfiprintf_r+0x1ec>
 800432a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800432c:	445a      	add	r2, fp
 800432e:	9209      	str	r2, [sp, #36]	@ 0x24
 8004330:	f89a 3000 	ldrb.w	r3, [sl]
 8004334:	2b00      	cmp	r3, #0
 8004336:	f000 809f 	beq.w	8004478 <_vfiprintf_r+0x1ec>
 800433a:	2300      	movs	r3, #0
 800433c:	f04f 32ff 	mov.w	r2, #4294967295
 8004340:	f10a 0a01 	add.w	sl, sl, #1
 8004344:	9304      	str	r3, [sp, #16]
 8004346:	9307      	str	r3, [sp, #28]
 8004348:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800434c:	931a      	str	r3, [sp, #104]	@ 0x68
 800434e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004352:	4654      	mov	r4, sl
 8004354:	2205      	movs	r2, #5
 8004356:	4854      	ldr	r0, [pc, #336]	@ (80044a8 <_vfiprintf_r+0x21c>)
 8004358:	f814 1b01 	ldrb.w	r1, [r4], #1
 800435c:	f7fe f99f 	bl	800269e <memchr>
 8004360:	9a04      	ldr	r2, [sp, #16]
 8004362:	b9d8      	cbnz	r0, 800439c <_vfiprintf_r+0x110>
 8004364:	06d1      	lsls	r1, r2, #27
 8004366:	bf44      	itt	mi
 8004368:	2320      	movmi	r3, #32
 800436a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800436e:	0713      	lsls	r3, r2, #28
 8004370:	bf44      	itt	mi
 8004372:	232b      	movmi	r3, #43	@ 0x2b
 8004374:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004378:	f89a 3000 	ldrb.w	r3, [sl]
 800437c:	2b2a      	cmp	r3, #42	@ 0x2a
 800437e:	d015      	beq.n	80043ac <_vfiprintf_r+0x120>
 8004380:	9a07      	ldr	r2, [sp, #28]
 8004382:	4654      	mov	r4, sl
 8004384:	2000      	movs	r0, #0
 8004386:	f04f 0c0a 	mov.w	ip, #10
 800438a:	4621      	mov	r1, r4
 800438c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004390:	3b30      	subs	r3, #48	@ 0x30
 8004392:	2b09      	cmp	r3, #9
 8004394:	d94b      	bls.n	800442e <_vfiprintf_r+0x1a2>
 8004396:	b1b0      	cbz	r0, 80043c6 <_vfiprintf_r+0x13a>
 8004398:	9207      	str	r2, [sp, #28]
 800439a:	e014      	b.n	80043c6 <_vfiprintf_r+0x13a>
 800439c:	eba0 0308 	sub.w	r3, r0, r8
 80043a0:	46a2      	mov	sl, r4
 80043a2:	fa09 f303 	lsl.w	r3, r9, r3
 80043a6:	4313      	orrs	r3, r2
 80043a8:	9304      	str	r3, [sp, #16]
 80043aa:	e7d2      	b.n	8004352 <_vfiprintf_r+0xc6>
 80043ac:	9b03      	ldr	r3, [sp, #12]
 80043ae:	1d19      	adds	r1, r3, #4
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	2b00      	cmp	r3, #0
 80043b4:	9103      	str	r1, [sp, #12]
 80043b6:	bfbb      	ittet	lt
 80043b8:	425b      	neglt	r3, r3
 80043ba:	f042 0202 	orrlt.w	r2, r2, #2
 80043be:	9307      	strge	r3, [sp, #28]
 80043c0:	9307      	strlt	r3, [sp, #28]
 80043c2:	bfb8      	it	lt
 80043c4:	9204      	strlt	r2, [sp, #16]
 80043c6:	7823      	ldrb	r3, [r4, #0]
 80043c8:	2b2e      	cmp	r3, #46	@ 0x2e
 80043ca:	d10a      	bne.n	80043e2 <_vfiprintf_r+0x156>
 80043cc:	7863      	ldrb	r3, [r4, #1]
 80043ce:	2b2a      	cmp	r3, #42	@ 0x2a
 80043d0:	d132      	bne.n	8004438 <_vfiprintf_r+0x1ac>
 80043d2:	9b03      	ldr	r3, [sp, #12]
 80043d4:	3402      	adds	r4, #2
 80043d6:	1d1a      	adds	r2, r3, #4
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80043de:	9203      	str	r2, [sp, #12]
 80043e0:	9305      	str	r3, [sp, #20]
 80043e2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80044b8 <_vfiprintf_r+0x22c>
 80043e6:	2203      	movs	r2, #3
 80043e8:	7821      	ldrb	r1, [r4, #0]
 80043ea:	4650      	mov	r0, sl
 80043ec:	f7fe f957 	bl	800269e <memchr>
 80043f0:	b138      	cbz	r0, 8004402 <_vfiprintf_r+0x176>
 80043f2:	eba0 000a 	sub.w	r0, r0, sl
 80043f6:	2240      	movs	r2, #64	@ 0x40
 80043f8:	9b04      	ldr	r3, [sp, #16]
 80043fa:	3401      	adds	r4, #1
 80043fc:	4082      	lsls	r2, r0
 80043fe:	4313      	orrs	r3, r2
 8004400:	9304      	str	r3, [sp, #16]
 8004402:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004406:	2206      	movs	r2, #6
 8004408:	4828      	ldr	r0, [pc, #160]	@ (80044ac <_vfiprintf_r+0x220>)
 800440a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800440e:	f7fe f946 	bl	800269e <memchr>
 8004412:	2800      	cmp	r0, #0
 8004414:	d03f      	beq.n	8004496 <_vfiprintf_r+0x20a>
 8004416:	4b26      	ldr	r3, [pc, #152]	@ (80044b0 <_vfiprintf_r+0x224>)
 8004418:	bb1b      	cbnz	r3, 8004462 <_vfiprintf_r+0x1d6>
 800441a:	9b03      	ldr	r3, [sp, #12]
 800441c:	3307      	adds	r3, #7
 800441e:	f023 0307 	bic.w	r3, r3, #7
 8004422:	3308      	adds	r3, #8
 8004424:	9303      	str	r3, [sp, #12]
 8004426:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004428:	443b      	add	r3, r7
 800442a:	9309      	str	r3, [sp, #36]	@ 0x24
 800442c:	e76a      	b.n	8004304 <_vfiprintf_r+0x78>
 800442e:	fb0c 3202 	mla	r2, ip, r2, r3
 8004432:	460c      	mov	r4, r1
 8004434:	2001      	movs	r0, #1
 8004436:	e7a8      	b.n	800438a <_vfiprintf_r+0xfe>
 8004438:	2300      	movs	r3, #0
 800443a:	3401      	adds	r4, #1
 800443c:	f04f 0c0a 	mov.w	ip, #10
 8004440:	4619      	mov	r1, r3
 8004442:	9305      	str	r3, [sp, #20]
 8004444:	4620      	mov	r0, r4
 8004446:	f810 2b01 	ldrb.w	r2, [r0], #1
 800444a:	3a30      	subs	r2, #48	@ 0x30
 800444c:	2a09      	cmp	r2, #9
 800444e:	d903      	bls.n	8004458 <_vfiprintf_r+0x1cc>
 8004450:	2b00      	cmp	r3, #0
 8004452:	d0c6      	beq.n	80043e2 <_vfiprintf_r+0x156>
 8004454:	9105      	str	r1, [sp, #20]
 8004456:	e7c4      	b.n	80043e2 <_vfiprintf_r+0x156>
 8004458:	fb0c 2101 	mla	r1, ip, r1, r2
 800445c:	4604      	mov	r4, r0
 800445e:	2301      	movs	r3, #1
 8004460:	e7f0      	b.n	8004444 <_vfiprintf_r+0x1b8>
 8004462:	ab03      	add	r3, sp, #12
 8004464:	462a      	mov	r2, r5
 8004466:	a904      	add	r1, sp, #16
 8004468:	4630      	mov	r0, r6
 800446a:	9300      	str	r3, [sp, #0]
 800446c:	4b11      	ldr	r3, [pc, #68]	@ (80044b4 <_vfiprintf_r+0x228>)
 800446e:	f7fd fba7 	bl	8001bc0 <_printf_float>
 8004472:	4607      	mov	r7, r0
 8004474:	1c78      	adds	r0, r7, #1
 8004476:	d1d6      	bne.n	8004426 <_vfiprintf_r+0x19a>
 8004478:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800447a:	07d9      	lsls	r1, r3, #31
 800447c:	d405      	bmi.n	800448a <_vfiprintf_r+0x1fe>
 800447e:	89ab      	ldrh	r3, [r5, #12]
 8004480:	059a      	lsls	r2, r3, #22
 8004482:	d402      	bmi.n	800448a <_vfiprintf_r+0x1fe>
 8004484:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004486:	f7fe f909 	bl	800269c <__retarget_lock_release_recursive>
 800448a:	89ab      	ldrh	r3, [r5, #12]
 800448c:	065b      	lsls	r3, r3, #25
 800448e:	f53f af1f 	bmi.w	80042d0 <_vfiprintf_r+0x44>
 8004492:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004494:	e71e      	b.n	80042d4 <_vfiprintf_r+0x48>
 8004496:	ab03      	add	r3, sp, #12
 8004498:	462a      	mov	r2, r5
 800449a:	a904      	add	r1, sp, #16
 800449c:	4630      	mov	r0, r6
 800449e:	9300      	str	r3, [sp, #0]
 80044a0:	4b04      	ldr	r3, [pc, #16]	@ (80044b4 <_vfiprintf_r+0x228>)
 80044a2:	f7fd fe29 	bl	80020f8 <_printf_i>
 80044a6:	e7e4      	b.n	8004472 <_vfiprintf_r+0x1e6>
 80044a8:	080048b0 	.word	0x080048b0
 80044ac:	080048ba 	.word	0x080048ba
 80044b0:	08001bc1 	.word	0x08001bc1
 80044b4:	08004269 	.word	0x08004269
 80044b8:	080048b6 	.word	0x080048b6

080044bc <__swbuf_r>:
 80044bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044be:	460e      	mov	r6, r1
 80044c0:	4614      	mov	r4, r2
 80044c2:	4605      	mov	r5, r0
 80044c4:	b118      	cbz	r0, 80044ce <__swbuf_r+0x12>
 80044c6:	6a03      	ldr	r3, [r0, #32]
 80044c8:	b90b      	cbnz	r3, 80044ce <__swbuf_r+0x12>
 80044ca:	f7fd ffbf 	bl	800244c <__sinit>
 80044ce:	69a3      	ldr	r3, [r4, #24]
 80044d0:	60a3      	str	r3, [r4, #8]
 80044d2:	89a3      	ldrh	r3, [r4, #12]
 80044d4:	071a      	lsls	r2, r3, #28
 80044d6:	d501      	bpl.n	80044dc <__swbuf_r+0x20>
 80044d8:	6923      	ldr	r3, [r4, #16]
 80044da:	b943      	cbnz	r3, 80044ee <__swbuf_r+0x32>
 80044dc:	4621      	mov	r1, r4
 80044de:	4628      	mov	r0, r5
 80044e0:	f000 f82a 	bl	8004538 <__swsetup_r>
 80044e4:	b118      	cbz	r0, 80044ee <__swbuf_r+0x32>
 80044e6:	f04f 37ff 	mov.w	r7, #4294967295
 80044ea:	4638      	mov	r0, r7
 80044ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80044ee:	6823      	ldr	r3, [r4, #0]
 80044f0:	b2f6      	uxtb	r6, r6
 80044f2:	6922      	ldr	r2, [r4, #16]
 80044f4:	4637      	mov	r7, r6
 80044f6:	1a98      	subs	r0, r3, r2
 80044f8:	6963      	ldr	r3, [r4, #20]
 80044fa:	4283      	cmp	r3, r0
 80044fc:	dc05      	bgt.n	800450a <__swbuf_r+0x4e>
 80044fe:	4621      	mov	r1, r4
 8004500:	4628      	mov	r0, r5
 8004502:	f7ff fd99 	bl	8004038 <_fflush_r>
 8004506:	2800      	cmp	r0, #0
 8004508:	d1ed      	bne.n	80044e6 <__swbuf_r+0x2a>
 800450a:	68a3      	ldr	r3, [r4, #8]
 800450c:	3b01      	subs	r3, #1
 800450e:	60a3      	str	r3, [r4, #8]
 8004510:	6823      	ldr	r3, [r4, #0]
 8004512:	1c5a      	adds	r2, r3, #1
 8004514:	6022      	str	r2, [r4, #0]
 8004516:	701e      	strb	r6, [r3, #0]
 8004518:	1c43      	adds	r3, r0, #1
 800451a:	6962      	ldr	r2, [r4, #20]
 800451c:	429a      	cmp	r2, r3
 800451e:	d004      	beq.n	800452a <__swbuf_r+0x6e>
 8004520:	89a3      	ldrh	r3, [r4, #12]
 8004522:	07db      	lsls	r3, r3, #31
 8004524:	d5e1      	bpl.n	80044ea <__swbuf_r+0x2e>
 8004526:	2e0a      	cmp	r6, #10
 8004528:	d1df      	bne.n	80044ea <__swbuf_r+0x2e>
 800452a:	4621      	mov	r1, r4
 800452c:	4628      	mov	r0, r5
 800452e:	f7ff fd83 	bl	8004038 <_fflush_r>
 8004532:	2800      	cmp	r0, #0
 8004534:	d0d9      	beq.n	80044ea <__swbuf_r+0x2e>
 8004536:	e7d6      	b.n	80044e6 <__swbuf_r+0x2a>

08004538 <__swsetup_r>:
 8004538:	b538      	push	{r3, r4, r5, lr}
 800453a:	4b29      	ldr	r3, [pc, #164]	@ (80045e0 <__swsetup_r+0xa8>)
 800453c:	4605      	mov	r5, r0
 800453e:	460c      	mov	r4, r1
 8004540:	6818      	ldr	r0, [r3, #0]
 8004542:	b118      	cbz	r0, 800454c <__swsetup_r+0x14>
 8004544:	6a03      	ldr	r3, [r0, #32]
 8004546:	b90b      	cbnz	r3, 800454c <__swsetup_r+0x14>
 8004548:	f7fd ff80 	bl	800244c <__sinit>
 800454c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004550:	0719      	lsls	r1, r3, #28
 8004552:	d422      	bmi.n	800459a <__swsetup_r+0x62>
 8004554:	06da      	lsls	r2, r3, #27
 8004556:	d407      	bmi.n	8004568 <__swsetup_r+0x30>
 8004558:	2209      	movs	r2, #9
 800455a:	602a      	str	r2, [r5, #0]
 800455c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004560:	f04f 30ff 	mov.w	r0, #4294967295
 8004564:	81a3      	strh	r3, [r4, #12]
 8004566:	e033      	b.n	80045d0 <__swsetup_r+0x98>
 8004568:	0758      	lsls	r0, r3, #29
 800456a:	d512      	bpl.n	8004592 <__swsetup_r+0x5a>
 800456c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800456e:	b141      	cbz	r1, 8004582 <__swsetup_r+0x4a>
 8004570:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004574:	4299      	cmp	r1, r3
 8004576:	d002      	beq.n	800457e <__swsetup_r+0x46>
 8004578:	4628      	mov	r0, r5
 800457a:	f7fe feff 	bl	800337c <_free_r>
 800457e:	2300      	movs	r3, #0
 8004580:	6363      	str	r3, [r4, #52]	@ 0x34
 8004582:	89a3      	ldrh	r3, [r4, #12]
 8004584:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004588:	81a3      	strh	r3, [r4, #12]
 800458a:	2300      	movs	r3, #0
 800458c:	6063      	str	r3, [r4, #4]
 800458e:	6923      	ldr	r3, [r4, #16]
 8004590:	6023      	str	r3, [r4, #0]
 8004592:	89a3      	ldrh	r3, [r4, #12]
 8004594:	f043 0308 	orr.w	r3, r3, #8
 8004598:	81a3      	strh	r3, [r4, #12]
 800459a:	6923      	ldr	r3, [r4, #16]
 800459c:	b94b      	cbnz	r3, 80045b2 <__swsetup_r+0x7a>
 800459e:	89a3      	ldrh	r3, [r4, #12]
 80045a0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80045a4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80045a8:	d003      	beq.n	80045b2 <__swsetup_r+0x7a>
 80045aa:	4621      	mov	r1, r4
 80045ac:	4628      	mov	r0, r5
 80045ae:	f000 f882 	bl	80046b6 <__smakebuf_r>
 80045b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80045b6:	f013 0201 	ands.w	r2, r3, #1
 80045ba:	d00a      	beq.n	80045d2 <__swsetup_r+0x9a>
 80045bc:	2200      	movs	r2, #0
 80045be:	60a2      	str	r2, [r4, #8]
 80045c0:	6962      	ldr	r2, [r4, #20]
 80045c2:	4252      	negs	r2, r2
 80045c4:	61a2      	str	r2, [r4, #24]
 80045c6:	6922      	ldr	r2, [r4, #16]
 80045c8:	b942      	cbnz	r2, 80045dc <__swsetup_r+0xa4>
 80045ca:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80045ce:	d1c5      	bne.n	800455c <__swsetup_r+0x24>
 80045d0:	bd38      	pop	{r3, r4, r5, pc}
 80045d2:	0799      	lsls	r1, r3, #30
 80045d4:	bf58      	it	pl
 80045d6:	6962      	ldrpl	r2, [r4, #20]
 80045d8:	60a2      	str	r2, [r4, #8]
 80045da:	e7f4      	b.n	80045c6 <__swsetup_r+0x8e>
 80045dc:	2000      	movs	r0, #0
 80045de:	e7f7      	b.n	80045d0 <__swsetup_r+0x98>
 80045e0:	2000000c 	.word	0x2000000c

080045e4 <_raise_r>:
 80045e4:	291f      	cmp	r1, #31
 80045e6:	b538      	push	{r3, r4, r5, lr}
 80045e8:	4605      	mov	r5, r0
 80045ea:	460c      	mov	r4, r1
 80045ec:	d904      	bls.n	80045f8 <_raise_r+0x14>
 80045ee:	2316      	movs	r3, #22
 80045f0:	6003      	str	r3, [r0, #0]
 80045f2:	f04f 30ff 	mov.w	r0, #4294967295
 80045f6:	bd38      	pop	{r3, r4, r5, pc}
 80045f8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80045fa:	b112      	cbz	r2, 8004602 <_raise_r+0x1e>
 80045fc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004600:	b94b      	cbnz	r3, 8004616 <_raise_r+0x32>
 8004602:	4628      	mov	r0, r5
 8004604:	f000 f830 	bl	8004668 <_getpid_r>
 8004608:	4622      	mov	r2, r4
 800460a:	4601      	mov	r1, r0
 800460c:	4628      	mov	r0, r5
 800460e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004612:	f000 b817 	b.w	8004644 <_kill_r>
 8004616:	2b01      	cmp	r3, #1
 8004618:	d00a      	beq.n	8004630 <_raise_r+0x4c>
 800461a:	1c59      	adds	r1, r3, #1
 800461c:	d103      	bne.n	8004626 <_raise_r+0x42>
 800461e:	2316      	movs	r3, #22
 8004620:	6003      	str	r3, [r0, #0]
 8004622:	2001      	movs	r0, #1
 8004624:	e7e7      	b.n	80045f6 <_raise_r+0x12>
 8004626:	2100      	movs	r1, #0
 8004628:	4620      	mov	r0, r4
 800462a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800462e:	4798      	blx	r3
 8004630:	2000      	movs	r0, #0
 8004632:	e7e0      	b.n	80045f6 <_raise_r+0x12>

08004634 <raise>:
 8004634:	4b02      	ldr	r3, [pc, #8]	@ (8004640 <raise+0xc>)
 8004636:	4601      	mov	r1, r0
 8004638:	6818      	ldr	r0, [r3, #0]
 800463a:	f7ff bfd3 	b.w	80045e4 <_raise_r>
 800463e:	bf00      	nop
 8004640:	2000000c 	.word	0x2000000c

08004644 <_kill_r>:
 8004644:	b538      	push	{r3, r4, r5, lr}
 8004646:	2300      	movs	r3, #0
 8004648:	4d06      	ldr	r5, [pc, #24]	@ (8004664 <_kill_r+0x20>)
 800464a:	4604      	mov	r4, r0
 800464c:	4608      	mov	r0, r1
 800464e:	4611      	mov	r1, r2
 8004650:	602b      	str	r3, [r5, #0]
 8004652:	f7fd f91c 	bl	800188e <_kill>
 8004656:	1c43      	adds	r3, r0, #1
 8004658:	d102      	bne.n	8004660 <_kill_r+0x1c>
 800465a:	682b      	ldr	r3, [r5, #0]
 800465c:	b103      	cbz	r3, 8004660 <_kill_r+0x1c>
 800465e:	6023      	str	r3, [r4, #0]
 8004660:	bd38      	pop	{r3, r4, r5, pc}
 8004662:	bf00      	nop
 8004664:	20000354 	.word	0x20000354

08004668 <_getpid_r>:
 8004668:	f7fd b909 	b.w	800187e <_getpid>

0800466c <__swhatbuf_r>:
 800466c:	b570      	push	{r4, r5, r6, lr}
 800466e:	460c      	mov	r4, r1
 8004670:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004674:	b096      	sub	sp, #88	@ 0x58
 8004676:	4615      	mov	r5, r2
 8004678:	2900      	cmp	r1, #0
 800467a:	461e      	mov	r6, r3
 800467c:	da0c      	bge.n	8004698 <__swhatbuf_r+0x2c>
 800467e:	89a3      	ldrh	r3, [r4, #12]
 8004680:	2100      	movs	r1, #0
 8004682:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004686:	bf14      	ite	ne
 8004688:	2340      	movne	r3, #64	@ 0x40
 800468a:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800468e:	2000      	movs	r0, #0
 8004690:	6031      	str	r1, [r6, #0]
 8004692:	602b      	str	r3, [r5, #0]
 8004694:	b016      	add	sp, #88	@ 0x58
 8004696:	bd70      	pop	{r4, r5, r6, pc}
 8004698:	466a      	mov	r2, sp
 800469a:	f000 f849 	bl	8004730 <_fstat_r>
 800469e:	2800      	cmp	r0, #0
 80046a0:	dbed      	blt.n	800467e <__swhatbuf_r+0x12>
 80046a2:	9901      	ldr	r1, [sp, #4]
 80046a4:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80046a8:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80046ac:	4259      	negs	r1, r3
 80046ae:	4159      	adcs	r1, r3
 80046b0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80046b4:	e7eb      	b.n	800468e <__swhatbuf_r+0x22>

080046b6 <__smakebuf_r>:
 80046b6:	898b      	ldrh	r3, [r1, #12]
 80046b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80046ba:	079d      	lsls	r5, r3, #30
 80046bc:	4606      	mov	r6, r0
 80046be:	460c      	mov	r4, r1
 80046c0:	d507      	bpl.n	80046d2 <__smakebuf_r+0x1c>
 80046c2:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80046c6:	6023      	str	r3, [r4, #0]
 80046c8:	6123      	str	r3, [r4, #16]
 80046ca:	2301      	movs	r3, #1
 80046cc:	6163      	str	r3, [r4, #20]
 80046ce:	b003      	add	sp, #12
 80046d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80046d2:	ab01      	add	r3, sp, #4
 80046d4:	466a      	mov	r2, sp
 80046d6:	f7ff ffc9 	bl	800466c <__swhatbuf_r>
 80046da:	9f00      	ldr	r7, [sp, #0]
 80046dc:	4605      	mov	r5, r0
 80046de:	4630      	mov	r0, r6
 80046e0:	4639      	mov	r1, r7
 80046e2:	f7fe febf 	bl	8003464 <_malloc_r>
 80046e6:	b948      	cbnz	r0, 80046fc <__smakebuf_r+0x46>
 80046e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80046ec:	059a      	lsls	r2, r3, #22
 80046ee:	d4ee      	bmi.n	80046ce <__smakebuf_r+0x18>
 80046f0:	f023 0303 	bic.w	r3, r3, #3
 80046f4:	f043 0302 	orr.w	r3, r3, #2
 80046f8:	81a3      	strh	r3, [r4, #12]
 80046fa:	e7e2      	b.n	80046c2 <__smakebuf_r+0xc>
 80046fc:	89a3      	ldrh	r3, [r4, #12]
 80046fe:	6020      	str	r0, [r4, #0]
 8004700:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004704:	81a3      	strh	r3, [r4, #12]
 8004706:	9b01      	ldr	r3, [sp, #4]
 8004708:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800470c:	b15b      	cbz	r3, 8004726 <__smakebuf_r+0x70>
 800470e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004712:	4630      	mov	r0, r6
 8004714:	f000 f81e 	bl	8004754 <_isatty_r>
 8004718:	b128      	cbz	r0, 8004726 <__smakebuf_r+0x70>
 800471a:	89a3      	ldrh	r3, [r4, #12]
 800471c:	f023 0303 	bic.w	r3, r3, #3
 8004720:	f043 0301 	orr.w	r3, r3, #1
 8004724:	81a3      	strh	r3, [r4, #12]
 8004726:	89a3      	ldrh	r3, [r4, #12]
 8004728:	431d      	orrs	r5, r3
 800472a:	81a5      	strh	r5, [r4, #12]
 800472c:	e7cf      	b.n	80046ce <__smakebuf_r+0x18>
	...

08004730 <_fstat_r>:
 8004730:	b538      	push	{r3, r4, r5, lr}
 8004732:	2300      	movs	r3, #0
 8004734:	4d06      	ldr	r5, [pc, #24]	@ (8004750 <_fstat_r+0x20>)
 8004736:	4604      	mov	r4, r0
 8004738:	4608      	mov	r0, r1
 800473a:	4611      	mov	r1, r2
 800473c:	602b      	str	r3, [r5, #0]
 800473e:	f7fd f906 	bl	800194e <_fstat>
 8004742:	1c43      	adds	r3, r0, #1
 8004744:	d102      	bne.n	800474c <_fstat_r+0x1c>
 8004746:	682b      	ldr	r3, [r5, #0]
 8004748:	b103      	cbz	r3, 800474c <_fstat_r+0x1c>
 800474a:	6023      	str	r3, [r4, #0]
 800474c:	bd38      	pop	{r3, r4, r5, pc}
 800474e:	bf00      	nop
 8004750:	20000354 	.word	0x20000354

08004754 <_isatty_r>:
 8004754:	b538      	push	{r3, r4, r5, lr}
 8004756:	2300      	movs	r3, #0
 8004758:	4d05      	ldr	r5, [pc, #20]	@ (8004770 <_isatty_r+0x1c>)
 800475a:	4604      	mov	r4, r0
 800475c:	4608      	mov	r0, r1
 800475e:	602b      	str	r3, [r5, #0]
 8004760:	f7fd f905 	bl	800196e <_isatty>
 8004764:	1c43      	adds	r3, r0, #1
 8004766:	d102      	bne.n	800476e <_isatty_r+0x1a>
 8004768:	682b      	ldr	r3, [r5, #0]
 800476a:	b103      	cbz	r3, 800476e <_isatty_r+0x1a>
 800476c:	6023      	str	r3, [r4, #0]
 800476e:	bd38      	pop	{r3, r4, r5, pc}
 8004770:	20000354 	.word	0x20000354

08004774 <_init>:
 8004774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004776:	bf00      	nop
 8004778:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800477a:	bc08      	pop	{r3}
 800477c:	469e      	mov	lr, r3
 800477e:	4770      	bx	lr

08004780 <_fini>:
 8004780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004782:	bf00      	nop
 8004784:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004786:	bc08      	pop	{r3}
 8004788:	469e      	mov	lr, r3
 800478a:	4770      	bx	lr
